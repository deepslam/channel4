/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./app/bg/bootstrap.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./app/bg/ContentEvents.ts":
/*!*********************************!*\
  !*** ./app/bg/ContentEvents.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentEvents = void 0;
var ContentEvents;
(function (ContentEvents) {
    ContentEvents["POPUP_COUNT"] = "POPUP_COUNTER";
    ContentEvents["POPUP_GET_COUNTER"] = "POPUP_GET_COUNTER";
    ContentEvents["REDIRECT_TO_SAFE_PAGE"] = "REDIRECT_TO_SAFE_PAGE";
    ContentEvents["GET_COUNTRY_RESTRICTION_STATE"] = "GET_COUNTRY_RESTRICTION_STATE";
})(ContentEvents = exports.ContentEvents || (exports.ContentEvents = {}));


/***/ }),

/***/ "./app/bg/MigrationModule_1_11.0.ts":
/*!******************************************!*\
  !*** ./app/bg/MigrationModule_1_11.0.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MigrationModule_1_11_0 = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
/**
 * this is migration module from version v1.10.2 to v1.11.0
 */
class MigrationModule_1_11_0 extends src_1.MarioModule {
    name() {
        return 'MigrationModule_1_11_0';
    }
    static use(mario, storageService, policyService, adBlockerService) {
        return __awaiter(this, void 0, void 0, function* () {
            const options = { storageService, policyService, adBlockerService };
            yield mario.registerModule(MigrationModule_1_11_0, options);
        });
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            const storageService = options.storageService;
            const key = 'IS_HANDLED_MIGRATION_V1_11_0';
            if (!(yield storageService.has(key))) {
                yield storageService.set(key, 'true');
                const policyService = options.policyService;
                const adBlockerService = options.adBlockerService;
                yield this.migrate(storageService, policyService, adBlockerService);
            }
        });
    }
    migrate(storageService, policyService, adBlockerService) {
        return __awaiter(this, void 0, void 0, function* () {
            this.mario().logger().log('run migration to v1.11.0');
            const value = yield storageService.get('POLICY');
            const mapper = {
                NOT_ACCEPTED: 'REJECT',
                ACCEPTED: 'AGREE',
                ACCEPTED_BY_OLD_USER: 'AGREE',
                ACCEPTED_BY_DEFAULT: 'AGREE'
            };
            if (mapper[value]) {
                yield storageService.set('POLICY', mapper[value]);
            }
            //
            if ((yield policyService.isAgreed()) && (yield !adBlockerService.isEnabled())) {
                this.mario().logger().log('Policy is agreed');
                yield adBlockerService.enable();
            }
        });
    }
}
exports.MigrationModule_1_11_0 = MigrationModule_1_11_0;


/***/ }),

/***/ "./app/bg/MigrationModule_1_4.0.ts":
/*!*****************************************!*\
  !*** ./app/bg/MigrationModule_1_4.0.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MigrationModule_1_4_0 = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
class MigrationModule_1_4_0 extends src_1.MarioModule {
    name() {
        return 'MigrationModule';
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this.mario().registerService(src_1.MARIO_TYPES.STORAGE_SERVICE, src_1.StorageService);
            const storage = this.mario().getService(src_1.MARIO_TYPES.STORAGE_SERVICE);
            yield this.migrate(storage, 'URBAN_STORAGE_LOCATIONS');
            yield this.migrate(storage, 'URBAN_STORAGE_HISTORY_PREV');
            return;
        });
    }
    migrate(storage, key) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!(yield storage.has(key))) {
                return;
            }
            const str = yield storage.get(key);
            const earth = JSON.parse(str);
            const keys = Object.keys(earth);
            this.addWeight(earth[keys[0]]);
            yield storage.set(`${key}_V2`, JSON.stringify(earth));
            yield storage.remove([key]);
        });
    }
    addWeight(node) {
        const configs = node.location.configs;
        configs.forEach(config => config.weight = 10);
        for (const key in node.nodes) {
            if (node.nodes.hasOwnProperty(key)) {
                this.addWeight(node.nodes[key]);
            }
        }
    }
}
exports.MigrationModule_1_4_0 = MigrationModule_1_4_0;


/***/ }),

/***/ "./app/bg/MigrationModule_2_5.8.ts":
/*!*****************************************!*\
  !*** ./app/bg/MigrationModule_2_5.8.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MigrationModule_2_5_8 = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const PoliciesStorage_1 = __webpack_require__(/*! ./modules/app-module/storages/PoliciesStorage */ "./app/bg/modules/app-module/storages/PoliciesStorage.ts");
/**
 * this is migration module from version v2.5.6 to v2.5.8
 */
class MigrationModule_2_5_8 extends src_1.MarioModule {
    name() {
        return 'MigrationModule_2_5_8';
    }
    static use(mario, storageService) {
        return __awaiter(this, void 0, void 0, function* () {
            const options = { storageService };
            yield mario.registerModule(MigrationModule_2_5_8, options);
        });
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            const storageService = options.storageService;
            const key = 'IS_HANDLED_MIGRATION_V2_5_8';
            if (!(yield storageService.has(key))) {
                yield storageService.set(key, 'true');
                yield this.migrate(storageService);
            }
        });
    }
    migrate(storageService) {
        return __awaiter(this, void 0, void 0, function* () {
            this.mario().logger().log('run migration to v2.5.8');
            const value = yield storageService.get('POLICY');
            if (!value) {
                return;
            }
            yield storageService.set(PoliciesStorage_1.PoliciesKeys.AD_BLOCKER_POLICY, value);
            yield storageService.set(PoliciesStorage_1.PoliciesKeys.ANTI_MINING_POLICY, value);
        });
    }
}
exports.MigrationModule_2_5_8 = MigrationModule_2_5_8;


/***/ }),

/***/ "./app/bg/PortList.ts":
/*!****************************!*\
  !*** ./app/bg/PortList.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PortList = void 0;
var PortList;
(function (PortList) {
    PortList["POPUP"] = "POPUP";
})(PortList = exports.PortList || (exports.PortList = {}));


/***/ }),

/***/ "./app/bg/bootstrap.ts":
/*!*****************************!*\
  !*** ./app/bg/bootstrap.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const MigrationModule_2_5_8_1 = __webpack_require__(/*! ./MigrationModule_2_5.8 */ "./app/bg/MigrationModule_2_5.8.ts");
if (true) {
    chrome.proxy.settings.set({ value: { mode: 'direct' }, scope: 'regular' });
}
const BrowserEnum_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/BrowserEnum */ "./node_modules/@urbandevs/mario-core/dist/src/BrowserEnum.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const UrbanTypes_1 = __webpack_require__(/*! ./modules/app-module/UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const mario = new src_1.Mario("CHROME_BROWSER");
const appVersion = mario.extension()
    .manifest().version;
if (true) {
    mario.logger()
        .disable();
}
const LocationModule_1 = __webpack_require__(/*! ./modules/location-module/LocationModule */ "./app/bg/modules/location-module/LocationModule.ts");
const CaptchaModule_1 = __webpack_require__(/*! ./modules/captcha-module/CaptchaModule */ "./app/bg/modules/captcha-module/CaptchaModule.ts");
const UrbanPromotionModule_1 = __webpack_require__(/*! ./modules/promotion-module/UrbanPromotionModule */ "./app/bg/modules/promotion-module/UrbanPromotionModule.ts");
const ProxyLocationModule_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/ProxyLocationModule */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationModule.js");
const BugsnagModule_1 = __webpack_require__(/*! @urbandevs/mario-bugsnag/dist/BugsnagModule */ "./node_modules/@urbandevs/mario-bugsnag/dist/BugsnagModule.js");
const UrbanToolbarService_1 = __webpack_require__(/*! ./modules/app-module/services/urbanToolbar/UrbanToolbarService */ "./app/bg/modules/app-module/services/urbanToolbar/UrbanToolbarService.ts");
const BrowserActionService_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/BrowserAction/Bg/BrowserActionService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/BrowserAction/Bg/BrowserActionService.js");
const ExternalDispatcherEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/ExternalDispatcher/Bg/ExternalDispatcherEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/ExternalDispatcher/Bg/ExternalDispatcherEvents.js");
const HideMyGeoLocationModule_1 = __webpack_require__(/*! @urbandevs/mario-hide-my-geo-location/dist/HideMyGeoLocationModule */ "./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyGeoLocationModule.js");
const AlarmService_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Alarm/Bg/AlarmService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Alarm/Bg/AlarmService.js");
const ManagementService_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Management/Bg/ManagementService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Management/Bg/ManagementService.js");
const AppModule_1 = __webpack_require__(/*! ./modules/app-module/AppModule */ "./app/bg/modules/app-module/AppModule.ts");
const IdentityModule_1 = __webpack_require__(/*! @urbandevs/mario-identity/dist/IdentityModule */ "./node_modules/@urbandevs/mario-identity/dist/IdentityModule.js");
const GoogleAnalyticsModule_1 = __webpack_require__(/*! @urbandevs/mario-google-analytics/dist/GoogleAnalyticsModule */ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsModule.js");
const IdentityTypes_1 = __webpack_require__(/*! @urbandevs/mario-identity/dist/IdentityTypes */ "./node_modules/@urbandevs/mario-identity/dist/IdentityTypes.js");
const BugsnagTypes_1 = __webpack_require__(/*! @urbandevs/mario-bugsnag/dist/BugsnagTypes */ "./node_modules/@urbandevs/mario-bugsnag/dist/BugsnagTypes.js");
const MigrationModule_1_4_0_1 = __webpack_require__(/*! ./MigrationModule_1_4.0 */ "./app/bg/MigrationModule_1_4.0.ts");
const UrlsSafeCheckModule_1 = __webpack_require__(/*! @urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckModule */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckModule.js");
const PanellistIdentityModule_1 = __webpack_require__(/*! @urbandevs/mario-panel-identity/dist/PanellistIdentityModule */ "./node_modules/@urbandevs/mario-panel-identity/dist/PanellistIdentityModule.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! @urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const PageHistoryService_1 = __webpack_require__(/*! ./modules/app-module/services/page/PageHistoryService */ "./app/bg/modules/app-module/services/page/PageHistoryService.ts");
const MigrationModule_1_11_0_1 = __webpack_require__(/*! ./MigrationModule_1_11.0 */ "./app/bg/MigrationModule_1_11.0.ts");
const PolicyModule_1 = __webpack_require__(/*! @urbandevs/mario-policy/dist/PolicyModule */ "./node_modules/@urbandevs/mario-policy/dist/PolicyModule.js");
const PolicyModuleTypes_1 = __webpack_require__(/*! @urbandevs/mario-policy/dist/PolicyModuleTypes */ "./node_modules/@urbandevs/mario-policy/dist/PolicyModuleTypes.js");
const HttpClientModule_1 = __webpack_require__(/*! @urbandevs/mario-http-client/dist/HttpClientModule */ "./node_modules/@urbandevs/mario-http-client/dist/HttpClientModule.js");
const CountryRestrictionModule_1 = __webpack_require__(/*! @urbandevs/mario-country-restriction-check/dist/CountryRestrictionModule */ "./node_modules/@urbandevs/mario-country-restriction-check/dist/CountryRestrictionModule.js");
const CountryRestrictionModuleTypes_1 = __webpack_require__(/*! @urbandevs/mario-country-restriction-check/dist//CountryRestrictionModuleTypes */ "./node_modules/@urbandevs/mario-country-restriction-check/dist/CountryRestrictionModuleTypes.js");
const AdBlockerService_1 = __webpack_require__(/*! ./modules/app-module/services/ad-blocker/AdBlockerService */ "./app/bg/modules/app-module/services/ad-blocker/AdBlockerService.ts");
const ExtensionModeService_1 = __webpack_require__(/*! ./modules/app-module/services/mode/ExtensionModeService */ "./app/bg/modules/app-module/services/mode/ExtensionModeService.ts");
const PanalyticsModule_1 = __webpack_require__(/*! @urbandevs/mario-panalytics/dist/PanalyticsModule */ "./node_modules/@urbandevs/mario-panalytics/dist/PanalyticsModule.js");
const PanalyticsIdentityTypes_1 = __webpack_require__(/*! @urbandevs/mario-panalytics/dist/PanalyticsIdentityTypes */ "./node_modules/@urbandevs/mario-panalytics/dist/PanalyticsIdentityTypes.js");
const AdBlockerModule_1 = __webpack_require__(/*! @urbandevs/mario-ad-blocker/dist/AdBlockerModule */ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerModule.js");
const AuthModule_1 = __webpack_require__(/*! ./modules/auth-module/AuthModule */ "./app/bg/modules/auth-module/AuthModule.ts");
const StaticProxiesApiModule_1 = __webpack_require__(/*! @urbandevs/mario-static-proxies-api/dist/StaticProxiesApiModule */ "./node_modules/@urbandevs/mario-static-proxies-api/dist/StaticProxiesApiModule.js");
const CounterModule_1 = __webpack_require__(/*! @urbandevs/mario-counter/dist/CounterModule */ "./node_modules/@urbandevs/mario-counter/dist/CounterModule.js");
const AppService_1 = __webpack_require__(/*! ./modules/app-module/services/app/AppService */ "./app/bg/modules/app-module/services/app/AppService.ts");
const UrbanAnalyticsModule_1 = __webpack_require__(/*! @urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsModule */ "./node_modules/@urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsModule.js");
const UAModule_1 = __webpack_require__(/*! ./modules/ua-module/UAModule */ "./app/bg/modules/ua-module/UAModule.ts");
const NotificationModule_1 = __webpack_require__(/*! ./modules/notification-module/NotificationModule */ "./app/bg/modules/notification-module/NotificationModule.ts");
const AnalyticsModule_1 = __webpack_require__(/*! ./modules/analytics-module/AnalyticsModule */ "./app/bg/modules/analytics-module/AnalyticsModule.ts");
const GAModule_1 = __webpack_require__(/*! ./modules/ga-module/GAModule */ "./app/bg/modules/ga-module/GAModule.ts");
const PoliciesStorage_1 = __webpack_require__(/*! ./modules/app-module/storages/PoliciesStorage */ "./app/bg/modules/app-module/storages/PoliciesStorage.ts");
(() => __awaiter(void 0, void 0, void 0, function* () {
    mario.registerService(UrbanTypes_1.UrbanTypes.URBAN_APP_SERVICE, AppService_1.AppService);
    yield mario.registerModule(MigrationModule_1_4_0_1.MigrationModule_1_4_0);
    mario.registerService(src_1.MARIO_TYPES.STORAGE_SERVICE, src_1.StorageService);
    const storageService = mario.getService(src_1.MARIO_TYPES.STORAGE_SERVICE);
    yield PolicyModule_1.PolicyModule.use(mario, { storageService });
    yield mario.registerModule(HttpClientModule_1.HttpClientModule);
    yield mario.registerModule(ProxyLocationModule_1.ProxyLocationModule);
    yield NotificationModule_1.NotificationModule.use(mario);
    yield CaptchaModule_1.CaptchaModule.use(mario, {
        apiUrl: "https://api-pro.urban-vpn.com/rest/v1",
        expirationCheckTime: +"1440"
    });
    yield CountryRestrictionModule_1.CountryRestrictionModule.use(mario, {
        apiUrl: "https://api-pro.urban-vpn.com/rest/v1"
    });
    yield mario.getService(CountryRestrictionModuleTypes_1.CountryRestrictionModuleTypes.RESTRICTION_SERVICE)
        .checkCountryRestriction();
    const policyService = mario.getService(PolicyModuleTypes_1.PolicyModuleTypes.POLICY_SERVICE);
    const initUA = () => __awaiter(void 0, void 0, void 0, function* () {
        const uaPolicy = yield storageService.get(PoliciesStorage_1.PoliciesKeys.UA_POLICY);
        const initialEnabled =  true || (false);
        const enabled = Boolean(uaPolicy) ? uaPolicy === PoliciesStorage_1.PoliciesState.AGREE : initialEnabled;
        yield UrbanAnalyticsModule_1.UrbanAnalyticsModule.use(mario, {
            api: "https://analytics.urban-vpn.com/rest/v1",
            appName: "URBAN_VPN_EXTENSION",
            appVersion: mario.extension()
                .manifest().version,
            enabled
        });
        yield UAModule_1.UAModule.use(mario, {});
    });
    yield initUA();
    yield AnalyticsModule_1.AnalyticsModule.use(mario, {});
    yield IdentityModule_1.IdentityModule.use(mario, {
        storageProvider: src_1.StorageService
    });
    const identityId = mario.getService(IdentityTypes_1.IdentityTypes.IDENTITY_SERVICE)
        .getIdentityId();
    const initGA = () => __awaiter(void 0, void 0, void 0, function* () {
        const gaPolicy = yield storageService.get(PoliciesStorage_1.PoliciesKeys.GA_POLICY);
        const initialEnabled = "CHROME_BROWSER" !== BrowserEnum_1.BrowserEnum.FIREFOX_BROWSER || (yield policyService.isAgreed());
        const enabled = Boolean(gaPolicy) ? gaPolicy === PoliciesStorage_1.PoliciesState.AGREE : initialEnabled;
        yield GoogleAnalyticsModule_1.GoogleAnalyticsModule.use(mario, {
            appVersion,
            appName: 'Urban VPN',
            clientId: identityId,
            trackerId: "UA-15419909-11",
            hostName: 'extension',
            enabled
        });
        yield GAModule_1.GAModule.use(mario, {});
    });
    yield initGA();
    yield AdBlockerModule_1.AdBlockerModule.use(mario, {
        subscribeOnProxyEvents: true,
        dataCollection: yield policyService.isAgreed()
    });
    mario.registerService(UrbanTypes_1.UrbanTypes.URBAN_AD_BLOCKER_SERVICE, AdBlockerService_1.AdBlockerService);
    const adBlockerService = mario.getService(UrbanTypes_1.UrbanTypes.URBAN_AD_BLOCKER_SERVICE);
    yield MigrationModule_1_11_0_1.MigrationModule_1_11_0.use(mario, storageService, policyService, adBlockerService);
    yield MigrationModule_2_5_8_1.MigrationModule_2_5_8.use(mario, storageService);
    mario.registerService(src_1.MARIO_TYPES.BROWSER_ACTION, BrowserActionService_1.BrowserActionService);
    mario.registerService(src_1.MARIO_TYPES.ALARM_SERVICE, AlarmService_1.AlarmService);
    mario.registerService(src_1.MARIO_TYPES.MANAGEMENT, ManagementService_1.ManagementService);
    mario.registerService(UrbanTypes_1.UrbanTypes.URBAN_TOOLBAR_SERVICE, UrbanToolbarService_1.UrbanToolbarService);
    mario.registerService(UrbanTypes_1.UrbanTypes.URBAN_PAGE_HISTORY_SERVICE, PageHistoryService_1.PageHistoryService);
    mario.registerService(UrbanTypes_1.UrbanTypes.URBAN_EXTENSION_MODE_SERVICE, ExtensionModeService_1.ExtensionModeService);
    mario.logger()
        .onFilterLog((output) => {
        return output.includes('PANELOS_MESSAGE');
    });
    yield BugsnagModule_1.BugsnagModule.use(mario, {
        enabled: Boolean(+"1"),
        apiKey: "ca2e726fa8c539961b6721de62f80a29",
        releaseStage: "production",
        appVersion,
        filterEvents: (event) => {
            const filteredEvents = [
                ExternalDispatcherEvents_1.ExternalDispatcherEvents.ON_ANY_MESSAGE
            ];
            return filteredEvents.indexOf(event.event) === -1;
        },
        filterLog: (message, args) => {
            const content = JSON.stringify(args) + '';
            return !content.includes('PANELOS_MESSAGE');
        }
    });
    const bugsnagService = mario.getService(BugsnagTypes_1.BugsnagTypes.BUGSNAG_SERVICE);
    bugsnagService.updateUser({
        id: identityId
    });
    // TODO: why 2 times implementing of PANELIST_API_URL
    yield mario.registerModule(PanellistIdentityModule_1.PanellistIdentityModule, {
        host: "https://authentication.urban-vpn.com",
        logging: false
    });
    yield mario.registerModule(PanalyticsModule_1.PanalyticsModule, {
        host: "https://authentication.urban-vpn.com",
        logging: false
    });
    const panalyticsId = mario.getService(PanalyticsIdentityTypes_1.PanalyticsIdentityTypes.PANALYTICS_SERVICE)
        .getId();
    yield UrlsSafeCheckModule_1.UrlsSafeCheckModule.use(mario, {
        apiUrl: "https://anti-mining-protection-toolbar.urban-vpn.com",
        mode: UrlsSafeCheckTypes_1.MODE.FULL_NAVIGATION,
        enabled: false,
        panalyticsId: panalyticsId,
        pinstanceId: Number("2"),
        partnerId: Number("5"),
        distributorId: Number("5"),
        logging: "false" === 'true',
        sensitiveDataCheckEnabled: true,
        sensitiveDataApiUrl: "https://authentication.urban-vpn.com",
        compressRequest: "true" === 'true'
    });
    yield mario.registerModule(HideMyGeoLocationModule_1.HideMyGeoLocationModule);
    yield AuthModule_1.AuthModule.use(mario, {
        browser: "CHROME_BROWSER",
        clientApp: 'URBAN_VPN_BROWSER_EXTENSION',
        securityApi: "https://api-pro.urban-vpn.com/rest/v1",
        accountApi: "https://api-pro.urban-vpn.com/rest/v1"
    });
    yield StaticProxiesApiModule_1.StaticProxiesApiModule.use(mario, {
        apiUrl: "https://stats.urban-vpn.com/api/rest/v2",
        clientApp: 'URBAN_VPN_BROWSER_EXTENSION'
    });
    yield LocationModule_1.LocationModule.use(mario, {
        byPass: "sessions.bugsnag.com, notify.bugsnag.com, www.ssl.google-analytics.com, google-analytics.com, *google-analytics.com, toolbar.urban-vpn.com, stats.urban-vpn.com, api.urban-vpn.com, api-pro.urban-vpn.com, analytics.urban-vpn.com".split(',')
            .map(v => v.trim()),
        refreshTokenShiftExpirationTimeMinutes: 5
    });
    yield UrbanPromotionModule_1.UrbanPromotionModule.use(mario, {
        api: "https://config-toolbar.urban-vpn.com/rest/v1/configs/extensions/urban-vpn",
        initialFooter: {
            text: 'Need a VPN? Download #Urban_VPN',
            links: {
                Urban_VPN: {
                    link: 'https://www.urban-vpn.com/free-products/free-windows-vpn/',
                    style: 'strong',
                    text: 'Urban VPN'
                }
            }
        }
    });
    yield CounterModule_1.CounterModule.use(mario, { storageService });
    yield mario.registerModule(AppModule_1.AppModule);
}))()
    .then();


/***/ }),

/***/ "./app/bg/libs/helpers.ts":
/*!********************************!*\
  !*** ./app/bg/libs/helpers.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isStagingEnvGoogleAnalytics = exports.getBrowserName = exports.delay = exports.getBrowserBlankPageUrl = void 0;
function getBrowserBlankPageUrl() {
    let url = 'about:blank';
    switch ("CHROME_BROWSER") {
        case 'CHROME_BROWSER':
            url = 'chrome://newtab/';
            break;
        case 'FIREFOX_BROWSER':
            // default
            break;
        case 'EDGE_BROWSER':
            // default
            break;
    }
    return url;
}
exports.getBrowserBlankPageUrl = getBrowserBlankPageUrl;
function delay(ms) {
    return __awaiter(this, void 0, void 0, function* () {
        return new Promise(resolve => setTimeout(resolve, ms));
    });
}
exports.delay = delay;
function getBrowserName() {
    switch ("CHROME_BROWSER") {
        case 'CHROME_BROWSER':
            return 'CHROME';
        case 'FIREFOX_BROWSER':
            return 'FIREFOX';
        case 'EDGE_BROWSER':
            return 'EDGE';
        default:
            throw new Error('Unknown browser name');
    }
}
exports.getBrowserName = getBrowserName;
function isStagingEnvGoogleAnalytics() {
    return "prod" === 'staging';
}
exports.isStagingEnvGoogleAnalytics = isStagingEnvGoogleAnalytics;


/***/ }),

/***/ "./app/bg/modules/analytics-module/AnalyticsHelper.ts":
/*!************************************************************!*\
  !*** ./app/bg/modules/analytics-module/AnalyticsHelper.ts ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.getLocationCode = exports.getLocationType = void 0;
const LocationProvider_1 = __webpack_require__(/*! ../location-module/LocationProvider */ "./app/bg/modules/location-module/LocationProvider.ts");
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ./AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
function getLocationType(location) {
    var _a;
    const mapper = {
        [LocationProvider_1.LocationProvider.GENERIC]: AnalyticsModuleTypes_1.LocationType.GENERAL,
        [LocationProvider_1.LocationProvider.AUTO_SERVER]: AnalyticsModuleTypes_1.LocationType.AUTO_SERVER,
    };
    const provider = location.provider();
    if (mapper[provider]) {
        return mapper[provider];
    }
    if (location.isProvider(LocationProvider_1.LocationProvider.STREAMING_SERVICE)) {
        return (_a = location.extraData()) === null || _a === void 0 ? void 0 : _a.streamingServiceType;
    }
    throw new Error(`Could map location type`);
}
exports.getLocationType = getLocationType;
function getLocationCode(location) {
    const numb = location.isProvider(LocationProvider_1.LocationProvider.STREAMING_SERVICE) ? -2 : 0;
    return location.code().value().substr(numb);
}
exports.getLocationCode = getLocationCode;


/***/ }),

/***/ "./app/bg/modules/analytics-module/AnalyticsModule.ts":
/*!************************************************************!*\
  !*** ./app/bg/modules/analytics-module/AnalyticsModule.ts ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnalyticsModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ./AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
const Analytics_1 = __webpack_require__(/*! ./services/Analytics */ "./app/bg/modules/analytics-module/services/Analytics.ts");
const LocationTargetListener_1 = __webpack_require__(/*! ./listeners/internal/LocationTargetListener */ "./app/bg/modules/analytics-module/listeners/internal/LocationTargetListener.ts");
const TrackEventListener_1 = __webpack_require__(/*! ./listeners/port/TrackEventListener */ "./app/bg/modules/analytics-module/listeners/port/TrackEventListener.ts");
class AnalyticsModule extends src_1.MarioModule {
    name() {
        return 'AnalyticsModule';
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this
                .mario()
                .registerService(AnalyticsModuleTypes_1.AnalyticsModuleTypes.ANALYTICS, Analytics_1.Analytics);
            this.registerOnUpdateExtensionListener();
            this
                .mario()
                .internalDispatcher()
                .on(LocationTargetListener_1.LocationTargetListener);
            this
                .mario()
                .portDispatcher()
                .on(TrackEventListener_1.TrackEventListener);
        });
    }
    static use(mario, options) {
        return __awaiter(this, void 0, void 0, function* () {
            yield mario.registerModule(AnalyticsModule, options);
            return;
        });
    }
    registerOnUpdateExtensionListener() {
        this
            .mario()
            .extension()
            .onInstall((details) => {
            if (details.reason !== 'update') {
                return;
            }
            const prevVersion = details.previousVersion;
            const currVersion = this.mario().extension().manifest().version;
            // let's wait for a half of minute when AuthModule will be registered
            setTimeout(() => {
                const event = {
                    event: AnalyticsModuleTypes_1.EventList.EXTENSION_UPDATED,
                    manual: false,
                    details: {
                        SOURCE: AnalyticsModuleTypes_1.SourceList.SYSTEM,
                        PREV_VERSION: prevVersion,
                        CURRENT_VERSION: currVersion,
                    }
                };
                this
                    .mario()
                    .getService(AnalyticsModuleTypes_1.AnalyticsModuleTypes.ANALYTICS)
                    .track(event);
            }, 30000);
        });
    }
}
exports.AnalyticsModule = AnalyticsModule;


/***/ }),

/***/ "./app/bg/modules/analytics-module/AnalyticsModuleEvents.ts":
/*!******************************************************************!*\
  !*** ./app/bg/modules/analytics-module/AnalyticsModuleEvents.ts ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AnalyticsModuleOutEvents = exports.AnalyticsModuleEvents = void 0;
var AnalyticsModuleEvents;
(function (AnalyticsModuleEvents) {
    AnalyticsModuleEvents["TRACK_EVENT"] = "ANALYTIC_TRACK_EVENT";
    AnalyticsModuleEvents["IS_GA_ENABLED_EVENT"] = "IS_GA_ENABLED_EVENT";
    AnalyticsModuleEvents["IS_UA_ENABLED_EVENT"] = "IS_UA_ENABLED_EVENT";
    AnalyticsModuleEvents["SET_GA_STATE_EVENT"] = "SET_GA_STATE_EVENT";
    AnalyticsModuleEvents["SET_UA_STATE_EVENT"] = "SET_UA_STATE_EVENT";
})(AnalyticsModuleEvents = exports.AnalyticsModuleEvents || (exports.AnalyticsModuleEvents = {}));
var AnalyticsModuleOutEvents;
(function (AnalyticsModuleOutEvents) {
    AnalyticsModuleOutEvents["IS_GA_ENABLED_RESPONSE_EVENT"] = "IS_GA_ENABLED_RESPONSE_EVENT";
    AnalyticsModuleOutEvents["IS_UA_ENABLED_RESPONSE_EVENT"] = "IS_UA_ENABLED_RESPONSE_EVENT";
})(AnalyticsModuleOutEvents = exports.AnalyticsModuleOutEvents || (exports.AnalyticsModuleOutEvents = {}));


/***/ }),

/***/ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts":
/*!*****************************************************************!*\
  !*** ./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ElementType = exports.ActionList = exports.ElementList = exports.LocationType = exports.PolicyDecision = exports.RepairStatus = exports.SourceList = exports.EventList = exports.AnalyticsPopupEvents = exports.AnalyticsModuleTypes = void 0;
exports.AnalyticsModuleTypes = {
    ANALYTICS: Symbol.for('APP_ANALYTICS'),
};
var AnalyticsPopupEvents;
(function (AnalyticsPopupEvents) {
    AnalyticsPopupEvents["TRACK_EVENT"] = "TRACK_EVENT";
})(AnalyticsPopupEvents = exports.AnalyticsPopupEvents || (exports.AnalyticsPopupEvents = {}));
var EventList;
(function (EventList) {
    /**
     * Fired when a user just installed an extension and
     * the extension could not register him
     */
    EventList["COULD_NOT_REGISTER_ANONYMOUS"] = "COULD_NOT_REGISTER_ANONYMOUS";
    /**
     * Fired once a user selected some location.
     * it doesn't depend on how the user does it, consider it as just a signal from the extension
     */
    EventList["LOCATION_SELECTED"] = "LOCATION_SELECTED";
    /**
     * Fired once a user disconnects from a location
     */
    EventList["LOCATION_STOPPED"] = "LOCATION_STOPPED";
    /**
     * Fired once a user clicks:
     * - on some location in a LOCATION_LIST
     * - on PLAY_BUTTON
     */
    EventList["LOCATION_UI"] = "LOCATION_UI";
    /**
     * Fired when a user is connected to a location and all
     * proxy servers are down from the location
     */
    EventList["ACTIVE_LOCATION_NOT_AVAILABLE"] = "ACTIVE_LOCATION_NOT_AVAILABLE";
    /**
     * Fired when a user selected a location but en extension
     * could not connect the user to it
     */
    EventList["COULD_NOT_ACTIVATE_LOCATION"] = "COULD_NOT_ACTIVATE_LOCATION";
    /**
     * Fired once an extension is updated
     */
    EventList["EXTENSION_UPDATED"] = "EXTENSION_UPDATED";
    /**
     * Fired once a user clicks on some element from the ElementList
     */
    EventList["CLICK"] = "CLICK";
    /**
     * Fired when an extension could not connect to a specific proxy
     */
    EventList["COULD_NOT_ESTABLISH_CONNECTION_WITH_PROXY"] = "COULD_NOT_ESTABLISH_CONNECTION_WITH_PROXY";
    /**
     * Fired when a connected proxy is down and the extension
     * tries to connect to other proxy from this location
     */
    EventList["REPAIR_CONNECTION_STARTED"] = "REPAIR_CONNECTION_STARTED";
    /**
     * Fired after "REPAIR_CONNECTION_STARTED"
     * with a result of repairing
     */
    EventList["REPAIR_CONNECTION_RESULT"] = "REPAIR_CONNECTION_RESULT";
    /**
     * Fired once ad blocker is disabled
     */
    EventList["AD_BLOCKER__OFF"] = "AD_BLOCKER__OFF";
    /**
     * Fired once ad blocker is enabled
     */
    EventList["AD_BLOCKER__ON"] = "AD_BLOCKER__ON";
    /**
     * Fired once anti malware is disabled
     */
    EventList["ANTI_MALWARE__OFF"] = "ANTI_MALWARE__OFF";
    /**
     * Fired once anti malware is enabled
     */
    EventList["ANTI_MALWARE__ON"] = "ANTI_MALWARE__ON";
    /**
     * Fired once a user connects to "Auto Server"
     */
    EventList["AUTO_SERVER_LOCATION"] = "AUTO_SERVER_LOCATION";
    /**
     * Fired once a user sees some page in a toolbar popup
     */
    EventList["PAGE_SHOWN"] = "PAGE_SHOWN";
    /**
     * Fired once a user closes a page.
     * In most cases it's a cross icon (X) in the left top corner
     */
    EventList["PAGE_CLOSED"] = "PAGE_CLOSED";
    /**
     * Fired once a user gave his answer about policy
     */
    EventList["POLICY_DECISION"] = "POLICY_DECISION";
    /**
     * Fired once a user clicks on a promotion link in the footer
     */
    EventList["PROMOTION_LINK_CLICKED"] = "PROMOTION_LINK_CLICKED";
    /**
     * Fired when a captcha is shown
     */
    EventList["CAPTCHA_SHOWN"] = "CAPTCHA_SHOWN";
    /**
     * Fired when a user passed captcha
     */
    EventList["CAPTCHA_PASSED"] = "CAPTCHA_PASSED";
})(EventList = exports.EventList || (exports.EventList = {}));
var SourceList;
(function (SourceList) {
    SourceList["SYSTEM"] = "SYSTEM";
    SourceList["WELCOME_CONSENT_PAGE"] = "WELCOME_CONSENT_PAGE";
    SourceList["MAIN_PAGE"] = "MAIN_PAGE";
    SourceList["RATE_US_PAGE"] = "RATE_US_PAGE";
    SourceList["INTERRUPTION_PAGE"] = "INTERRUPTION_PAGE";
    SourceList["INVITE_FRIENDS_PAGE"] = "INVITE_FRIENDS_PAGE";
    SourceList["INITIALIZING_PAGE"] = "INITIALIZING_PAGE";
    SourceList["COUNTRY_RESTRICTED_PAGE"] = "COUNTRY_RESTRICTED_PAGE";
    SourceList["AD_BLOCKER_CONSENT_PAGE"] = "AD_BLOCKER_CONSENT_PAGE";
    SourceList["ANTI_MALE_WARE_CONSENT_PAGE"] = "ANTI_MALE_WARE_CONSENT_PAGE";
    SourceList["ANNOUNCEMENT_PAGE"] = "ANNOUNCEMENT_PAGE";
})(SourceList = exports.SourceList || (exports.SourceList = {}));
var RepairStatus;
(function (RepairStatus) {
    RepairStatus["FAILURE"] = "FAILURE";
    RepairStatus["SUCCESS"] = "SUCCESS";
})(RepairStatus = exports.RepairStatus || (exports.RepairStatus = {}));
var PolicyDecision;
(function (PolicyDecision) {
    PolicyDecision["AGREED"] = "AGREED";
    PolicyDecision["REJECTED"] = "REJECTED";
})(PolicyDecision = exports.PolicyDecision || (exports.PolicyDecision = {}));
var LocationType;
(function (LocationType) {
    LocationType["GENERAL"] = "GENERAL";
    LocationType["AUTO_SERVER"] = "AUTO_SERVER";
    LocationType["NETFLIX"] = "NETFLIX";
})(LocationType = exports.LocationType || (exports.LocationType = {}));
var ElementList;
(function (ElementList) {
    ElementList["AD_BLOCKER_TOGGLE_BUTTON"] = "AD_BLOCKER_TOGGLE_BUTTON";
    ElementList["ANTI_MALWARE_TOGGLE_BUTTON"] = "ANTI_MALWARE_TOGGLE_BUTTON";
    ElementList["DISABLE_OTHER_EXTENSIONS"] = "DISABLE_OTHER_EXTENSIONS";
    ElementList["REJECT_POLICY_BUTTON"] = "REJECT_POLICY_BUTTON";
    ElementList["AGREED_POLICY_BUTTON"] = "AGREED_POLICY_BUTTON";
    ElementList["RATE_US"] = "RATE_US";
    ElementList["SHARE_LINK"] = "SHARE_LINK";
    ElementList["SEARCH_INPUT"] = "SEARCH_INPUT";
    ElementList["SEARCH_CLEAR"] = "SEARCH_CLEAR";
    ElementList["YES_BLOCK_ADS"] = "YES_BLOCK_ADS";
    ElementList["NO_THANKS"] = "NO_THANKS";
    ElementList["RESTRICTED_GOT_IT"] = "RESTRICTED_GOT_IT";
    ElementList["MENU_BUTTON"] = "MENU_BUTTON";
    ElementList["PLAY_BUTTON"] = "PLAY_BUTTON";
    ElementList["LOCATION_LIST"] = "LOCATION_LIST";
})(ElementList = exports.ElementList || (exports.ElementList = {}));
var ActionList;
(function (ActionList) {
    ActionList["ON_AD_BLOCKER_ACTION"] = "ON_AD_BLOCKER_ACTION";
    ActionList["OFF_AD_BLOCKER_ACTION"] = "OFF_AD_BLOCKER_ACTION";
    ActionList["ON_ANTI_MALWARE_ACTION"] = "ON_ANTI_MALWARE_ACTION";
    ActionList["OFF_ANTI_MALWARE_ACTION"] = "OFF_ANTI_MALWARE_ACTION";
    ActionList["COPIED_SHARE_LINK"] = "COPIED_SHARE_LINK_ACTION";
    ActionList["RETRY_ACTION"] = "RETRY_ACTION";
    ActionList["PLAY_ACTION"] = "PLAY_ACTION";
    ActionList["PAUSE_ACTION"] = "PAUSE_ACTION";
    ActionList["SEARCH_INPUT_FOCUSED"] = "SEARCH_INPUT_FOCUSED";
    ActionList["SEARCH_CLEAR_ACTION"] = "SEARCH_CLEAR_ACTION";
    ActionList["CLOSE_EXTENSION_ACTION"] = "CLOSE_EXTENSION_ACTION";
    ActionList["OPEN_MENU_ACTION"] = "OPEN_MENU_ACTION";
    ActionList["CLOSE_MENU_ACTION"] = "CLOSE_MENU_ACTION";
})(ActionList = exports.ActionList || (exports.ActionList = {}));
var ElementType;
(function (ElementType) {
    ElementType["BUTTON"] = "BUTTON";
    ElementType["TOGGLE"] = "TOGGLE";
    ElementType["LINK"] = "LINK";
    ElementType["FIELD"] = "FIELD";
})(ElementType = exports.ElementType || (exports.ElementType = {}));


/***/ }),

/***/ "./app/bg/modules/analytics-module/listeners/internal/LocationTargetListener.ts":
/*!**************************************************************************************!*\
  !*** ./app/bg/modules/analytics-module/listeners/internal/LocationTargetListener.ts ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationTargetListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const LocationModuleEvents_1 = __webpack_require__(/*! ../../../location-module/LocationModuleEvents */ "./app/bg/modules/location-module/LocationModuleEvents.ts");
const Analytics_1 = __webpack_require__(/*! ../../services/Analytics */ "./app/bg/modules/analytics-module/services/Analytics.ts");
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ../../AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
let LocationTargetListener = class LocationTargetListener {
    constructor(analytics, logger) {
        this.analytics = analytics;
        this.logger = logger;
    }
    on() {
        return LocationModuleEvents_1.LocationModuleEvents.LOCATION_TARGET;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const location = event.data.location;
            if (location.provider() !== AnalyticsModuleTypes_1.LocationType.AUTO_SERVER) {
                return;
            }
            const trackEvent = {
                event: AnalyticsModuleTypes_1.EventList.AUTO_SERVER_LOCATION,
                manual: false,
                details: {
                    SOURCE: AnalyticsModuleTypes_1.SourceList.SYSTEM,
                    CODE: location.code().value(),
                    TYPE: AnalyticsModuleTypes_1.LocationType.AUTO_SERVER,
                }
            };
            this.analytics.track(trackEvent);
        });
    }
};
LocationTargetListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(AnalyticsModuleTypes_1.AnalyticsModuleTypes.ANALYTICS)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [Analytics_1.Analytics, Object])
], LocationTargetListener);
exports.LocationTargetListener = LocationTargetListener;


/***/ }),

/***/ "./app/bg/modules/analytics-module/listeners/port/TrackEventListener.ts":
/*!******************************************************************************!*\
  !*** ./app/bg/modules/analytics-module/listeners/port/TrackEventListener.ts ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrackEventListener = void 0;
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ../../AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const Analytics_1 = __webpack_require__(/*! ../../services/Analytics */ "./app/bg/modules/analytics-module/services/Analytics.ts");
let TrackEventListener = class TrackEventListener {
    constructor(analytics) {
        this.analytics = analytics;
    }
    on() {
        return AnalyticsModuleTypes_1.AnalyticsPopupEvents.TRACK_EVENT;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const ev = event.data;
            return this.analytics.track(ev);
        });
    }
};
TrackEventListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(AnalyticsModuleTypes_1.AnalyticsModuleTypes.ANALYTICS)),
    __metadata("design:paramtypes", [Analytics_1.Analytics])
], TrackEventListener);
exports.TrackEventListener = TrackEventListener;


/***/ }),

/***/ "./app/bg/modules/analytics-module/services/Analytics.ts":
/*!***************************************************************!*\
  !*** ./app/bg/modules/analytics-module/services/Analytics.ts ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Analytics = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const AuthModuleTypes_1 = __webpack_require__(/*! ../../auth-module/AuthModuleTypes */ "./app/bg/modules/auth-module/AuthModuleTypes.ts");
const AnalyticsModuleEvents_1 = __webpack_require__(/*! ../AnalyticsModuleEvents */ "./app/bg/modules/analytics-module/AnalyticsModuleEvents.ts");
let Analytics = class Analytics {
    constructor(container, dispatcher, logger) {
        this.container = container;
        this.dispatcher = dispatcher;
        this.logger = logger;
    }
    track(event) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.container.isBound(AuthModuleTypes_1.AuthModuleTypes.TOKEN_STORAGE)) {
                const storage = this.container.get(AuthModuleTypes_1.AuthModuleTypes.TOKEN_STORAGE);
                if (yield storage.hasSecurityToken()) {
                    event.packageId = (yield storage.getSecurityToken()).package.id;
                }
            }
            yield this.emit(event);
        });
    }
    emit(event) {
        const marioEvent = new src_1.MarioEvent(AnalyticsModuleEvents_1.AnalyticsModuleEvents.TRACK_EVENT, event);
        return this.dispatcher.emit(marioEvent);
    }
};
Analytics = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.CONTAINER)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __param(2, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [inversify_1.Container, Object, Object])
], Analytics);
exports.Analytics = Analytics;


/***/ }),

/***/ "./app/bg/modules/app-module/AppModule.ts":
/*!************************************************!*\
  !*** ./app/bg/modules/app-module/AppModule.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const CreateTabEventListener_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Tab/Bg/Listeners/CreateTabEventListener */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/Listeners/CreateTabEventListener.js");
const IdentityTypes_1 = __webpack_require__(/*! @urbandevs/mario-identity/dist/IdentityTypes */ "./node_modules/@urbandevs/mario-identity/dist/IdentityTypes.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! @urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const BeforeLocationActivated_1 = __webpack_require__(/*! ./listeners/internal/BeforeLocationActivated */ "./app/bg/modules/app-module/listeners/internal/BeforeLocationActivated.ts");
const BeforeLocationDeactivated_1 = __webpack_require__(/*! ./listeners/internal/BeforeLocationDeactivated */ "./app/bg/modules/app-module/listeners/internal/BeforeLocationDeactivated.ts");
const ProxyErrorListener_1 = __webpack_require__(/*! ./listeners/internal/ProxyErrorListener */ "./app/bg/modules/app-module/listeners/internal/ProxyErrorListener.ts");
const AfterLocationDeactivated_1 = __webpack_require__(/*! ./listeners/internal/AfterLocationDeactivated */ "./app/bg/modules/app-module/listeners/internal/AfterLocationDeactivated.ts");
const AfterLocationActivated_1 = __webpack_require__(/*! ./listeners/internal/AfterLocationActivated */ "./app/bg/modules/app-module/listeners/internal/AfterLocationActivated.ts");
const RedirectToSafePageEventListener_1 = __webpack_require__(/*! ./listeners/external/RedirectToSafePageEventListener */ "./app/bg/modules/app-module/listeners/external/RedirectToSafePageEventListener.ts");
const UrbanTypes_1 = __webpack_require__(/*! ./UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const helpers_1 = __webpack_require__(/*! ../../libs/helpers */ "./app/bg/libs/helpers.ts");
const PolicyAgreedEventListener_1 = __webpack_require__(/*! ./listeners/internal/PolicyAgreedEventListener */ "./app/bg/modules/app-module/listeners/internal/PolicyAgreedEventListener.ts");
const PolicyRejectedListener_1 = __webpack_require__(/*! ./listeners/internal/PolicyRejectedListener */ "./app/bg/modules/app-module/listeners/internal/PolicyRejectedListener.ts");
const ExtensionMode_1 = __webpack_require__(/*! ./services/mode/ExtensionMode */ "./app/bg/modules/app-module/services/mode/ExtensionMode.ts");
const InterruptionService_1 = __webpack_require__(/*! ./services/interruption/InterruptionService */ "./app/bg/modules/app-module/services/interruption/InterruptionService.ts");
const HandsShakeListener_1 = __webpack_require__(/*! ./listeners/port/HandsShakeListener */ "./app/bg/modules/app-module/listeners/port/HandsShakeListener.ts");
const PopupProcessor_1 = __webpack_require__(/*! ./services/popupProcessor/PopupProcessor */ "./app/bg/modules/app-module/services/popupProcessor/PopupProcessor.ts");
const PopupStateService_1 = __webpack_require__(/*! ./services/popupProcessor/PopupStateService */ "./app/bg/modules/app-module/services/popupProcessor/PopupStateService.ts");
const PopupEmitter_1 = __webpack_require__(/*! ./services/popupProcessor/PopupEmitter */ "./app/bg/modules/app-module/services/popupProcessor/PopupEmitter.ts");
const InitPopupListener_1 = __webpack_require__(/*! ./listeners/port/InitPopupListener */ "./app/bg/modules/app-module/listeners/port/InitPopupListener.ts");
const CounterIncreaseListener_1 = __webpack_require__(/*! ./listeners/port/counter/CounterIncreaseListener */ "./app/bg/modules/app-module/listeners/port/counter/CounterIncreaseListener.ts");
const PolicyAgreedListener_1 = __webpack_require__(/*! ./listeners/port/policy/PolicyAgreedListener */ "./app/bg/modules/app-module/listeners/port/policy/PolicyAgreedListener.ts");
const PageHistoryVisitListener_1 = __webpack_require__(/*! ./listeners/port/page-history/PageHistoryVisitListener */ "./app/bg/modules/app-module/listeners/port/page-history/PageHistoryVisitListener.ts");
const ExtensionModeSetCurrentListener_1 = __webpack_require__(/*! ./listeners/port/ext-mode/ExtensionModeSetCurrentListener */ "./app/bg/modules/app-module/listeners/port/ext-mode/ExtensionModeSetCurrentListener.ts");
const AdBlockerEnableListener_1 = __webpack_require__(/*! ./listeners/port/ad-blocker/AdBlockerEnableListener */ "./app/bg/modules/app-module/listeners/port/ad-blocker/AdBlockerEnableListener.ts");
const AdBlockerDisableListener_1 = __webpack_require__(/*! ./listeners/port/ad-blocker/AdBlockerDisableListener */ "./app/bg/modules/app-module/listeners/port/ad-blocker/AdBlockerDisableListener.ts");
const AntiMaleWareEnableListener_1 = __webpack_require__(/*! ./listeners/port/anti-male-ware/AntiMaleWareEnableListener */ "./app/bg/modules/app-module/listeners/port/anti-male-ware/AntiMaleWareEnableListener.ts");
const AntiMaleWareDisableListener_1 = __webpack_require__(/*! ./listeners/port/anti-male-ware/AntiMaleWareDisableListener */ "./app/bg/modules/app-module/listeners/port/anti-male-ware/AntiMaleWareDisableListener.ts");
const PolicyRejectedListener_2 = __webpack_require__(/*! ./listeners/port/policy/PolicyRejectedListener */ "./app/bg/modules/app-module/listeners/port/policy/PolicyRejectedListener.ts");
const CreateNewTabListener_1 = __webpack_require__(/*! ./listeners/port/tab/CreateNewTabListener */ "./app/bg/modules/app-module/listeners/port/tab/CreateNewTabListener.ts");
const DisableInterruptedExtensionsListener_1 = __webpack_require__(/*! ./listeners/port/DisableInterruptedExtensionsListener */ "./app/bg/modules/app-module/listeners/port/DisableInterruptedExtensionsListener.ts");
const ActivateLocationListener_1 = __webpack_require__(/*! ./listeners/port/location/ActivateLocationListener */ "./app/bg/modules/app-module/listeners/port/location/ActivateLocationListener.ts");
const DeactivateLocationListener_1 = __webpack_require__(/*! ./listeners/port/location/DeactivateLocationListener */ "./app/bg/modules/app-module/listeners/port/location/DeactivateLocationListener.ts");
const AppState_1 = __webpack_require__(/*! ./services/app/AppState */ "./app/bg/modules/app-module/services/app/AppState.ts");
const CouldNotDeliveryResponse_1 = __webpack_require__(/*! ./listeners/internal/CouldNotDeliveryResponse */ "./app/bg/modules/app-module/listeners/internal/CouldNotDeliveryResponse.ts");
const CaptchaPassedListener_1 = __webpack_require__(/*! ./listeners/port/captcha/CaptchaPassedListener */ "./app/bg/modules/app-module/listeners/port/captcha/CaptchaPassedListener.ts");
const ActiveLocationNotAvailableListener_1 = __webpack_require__(/*! ./listeners/internal/ActiveLocationNotAvailableListener */ "./app/bg/modules/app-module/listeners/internal/ActiveLocationNotAvailableListener.ts");
const LocationCouldNotBeActivatedListener_1 = __webpack_require__(/*! ./listeners/internal/LocationCouldNotBeActivatedListener */ "./app/bg/modules/app-module/listeners/internal/LocationCouldNotBeActivatedListener.ts");
const PoliciesStorage_1 = __webpack_require__(/*! ./storages/PoliciesStorage */ "./app/bg/modules/app-module/storages/PoliciesStorage.ts");
const AntiMaleWareConsentListener_1 = __webpack_require__(/*! ./listeners/port/anti-male-ware/AntiMaleWareConsentListener */ "./app/bg/modules/app-module/listeners/port/anti-male-ware/AntiMaleWareConsentListener.ts");
const IsAntiMaleWareConsentAgreedListener_1 = __webpack_require__(/*! ./listeners/port/anti-male-ware/IsAntiMaleWareConsentAgreedListener */ "./app/bg/modules/app-module/listeners/port/anti-male-ware/IsAntiMaleWareConsentAgreedListener.ts");
const AdBlockerConsentListener_1 = __webpack_require__(/*! ./listeners/port/ad-blocker/AdBlockerConsentListener */ "./app/bg/modules/app-module/listeners/port/ad-blocker/AdBlockerConsentListener.ts");
const IsAdBlockerConsentAgreedListener_1 = __webpack_require__(/*! ./listeners/port/ad-blocker/IsAdBlockerConsentAgreedListener */ "./app/bg/modules/app-module/listeners/port/ad-blocker/IsAdBlockerConsentAgreedListener.ts");
const SetGAStateEventListener_1 = __webpack_require__(/*! ./listeners/port/analytics/google/SetGAStateEventListener */ "./app/bg/modules/app-module/listeners/port/analytics/google/SetGAStateEventListener.ts");
const IsGAEnabledEventListener_1 = __webpack_require__(/*! ./listeners/port/analytics/google/IsGAEnabledEventListener */ "./app/bg/modules/app-module/listeners/port/analytics/google/IsGAEnabledEventListener.ts");
const IsUAEnabledEventListener_1 = __webpack_require__(/*! ./listeners/port/analytics/urban/IsUAEnabledEventListener */ "./app/bg/modules/app-module/listeners/port/analytics/urban/IsUAEnabledEventListener.ts");
const SetUAStateEventListener_1 = __webpack_require__(/*! ./listeners/port/analytics/urban/SetUAStateEventListener */ "./app/bg/modules/app-module/listeners/port/analytics/urban/SetUAStateEventListener.ts");
const globalAny = global;
class AppModule extends src_1.MarioModule {
    name() {
        return 'AppModule';
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this
                .mario()
                .registerService(UrbanTypes_1.UrbanTypes.URBAN_INTERRUPTION_SERVICE, InterruptionService_1.InterruptionService);
            this
                .mario()
                .registerService(UrbanTypes_1.UrbanTypes.URBAN_POPUP_PROCESSOR, PopupProcessor_1.PopupProcessor);
            this
                .mario()
                .registerService(UrbanTypes_1.UrbanTypes.POPUP_STATE_SERVICE, PopupStateService_1.PopupStateService);
            this
                .mario()
                .registerService(UrbanTypes_1.UrbanTypes.POPUP_EMITTER, PopupEmitter_1.PopupEmitter);
            this
                .mario()
                .registerService(UrbanTypes_1.UrbanTypes.URBAN_POLICIES_STORAGE, PoliciesStorage_1.PoliciesStorage);
            const version = this
                .mario()
                .extension()
                .manifest()
                .version;
            const urbanToolbarService = this
                .mario()
                .getService(UrbanTypes_1.UrbanTypes.URBAN_TOOLBAR_SERVICE);
            urbanToolbarService.draw(urbanToolbarService.getGreyedRoboImage())
                .then();
            const libStateService = this
                .mario()
                .getService(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_LIB_STATE_SERVICE);
            const extensionModeService = this
                .mario()
                .getService(UrbanTypes_1.UrbanTypes.URBAN_EXTENSION_MODE_SERVICE);
            const pageHistoryService = this
                .mario()
                .getService(UrbanTypes_1.UrbanTypes.URBAN_PAGE_HISTORY_SERVICE);
            const adBlockerService = this
                .mario()
                .getService(UrbanTypes_1.UrbanTypes.URBAN_AD_BLOCKER_SERVICE);
            let prevVersion;
            this
                .mario()
                .extension()
                .onInstall((details) => __awaiter(this, void 0, void 0, function* () {
                prevVersion = details.previousVersion;
                if (details.reason === 'install') {
                    let installURL = `${"https://www.urban-vpn.com/thank-you-ext/"}?cid=${this.getIdentityId()}&v=${version}`;
                    installURL = helpers_1.isStagingEnvGoogleAnalytics() ? installURL + '&env=staging' : installURL;
                    chrome.tabs.create({ url: installURL });
                }
                else if (details.reason === 'update') {
                    const announcementPageIsNotVisited = !(yield pageHistoryService.visited('ANNOUNCEMENT'));
                    if ((yield adBlockerService.isDisabled()) && announcementPageIsNotVisited) {
                        yield extensionModeService.setCurrentMode(ExtensionMode_1.ExtensionMode.ANNOUNCEMENT);
                    }
                    // we should re enable ad blocker to start blocking facebook and twitter
                    if (yield adBlockerService.isEnabled()) {
                        yield adBlockerService.enable();
                    }
                }
            }));
            this
                .mario()
                .internalDispatcher()
                .on(PolicyAgreedEventListener_1.PolicyAgreedEventListener);
            this
                .mario()
                .internalDispatcher()
                .on(PolicyRejectedListener_1.PolicyRejectedListener);
            // wait for onInstall been called
            yield helpers_1.delay(100);
            yield libStateService.restoreState();
            this
                .mario()
                .getService(UrbanTypes_1.UrbanTypes.URBAN_APP_SERVICE)
                .set(AppState_1.AppState.DIRECT_MODE);
            let uninstallURL = `${"https://www.urban-vpn.com/uninstall-ext"}?cid=${this.getIdentityId()}&v=${version}`;
            uninstallURL = helpers_1.isStagingEnvGoogleAnalytics() ? uninstallURL + '&env=staging' : uninstallURL;
            this
                .mario()
                .extension()
                .setUninstallURL(uninstallURL);
            this
                .mario()
                .externalDispatcher()
                .on(CreateTabEventListener_1.CreateTabEventListener);
            this
                .mario()
                .externalDispatcher()
                .on(RedirectToSafePageEventListener_1.RedirectToSafePageEventListener);
            this
                .mario()
                .internalDispatcher()
                .on(ProxyErrorListener_1.ProxyErrorListener);
            this
                .mario()
                .internalDispatcher()
                .on(BeforeLocationActivated_1.BeforeLocationActivated);
            this
                .mario()
                .internalDispatcher()
                .on(BeforeLocationDeactivated_1.BeforeLocationDeactivated);
            this
                .mario()
                .internalDispatcher()
                .on(AfterLocationActivated_1.AfterLocationActivated);
            this
                .mario()
                .internalDispatcher()
                .on(AfterLocationDeactivated_1.AfterLocationDeactivated);
            this
                .mario()
                .internalDispatcher()
                .on(CouldNotDeliveryResponse_1.CouldNotDeliveryResponse);
            this
                .mario()
                .internalDispatcher()
                .on(ActiveLocationNotAvailableListener_1.ActiveLocationNotAvailableListener);
            this
                .mario()
                .internalDispatcher()
                .on(LocationCouldNotBeActivatedListener_1.LocationCouldNotBeActivatedListener);
            this
                .mario()
                .portDispatcher()
                .on(HandsShakeListener_1.HandsShakeListener);
            this
                .mario()
                .portDispatcher()
                .on(InitPopupListener_1.InitPopupListener);
            this
                .mario()
                .portDispatcher()
                .on(CounterIncreaseListener_1.CounterIncreaseListener);
            this
                .mario()
                .portDispatcher()
                .on(PolicyAgreedListener_1.PolicyAgreedListener);
            this
                .mario()
                .portDispatcher()
                .on(PolicyRejectedListener_2.PolicyRejectedListener);
            this
                .mario()
                .portDispatcher()
                .on(PageHistoryVisitListener_1.PageHistoryVisitListener);
            this
                .mario()
                .portDispatcher()
                .on(ExtensionModeSetCurrentListener_1.ExtensionModeSetCurrentListener);
            this
                .mario()
                .portDispatcher()
                .on(AdBlockerEnableListener_1.AdBlockerEnableListener);
            this
                .mario()
                .portDispatcher()
                .on(AdBlockerDisableListener_1.AdBlockerDisableListener);
            this
                .mario()
                .portDispatcher()
                .on(AdBlockerConsentListener_1.AdBlockerConsentListener);
            this
                .mario()
                .portDispatcher()
                .on(IsAdBlockerConsentAgreedListener_1.IsAdBlockerConsentAgreedListener);
            this
                .mario()
                .portDispatcher()
                .on(AntiMaleWareEnableListener_1.AntiMaleWareEnableListener);
            this
                .mario()
                .portDispatcher()
                .on(AntiMaleWareDisableListener_1.AntiMaleWareDisableListener);
            this
                .mario()
                .portDispatcher()
                .on(AntiMaleWareConsentListener_1.AntiMaleWareConsentListener);
            this
                .mario()
                .portDispatcher()
                .on(IsAntiMaleWareConsentAgreedListener_1.IsAntiMaleWareConsentAgreedListener);
            this
                .mario()
                .portDispatcher()
                .on(CreateNewTabListener_1.CreateNewTabListener);
            this
                .mario()
                .portDispatcher()
                .on(DisableInterruptedExtensionsListener_1.DisableInterruptedExtensionsListener);
            this
                .mario()
                .portDispatcher()
                .on(ActivateLocationListener_1.ActivateLocationListener);
            this
                .mario()
                .portDispatcher()
                .on(DeactivateLocationListener_1.DeactivateLocationListener);
            this
                .mario()
                .portDispatcher()
                .on(CaptchaPassedListener_1.CaptchaPassedListener);
            this
                .mario()
                .portDispatcher()
                .on(SetGAStateEventListener_1.SetGAStateEventListener);
            this
                .mario()
                .portDispatcher()
                .on(IsGAEnabledEventListener_1.IsGAEnabledEventListener);
            this
                .mario()
                .portDispatcher()
                .on(IsUAEnabledEventListener_1.IsUAEnabledEventListener);
            this
                .mario()
                .portDispatcher()
                .on(SetUAStateEventListener_1.SetUAStateEventListener);
        });
    }
    getIdentityId() {
        return this
            .mario()
            .getService(IdentityTypes_1.IdentityTypes.IDENTITY_SERVICE)
            .getIdentityId();
    }
}
exports.AppModule = AppModule;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node_modules/webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./app/bg/modules/app-module/CounterList.ts":
/*!**************************************************!*\
  !*** ./app/bg/modules/app-module/CounterList.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Counter = void 0;
var Counter;
(function (Counter) {
    Counter["MAIN_PAGE_OPENED"] = "MAIN_PAGE_OPENED";
})(Counter = exports.Counter || (exports.Counter = {}));


/***/ }),

/***/ "./app/bg/modules/app-module/PopupEventsIn.ts":
/*!****************************************************!*\
  !*** ./app/bg/modules/app-module/PopupEventsIn.ts ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PopupEventsIn = void 0;
var PopupEventsIn;
(function (PopupEventsIn) {
    PopupEventsIn["READY"] = "POPUP_READY";
    PopupEventsIn["STATE_CHANGED"] = "STATE_CHANGED";
    PopupEventsIn["HANDS_SHAKE_FINISH_RESPONSE"] = "HANDS_SHAKE_FINISH_RESPONSE";
    PopupEventsIn["DEACTIVATE_LOCATION_RESPONSE"] = "DEACTIVATE_LOCATION_RESPONSE";
})(PopupEventsIn = exports.PopupEventsIn || (exports.PopupEventsIn = {}));


/***/ }),

/***/ "./app/bg/modules/app-module/PopupEventsOut.ts":
/*!*****************************************************!*\
  !*** ./app/bg/modules/app-module/PopupEventsOut.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PopupEventsOutResponse = exports.PopupEventsOut = void 0;
var PopupEventsOut;
(function (PopupEventsOut) {
    PopupEventsOut["HANDS_SHAKE_START"] = "HANDS_SHAKE_START";
    PopupEventsOut["INIT"] = "INIT";
    PopupEventsOut["PAGE_HISTORY_VISIT"] = "PAGE_HISTORY_VISIT";
    PopupEventsOut["COUNTER_INCREASE"] = "COUNTER_INCREASE";
    PopupEventsOut["DISABLE_EXTENSIONS_THAT_CAUSE_INTERRUPTION"] = "DISABLE_EXTENSIONS_THAT_CAUSE_INTERRUPTION";
    PopupEventsOut["POLICY_AGREED"] = "POLICY_AGREED";
    PopupEventsOut["POLICY_REJECTED"] = "POLICY_REJECTED";
    PopupEventsOut["EXT_MODE_SET_CURRENT"] = "EXT_MODE_SET_CURRENT";
    PopupEventsOut["AD_BLOCKER_ENABLE"] = "AD_BLOCKER_ENABLE";
    PopupEventsOut["AD_BLOCKER_DISABLE"] = "AD_BLOCKER_DISABLE";
    PopupEventsOut["SET_AD_BLOCKER_CONSENT"] = "SET_AD_BLOCKER_CONSENT";
    PopupEventsOut["IS_AD_BLOCKER_CONSENT_AGREED"] = "IS_AD_BLOCKER_CONSENT_AGREED";
    PopupEventsOut["ANTI_MALE_WARE_ENABLE"] = "ANTI_MALE_WARE_ENABLE";
    PopupEventsOut["ANTI_MALE_WARE_DISABLE"] = "ANTI_MALE_WARE_DISABLE";
    PopupEventsOut["SET_ANTI_MALE_WARE_CONSENT"] = "SET_ANTI_MALE_WARE_CONSENT";
    PopupEventsOut["IS_ANTI_MALE_WARE_CONSENT_AGREED"] = "IS_ANTI_MALE_WARE_CONSENT_AGREED";
    PopupEventsOut["CREATE_TAB"] = "CREATE_TAB";
    PopupEventsOut["ACTIVATE_LOCATION"] = "ACTIVATE_LOCATION";
    PopupEventsOut["DEACTIVATE_LOCATION"] = "DEACTIVATE_LOCATION";
    PopupEventsOut["CAPTCHA_PASSED"] = "CAPTCHA_PASSED";
})(PopupEventsOut = exports.PopupEventsOut || (exports.PopupEventsOut = {}));
var PopupEventsOutResponse;
(function (PopupEventsOutResponse) {
    PopupEventsOutResponse["IS_AD_BLOCKER_CONSENT_AGREED_RESPONSE"] = "IS_AD_BLOCKER_CONSENT_AGREED_RESPONSE";
    PopupEventsOutResponse["IS_ANTI_MALE_WARE_CONSENT_AGREED_RESPONSE"] = "IS_ANTI_MALE_WARE_CONSENT_AGREED_RESPONSE";
})(PopupEventsOutResponse = exports.PopupEventsOutResponse || (exports.PopupEventsOutResponse = {}));


/***/ }),

/***/ "./app/bg/modules/app-module/PopupTypes.ts":
/*!*************************************************!*\
  !*** ./app/bg/modules/app-module/PopupTypes.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PopupStateFields = void 0;
var PopupStateFields;
(function (PopupStateFields) {
    PopupStateFields["activationTime"] = "activationTime";
    PopupStateFields["adsOnPage"] = "adsOnPage";
    PopupStateFields["adsTotal"] = "adsTotal";
    PopupStateFields["isInterrupted"] = "isInterrupted";
    PopupStateFields["isRateUsPageVisited"] = "isRateUsPageVisited";
    PopupStateFields["isPolicyAgreed"] = "isPolicyAgreed";
    PopupStateFields["isEnabledAdBlocker"] = "isEnabledAdBlocker";
    PopupStateFields["isAdBlockerPolicyAgreed"] = "isAdBlockerPolicyAgreed";
    PopupStateFields["isEnabledAntiMalware"] = "isEnabledAntiMalware";
    PopupStateFields["isAntiMaleWarePolicyAgreed"] = "isAntiMaleWarePolicyAgreed";
    PopupStateFields["promotionElements"] = "promotionElements";
    PopupStateFields["mainPageCounter"] = "mainPageCounter";
    PopupStateFields["location"] = "location";
    PopupStateFields["locations"] = "locations";
    PopupStateFields["identityId"] = "identityId";
    PopupStateFields["appState"] = "appState";
    PopupStateFields["countryRestriction"] = "countryRestriction";
    PopupStateFields["mode"] = "mode";
    PopupStateFields["hasPolicyAnswer"] = "hasPolicyAnswer";
    PopupStateFields["captcha"] = "captcha";
})(PopupStateFields = exports.PopupStateFields || (exports.PopupStateFields = {}));


/***/ }),

/***/ "./app/bg/modules/app-module/UrbanInnerEvents.ts":
/*!*******************************************************!*\
  !*** ./app/bg/modules/app-module/UrbanInnerEvents.ts ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UrbanInnerEvents = void 0;
var UrbanInnerEvents;
(function (UrbanInnerEvents) {
    UrbanInnerEvents["COULD_NOT_DELIVERY_RESPONSE_TO_POPUP"] = "COULD_NOT_DELIVERY_RESPONSE_TO_POPUP";
})(UrbanInnerEvents = exports.UrbanInnerEvents || (exports.UrbanInnerEvents = {}));


/***/ }),

/***/ "./app/bg/modules/app-module/UrbanTypes.ts":
/*!*************************************************!*\
  !*** ./app/bg/modules/app-module/UrbanTypes.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UrbanTypes = void 0;
const UrbanTypes = {
    URBAN_APP_SERVICE: Symbol.for('URBAN_APP_SERVICE'),
    URBAN_LOCATION_SERVICE: Symbol.for('URBAN_LOCATION_SERVICE'),
    URBAN_TOOLBAR_SERVICE: Symbol.for('URBAN_TOOLBAR_SERVICE'),
    URBAN_PAGE_HISTORY_SERVICE: Symbol.for('URBAN_PAGE_HISTORY_SERVICE'),
    URBAN_AD_BLOCKER_SERVICE: Symbol.for('URBAN_AD_BLOCKER_SERVICE'),
    URBAN_EXTENSION_MODE_SERVICE: Symbol.for('URBAN_EXTENSION_MODE_SERVICE'),
    URBAN_INTERRUPTION_SERVICE: Symbol.for('URBAN_INTERRUPTION_SERVICE'),
    URBAN_POPUP_PROCESSOR: Symbol.for('URBAN_POPUP_PROCESSOR'),
    URBAN_POLICIES_STORAGE: Symbol.for('URBAN_POLICIES_STORAGE'),
    POPUP_EMITTER: Symbol.for('URBAN_POPUP_EMITTER'),
    POPUP_STATE_SERVICE: Symbol.for('URBAN_POPUP_STATE_SERVICE'),
};
exports.UrbanTypes = UrbanTypes;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/external/RedirectToSafePageEventListener.ts":
/*!*****************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/external/RedirectToSafePageEventListener.ts ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RedirectToSafePageEventListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const ContentEvents_1 = __webpack_require__(/*! ../../../../ContentEvents */ "./app/bg/ContentEvents.ts");
const TabService_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabService.js");
const helpers_1 = __webpack_require__(/*! ../../../../libs/helpers */ "./app/bg/libs/helpers.ts");
let RedirectToSafePageEventListener = class RedirectToSafePageEventListener {
    constructor(tabService) {
        this.tabService = tabService;
    }
    on() {
        return ContentEvents_1.ContentEvents.REDIRECT_TO_SAFE_PAGE;
    }
    handle(event, sender, sendResponse) {
        return __awaiter(this, void 0, void 0, function* () {
            const { tab } = sender;
            const url = helpers_1.getBrowserBlankPageUrl();
            this.tabService.update({ url }, tab.id);
        });
    }
};
RedirectToSafePageEventListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.TAB_SERVICE)),
    __metadata("design:paramtypes", [TabService_1.TabService])
], RedirectToSafePageEventListener);
exports.RedirectToSafePageEventListener = RedirectToSafePageEventListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/internal/ActiveLocationNotAvailableListener.ts":
/*!********************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/internal/ActiveLocationNotAvailableListener.ts ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActiveLocationNotAvailableListener = void 0;
const LocationModuleEvents_1 = __webpack_require__(/*! ../../../location-module/LocationModuleEvents */ "./app/bg/modules/location-module/LocationModuleEvents.ts");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const NotificationService_1 = __webpack_require__(/*! ../../../notification-module/services/NotificationService */ "./app/bg/modules/notification-module/services/NotificationService.ts");
const NotificationModuleTypes_1 = __webpack_require__(/*! ../../../notification-module/NotificationModuleTypes */ "./app/bg/modules/notification-module/NotificationModuleTypes.ts");
const LocationModuleTypes_1 = __webpack_require__(/*! ../../../location-module/LocationModuleTypes */ "./app/bg/modules/location-module/LocationModuleTypes.ts");
const Notification_1 = __webpack_require__(/*! ../../../notification-module/services/Notification */ "./app/bg/modules/notification-module/services/Notification.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const UrbanToolbarService_1 = __webpack_require__(/*! ../../services/urbanToolbar/UrbanToolbarService */ "./app/bg/modules/app-module/services/urbanToolbar/UrbanToolbarService.ts");
const AdBlockerTypes_1 = __webpack_require__(/*! @urbandevs/mario-ad-blocker/dist/AdBlockerTypes */ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerTypes.js");
const AdBlockerService_1 = __webpack_require__(/*! @urbandevs/mario-ad-blocker/dist/AdBlockerService */ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerService.js");
const LocationService_1 = __webpack_require__(/*! ../../../location-module/services/location/LocationService */ "./app/bg/modules/location-module/services/location/LocationService.ts");
const AnalyticsHelper_1 = __webpack_require__(/*! ../../../analytics-module/AnalyticsHelper */ "./app/bg/modules/analytics-module/AnalyticsHelper.ts");
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ../../../analytics-module/AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
const Analytics_1 = __webpack_require__(/*! ../../../analytics-module/services/Analytics */ "./app/bg/modules/analytics-module/services/Analytics.ts");
let ActiveLocationNotAvailableListener = class ActiveLocationNotAvailableListener {
    constructor(notificationService, locationService, toolbar, adBlocker, analytics) {
        this.notificationService = notificationService;
        this.locationService = locationService;
        this.toolbar = toolbar;
        this.adBlocker = adBlocker;
        this.analytics = analytics;
    }
    on() {
        return LocationModuleEvents_1.LocationModuleEvents.ACTIVE_LOCATION_NOT_AVAILABLE;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const payload = event.data;
            this.toolbar.stopAnimation();
            const roboIcon = this.toolbar.getGreyedRoboImage();
            this.toolbar.draw(roboIcon).then();
            const location = payload.location;
            this.notificationService.send({
                type: Notification_1.NotificationType.ERROR,
                message: `Connection to ${location.name().value()} was terminated`,
                duration: 5000,
                image: Notification_1.NotificationImage.ALERT,
                header: 'Urban VPN',
                buttons: [
                    {
                        id: 'OK',
                        text: 'Ok, thanks',
                        style: 'primary',
                    },
                ]
            }).then();
            const trackEvent = {
                event: AnalyticsModuleTypes_1.EventList.ACTIVE_LOCATION_NOT_AVAILABLE,
                manual: false,
                details: {
                    SOURCE: AnalyticsModuleTypes_1.SourceList.SYSTEM,
                    CODE: AnalyticsHelper_1.getLocationCode(location),
                    TYPE: AnalyticsHelper_1.getLocationType(location)
                }
            };
            this.analytics.track(trackEvent);
            setTimeout(() => this.adBlocker.updateConfig(), 3000);
            return;
        });
    }
};
ActiveLocationNotAvailableListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(NotificationModuleTypes_1.NotificationModuleTypes.NOTIFICATION_SERVICE)),
    __param(1, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.LOCATION_SERVICE)),
    __param(2, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_TOOLBAR_SERVICE)),
    __param(3, inversify_1.inject(AdBlockerTypes_1.AdBlockerTypes.AD_BLOCKER_SERVICE)),
    __param(4, inversify_1.inject(AnalyticsModuleTypes_1.AnalyticsModuleTypes.ANALYTICS)),
    __metadata("design:paramtypes", [NotificationService_1.NotificationService,
        LocationService_1.LocationService,
        UrbanToolbarService_1.UrbanToolbarService,
        AdBlockerService_1.AdBlockerService,
        Analytics_1.Analytics])
], ActiveLocationNotAvailableListener);
exports.ActiveLocationNotAvailableListener = ActiveLocationNotAvailableListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/internal/AfterLocationActivated.ts":
/*!********************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/internal/AfterLocationActivated.ts ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AfterLocationActivated = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const ProxyLocationEvents_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/ProxyLocationEvents */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationEvents.js");
const HideMyLocationTypes_1 = __webpack_require__(/*! @urbandevs/mario-hide-my-geo-location/dist/HideMyLocationTypes */ "./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyLocationTypes.js");
const HideMyGeoLocationService_1 = __webpack_require__(/*! @urbandevs/mario-hide-my-geo-location/dist/HideMyGeoLocationService */ "./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyGeoLocationService.js");
const UrbanTypes_1 = __webpack_require__(/*! ../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const UrbanToolbarService_1 = __webpack_require__(/*! ../../services/urbanToolbar/UrbanToolbarService */ "./app/bg/modules/app-module/services/urbanToolbar/UrbanToolbarService.ts");
const LocationType_1 = __webpack_require__(/*! ../../../location-module/LocationType */ "./app/bg/modules/location-module/LocationType.ts");
let AfterLocationActivated = class AfterLocationActivated {
    constructor(hideLocationService, toolbar) {
        this.hideLocationService = hideLocationService;
        this.toolbar = toolbar;
    }
    on() {
        return ProxyLocationEvents_1.ProxyLocationEvents.PROXY_LOCATION_AFTER_ACTIVATED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const location = event.data.location;
            const code = location.code().value();
            this.toolbar.stopAnimation();
            location.isType(LocationType_1.LocationType.RANDOM) ? yield this.toolbar.drawAutoServer() : yield this.toolbar.drawFlag(code);
            this.hideLocationService.enable();
            return undefined;
        });
    }
};
AfterLocationActivated = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(HideMyLocationTypes_1.HideMyLocationTypes.HIDE_MY_LOCATION_SERVICE)),
    __param(1, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_TOOLBAR_SERVICE)),
    __metadata("design:paramtypes", [HideMyGeoLocationService_1.HideMyGeoLocationService,
        UrbanToolbarService_1.UrbanToolbarService])
], AfterLocationActivated);
exports.AfterLocationActivated = AfterLocationActivated;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/internal/AfterLocationDeactivated.ts":
/*!**********************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/internal/AfterLocationDeactivated.ts ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AfterLocationDeactivated = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const ProxyLocationEvents_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/ProxyLocationEvents */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationEvents.js");
const HideMyLocationTypes_1 = __webpack_require__(/*! @urbandevs/mario-hide-my-geo-location/dist/HideMyLocationTypes */ "./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyLocationTypes.js");
const HideMyGeoLocationService_1 = __webpack_require__(/*! @urbandevs/mario-hide-my-geo-location/dist/HideMyGeoLocationService */ "./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyGeoLocationService.js");
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ../../../analytics-module/AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
const Analytics_1 = __webpack_require__(/*! ../../../analytics-module/services/Analytics */ "./app/bg/modules/analytics-module/services/Analytics.ts");
const luxon_1 = __webpack_require__(/*! luxon */ "./node_modules/luxon/build/cjs-browser/luxon.js");
const LocationModuleTypes_1 = __webpack_require__(/*! ../../../location-module/LocationModuleTypes */ "./app/bg/modules/location-module/LocationModuleTypes.ts");
const LocationService_1 = __webpack_require__(/*! ../../../location-module/services/location/LocationService */ "./app/bg/modules/location-module/services/location/LocationService.ts");
const AnalyticsHelper_1 = __webpack_require__(/*! ../../../analytics-module/AnalyticsHelper */ "./app/bg/modules/analytics-module/AnalyticsHelper.ts");
let AfterLocationDeactivated = class AfterLocationDeactivated {
    constructor(hideLocationService, locationService, analytics) {
        this.hideLocationService = hideLocationService;
        this.locationService = locationService;
        this.analytics = analytics;
    }
    on() {
        return ProxyLocationEvents_1.ProxyLocationEvents.PROXY_LOCATION_AFTER_DEACTIVATED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const location = event.data;
            const activationTime = luxon_1.DateTime.fromSeconds(yield this.locationService.activationTime());
            const seconds = luxon_1.DateTime
                .local()
                .diff(activationTime, ['seconds'])
                .seconds;
            const trackEvent = {
                event: AnalyticsModuleTypes_1.EventList.LOCATION_STOPPED,
                manual: false,
                details: {
                    SOURCE: AnalyticsModuleTypes_1.SourceList.SYSTEM,
                    TYPE: AnalyticsHelper_1.getLocationType(location),
                    CODE: AnalyticsHelper_1.getLocationCode(location),
                    DURATION: seconds,
                }
            };
            this.analytics.track(trackEvent).then();
            this.hideLocationService.disable();
            return undefined;
        });
    }
};
AfterLocationDeactivated = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(HideMyLocationTypes_1.HideMyLocationTypes.HIDE_MY_LOCATION_SERVICE)),
    __param(1, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.LOCATION_SERVICE)),
    __param(2, inversify_1.inject(AnalyticsModuleTypes_1.AnalyticsModuleTypes.ANALYTICS)),
    __metadata("design:paramtypes", [HideMyGeoLocationService_1.HideMyGeoLocationService,
        LocationService_1.LocationService,
        Analytics_1.Analytics])
], AfterLocationDeactivated);
exports.AfterLocationDeactivated = AfterLocationDeactivated;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/internal/BeforeLocationActivated.ts":
/*!*********************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/internal/BeforeLocationActivated.ts ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BeforeLocationActivated = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const UrbanTypes_1 = __webpack_require__(/*! ../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const UrbanToolbarService_1 = __webpack_require__(/*! ../../services/urbanToolbar/UrbanToolbarService */ "./app/bg/modules/app-module/services/urbanToolbar/UrbanToolbarService.ts");
const ProxyLocationEvents_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/ProxyLocationEvents */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationEvents.js");
let BeforeLocationActivated = class BeforeLocationActivated {
    constructor(toolbar) {
        this.toolbar = toolbar;
    }
    on() {
        return ProxyLocationEvents_1.ProxyLocationEvents.PROXY_LOCATION_BEFORE_ACTIVATED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.toolbar.drawConnectionAnimation();
            return;
        });
    }
};
BeforeLocationActivated = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_TOOLBAR_SERVICE)),
    __metadata("design:paramtypes", [UrbanToolbarService_1.UrbanToolbarService])
], BeforeLocationActivated);
exports.BeforeLocationActivated = BeforeLocationActivated;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/internal/BeforeLocationDeactivated.ts":
/*!***********************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/internal/BeforeLocationDeactivated.ts ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BeforeLocationDeactivated = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const UrbanTypes_1 = __webpack_require__(/*! ../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const UrbanToolbarService_1 = __webpack_require__(/*! ../../services/urbanToolbar/UrbanToolbarService */ "./app/bg/modules/app-module/services/urbanToolbar/UrbanToolbarService.ts");
const ProxyLocationEvents_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/ProxyLocationEvents */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationEvents.js");
let BeforeLocationDeactivated = class BeforeLocationDeactivated {
    constructor(urbanToolbarService) {
        this.urbanToolbarService = urbanToolbarService;
    }
    on() {
        return ProxyLocationEvents_1.ProxyLocationEvents.PROXY_LOCATION_AFTER_DEACTIVATED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const roboIcon = this.urbanToolbarService.getGreyedRoboImage();
            yield this.urbanToolbarService.draw(roboIcon);
            return;
        });
    }
};
BeforeLocationDeactivated = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_TOOLBAR_SERVICE)),
    __metadata("design:paramtypes", [UrbanToolbarService_1.UrbanToolbarService])
], BeforeLocationDeactivated);
exports.BeforeLocationDeactivated = BeforeLocationDeactivated;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/internal/CouldNotDeliveryResponse.ts":
/*!**********************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/internal/CouldNotDeliveryResponse.ts ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CouldNotDeliveryResponse = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const UrbanInnerEvents_1 = __webpack_require__(/*! ../../UrbanInnerEvents */ "./app/bg/modules/app-module/UrbanInnerEvents.ts");
const NotificationModuleTypes_1 = __webpack_require__(/*! ../../../notification-module/NotificationModuleTypes */ "./app/bg/modules/notification-module/NotificationModuleTypes.ts");
const NotificationService_1 = __webpack_require__(/*! ../../../notification-module/services/NotificationService */ "./app/bg/modules/notification-module/services/NotificationService.ts");
const Notification_1 = __webpack_require__(/*! ../../../notification-module/services/Notification */ "./app/bg/modules/notification-module/services/Notification.ts");
let CouldNotDeliveryResponse = class CouldNotDeliveryResponse {
    constructor(notificationService) {
        this.notificationService = notificationService;
    }
    on() {
        return UrbanInnerEvents_1.UrbanInnerEvents.COULD_NOT_DELIVERY_RESPONSE_TO_POPUP;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = event.data;
            const needHandle = [
                'ACTIVATE_LOCATION',
            ];
            if (!needHandle.includes(data.onRequest)) {
                return;
            }
            this.notificationService.send({
                type: data.ok ? Notification_1.NotificationType.SUCCESS : Notification_1.NotificationType.ERROR,
                message: data.message,
                duration: 3000,
                image: data.ok ? Notification_1.NotificationImage.WINK : Notification_1.NotificationImage.ALERT,
                header: 'Urban VPN',
                buttons: [
                    {
                        id: 'OK',
                        text: 'Ok, thanks',
                        style: 'primary',
                    },
                ]
            }).then();
            return;
        });
    }
};
CouldNotDeliveryResponse = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(NotificationModuleTypes_1.NotificationModuleTypes.NOTIFICATION_SERVICE)),
    __metadata("design:paramtypes", [NotificationService_1.NotificationService])
], CouldNotDeliveryResponse);
exports.CouldNotDeliveryResponse = CouldNotDeliveryResponse;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/internal/LocationCouldNotBeActivatedListener.ts":
/*!*********************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/internal/LocationCouldNotBeActivatedListener.ts ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationCouldNotBeActivatedListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const LocationModuleEvents_1 = __webpack_require__(/*! ../../../location-module/LocationModuleEvents */ "./app/bg/modules/location-module/LocationModuleEvents.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const UrbanToolbarService_1 = __webpack_require__(/*! ../../services/urbanToolbar/UrbanToolbarService */ "./app/bg/modules/app-module/services/urbanToolbar/UrbanToolbarService.ts");
let LocationCouldNotBeActivatedListener = class LocationCouldNotBeActivatedListener {
    constructor(toolbar) {
        this.toolbar = toolbar;
    }
    on() {
        return LocationModuleEvents_1.LocationModuleEvents.LOCATION_COULD_NOT_BE_ACTIVATED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            this.toolbar.stopAnimation();
            const image = this.toolbar.getGreyedRoboImage();
            yield this.toolbar.draw(image);
        });
    }
};
LocationCouldNotBeActivatedListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_TOOLBAR_SERVICE)),
    __metadata("design:paramtypes", [UrbanToolbarService_1.UrbanToolbarService])
], LocationCouldNotBeActivatedListener);
exports.LocationCouldNotBeActivatedListener = LocationCouldNotBeActivatedListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/internal/PolicyAgreedEventListener.ts":
/*!***********************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/internal/PolicyAgreedEventListener.ts ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolicyAgreedEventListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const AdBlockerTypes_1 = __webpack_require__(/*! @urbandevs/mario-ad-blocker/dist/AdBlockerTypes */ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerTypes.js");
const AdBlockerService_1 = __webpack_require__(/*! @urbandevs/mario-ad-blocker/dist/AdBlockerService */ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerService.js");
const GoogleAnalyticsTypes_1 = __webpack_require__(/*! @urbandevs/mario-google-analytics/dist/GoogleAnalyticsTypes */ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsTypes.js");
const GoogleAnalyticsService_1 = __webpack_require__(/*! @urbandevs/mario-google-analytics/dist/GoogleAnalyticsService */ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsService.js");
const PolicyServiceEvents_1 = __webpack_require__(/*! @urbandevs/mario-policy/dist/PolicyServiceEvents */ "./node_modules/@urbandevs/mario-policy/dist/PolicyServiceEvents.js");
const BugsnagTypes_1 = __webpack_require__(/*! @urbandevs/mario-bugsnag/dist/BugsnagTypes */ "./node_modules/@urbandevs/mario-bugsnag/dist/BugsnagTypes.js");
const BugsnagService_1 = __webpack_require__(/*! @urbandevs/mario-bugsnag/dist/BugsnagService */ "./node_modules/@urbandevs/mario-bugsnag/dist/BugsnagService.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! @urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const LibStateService_1 = __webpack_require__(/*! @urbandevs/mario-urls-safe-check/dist/services/LibStateService/LibStateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/LibStateService/LibStateService.js");
const StateService_1 = __webpack_require__(/*! @urbandevs/mario-urls-safe-check/dist/services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js");
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ../../../analytics-module/AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
const Analytics_1 = __webpack_require__(/*! ../../../analytics-module/services/Analytics */ "./app/bg/modules/analytics-module/services/Analytics.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const PoliciesStorage_1 = __webpack_require__(/*! ../../storages/PoliciesStorage */ "./app/bg/modules/app-module/storages/PoliciesStorage.ts");
const States_1 = __webpack_require__(/*! ../../services/popupProcessor/States */ "./app/bg/modules/app-module/services/popupProcessor/States.ts");
const PopupProcessor_1 = __webpack_require__(/*! ../../services/popupProcessor/PopupProcessor */ "./app/bg/modules/app-module/services/popupProcessor/PopupProcessor.ts");
let PolicyAgreedEventListener = class PolicyAgreedEventListener {
    constructor(adBlockerNative, ga, bagsnagService, libStateService, safeCheckStateService, analytics, urbanPolicy, processor) {
        this.adBlockerNative = adBlockerNative;
        this.ga = ga;
        this.bagsnagService = bagsnagService;
        this.libStateService = libStateService;
        this.safeCheckStateService = safeCheckStateService;
        this.analytics = analytics;
        this.urbanPolicy = urbanPolicy;
        this.processor = processor;
    }
    on() {
        return PolicyServiceEvents_1.PolicyServiceEvents.POLICY_AGREED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            this.ga.enable();
            yield this.bagsnagService.enable();
            // enables antimining
            this.safeCheckStateService.setMode(UrlsSafeCheckTypes_1.MODE.FULL_NAVIGATION);
            yield this.libStateService.enable();
            // enable adblocker
            this.adBlockerNative.activateAdBlocker();
            yield this.adBlockerNative.enableDataCollection();
            // agrees internal policies
            yield this.urbanPolicy.agreeAntiMiningPolicy();
            yield this.urbanPolicy.agreeAdBlockerPolicy();
            const trackEvent = {
                event: AnalyticsModuleTypes_1.EventList.POLICY_DECISION,
                manual: false,
                details: {
                    SOURCE: AnalyticsModuleTypes_1.SourceList.SYSTEM,
                    DECISION: AnalyticsModuleTypes_1.PolicyDecision.AGREED
                }
            };
            this.analytics.track(trackEvent).then();
            yield this.processor.finished(States_1.PopupProcessId.ANTI_MALE_WARE_CONSENT);
            yield this.processor.finished(States_1.PopupProcessId.AD_BLOCKER_CONSENT);
        });
    }
};
PolicyAgreedEventListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(AdBlockerTypes_1.AdBlockerTypes.AD_BLOCKER_SERVICE)),
    __param(1, inversify_1.inject(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_SERVICE)),
    __param(2, inversify_1.inject(BugsnagTypes_1.BugsnagTypes.BUGSNAG_SERVICE)),
    __param(3, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_LIB_STATE_SERVICE)),
    __param(4, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_SERVICE)),
    __param(5, inversify_1.inject(AnalyticsModuleTypes_1.AnalyticsModuleTypes.ANALYTICS)),
    __param(6, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POLICIES_STORAGE)),
    __param(7, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POPUP_PROCESSOR)),
    __metadata("design:paramtypes", [AdBlockerService_1.AdBlockerService,
        GoogleAnalyticsService_1.GoogleAnalyticsService,
        BugsnagService_1.BugsnagService,
        LibStateService_1.LibStateService,
        StateService_1.StateService,
        Analytics_1.Analytics,
        PoliciesStorage_1.PoliciesStorage,
        PopupProcessor_1.PopupProcessor])
], PolicyAgreedEventListener);
exports.PolicyAgreedEventListener = PolicyAgreedEventListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/internal/PolicyRejectedListener.ts":
/*!********************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/internal/PolicyRejectedListener.ts ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolicyRejectedListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const PolicyServiceEvents_1 = __webpack_require__(/*! @urbandevs/mario-policy/dist/PolicyServiceEvents */ "./node_modules/@urbandevs/mario-policy/dist/PolicyServiceEvents.js");
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ../../../analytics-module/AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
const Analytics_1 = __webpack_require__(/*! ../../../analytics-module/services/Analytics */ "./app/bg/modules/analytics-module/services/Analytics.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const PoliciesStorage_1 = __webpack_require__(/*! ../../storages/PoliciesStorage */ "./app/bg/modules/app-module/storages/PoliciesStorage.ts");
const PopupProcessor_1 = __webpack_require__(/*! ../../services/popupProcessor/PopupProcessor */ "./app/bg/modules/app-module/services/popupProcessor/PopupProcessor.ts");
const States_1 = __webpack_require__(/*! ../../services/popupProcessor/States */ "./app/bg/modules/app-module/services/popupProcessor/States.ts");
let PolicyRejectedListener = class PolicyRejectedListener {
    constructor(analytics, urbanPolicy, processor) {
        this.analytics = analytics;
        this.urbanPolicy = urbanPolicy;
        this.processor = processor;
    }
    on() {
        return PolicyServiceEvents_1.PolicyServiceEvents.POLICY_REJECTED;
    }
    handle() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.urbanPolicy.rejectAdBlockerPolicy();
            yield this.urbanPolicy.rejectAntiMiningPolicy();
            const trackEvent = {
                event: AnalyticsModuleTypes_1.EventList.POLICY_DECISION,
                manual: false,
                details: {
                    SOURCE: AnalyticsModuleTypes_1.SourceList.SYSTEM,
                    DECISION: AnalyticsModuleTypes_1.PolicyDecision.REJECTED
                }
            };
            this.analytics.track(trackEvent).then();
            yield this.processor.finished(States_1.PopupProcessId.ANTI_MALE_WARE_CONSENT);
            yield this.processor.finished(States_1.PopupProcessId.AD_BLOCKER_CONSENT);
        });
    }
};
PolicyRejectedListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(AnalyticsModuleTypes_1.AnalyticsModuleTypes.ANALYTICS)),
    __param(1, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POLICIES_STORAGE)),
    __param(2, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POPUP_PROCESSOR)),
    __metadata("design:paramtypes", [Analytics_1.Analytics,
        PoliciesStorage_1.PoliciesStorage,
        PopupProcessor_1.PopupProcessor])
], PolicyRejectedListener);
exports.PolicyRejectedListener = PolicyRejectedListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/internal/ProxyErrorListener.ts":
/*!****************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/internal/ProxyErrorListener.ts ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyErrorListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const ProxyEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Proxy/Bg/ProxyEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Proxy/Bg/ProxyEvents.js");
let ProxyErrorListener = class ProxyErrorListener {
    constructor(logger) {
        this.logger = logger;
    }
    on() {
        return ProxyEvents_1.ProxyEvents.PROXY_ERROR;
    }
    handle(event) {
        const error = new Error('Proxy Error: ' + event.data.error);
        // this.logger.error(error);
        return undefined;
    }
};
ProxyErrorListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [Object])
], ProxyErrorListener);
exports.ProxyErrorListener = ProxyErrorListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/DisableInterruptedExtensionsListener.ts":
/*!******************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/DisableInterruptedExtensionsListener.ts ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DisableInterruptedExtensionsListener = void 0;
const PopupEventsOut_1 = __webpack_require__(/*! ../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const InterruptionService_1 = __webpack_require__(/*! ../../services/interruption/InterruptionService */ "./app/bg/modules/app-module/services/interruption/InterruptionService.ts");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const UrbanTypes_1 = __webpack_require__(/*! ../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
let DisableInterruptedExtensionsListener = class DisableInterruptedExtensionsListener {
    constructor(interruptionService) {
        this.interruptionService = interruptionService;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.DISABLE_EXTENSIONS_THAT_CAUSE_INTERRUPTION;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.interruptionService.disableExtensionsThatCauseInterruptions();
            return;
        });
    }
};
DisableInterruptedExtensionsListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_INTERRUPTION_SERVICE)),
    __metadata("design:paramtypes", [InterruptionService_1.InterruptionService])
], DisableInterruptedExtensionsListener);
exports.DisableInterruptedExtensionsListener = DisableInterruptedExtensionsListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/HandsShakeListener.ts":
/*!************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/HandsShakeListener.ts ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HandsShakeListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const UrbanTypes_1 = __webpack_require__(/*! ../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const PopupEventsOut_1 = __webpack_require__(/*! ../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const PopupProcessor_1 = __webpack_require__(/*! ../../services/popupProcessor/PopupProcessor */ "./app/bg/modules/app-module/services/popupProcessor/PopupProcessor.ts");
const States_1 = __webpack_require__(/*! ../../services/popupProcessor/States */ "./app/bg/modules/app-module/services/popupProcessor/States.ts");
let HandsShakeListener = class HandsShakeListener {
    constructor(process) {
        this.process = process;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.HANDS_SHAKE_START;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            console.log(`Handle handshake`);
            this.process.finished(States_1.PopupProcessId.HANDS_SHAKE_START).then();
            return;
        });
    }
};
HandsShakeListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POPUP_PROCESSOR)),
    __metadata("design:paramtypes", [PopupProcessor_1.PopupProcessor])
], HandsShakeListener);
exports.HandsShakeListener = HandsShakeListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/InitPopupListener.ts":
/*!***********************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/InitPopupListener.ts ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InitPopupListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const UrbanTypes_1 = __webpack_require__(/*! ../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const SetupInterceptor_1 = __webpack_require__(/*! ../../../auth-module/services/setup-interceptor/SetupInterceptor */ "./app/bg/modules/auth-module/services/setup-interceptor/SetupInterceptor.ts");
const PopupProcessor_1 = __webpack_require__(/*! ../../services/popupProcessor/PopupProcessor */ "./app/bg/modules/app-module/services/popupProcessor/PopupProcessor.ts");
const States_1 = __webpack_require__(/*! ../../services/popupProcessor/States */ "./app/bg/modules/app-module/services/popupProcessor/States.ts");
const PopupEventsOut_1 = __webpack_require__(/*! ../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const AuthModuleTypes_1 = __webpack_require__(/*! ../../../auth-module/AuthModuleTypes */ "./app/bg/modules/auth-module/AuthModuleTypes.ts");
let InitPopupListener = class InitPopupListener {
    constructor(processor, logger, setup) {
        this.processor = processor;
        this.logger = logger;
        this.setup = setup;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.INIT;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                if (yield this.setup.isAuthTokenNotReady()) {
                    this.logger.warn(`Popup init: a user does not have auth token for anonymous, let's create it`);
                    yield this.setup.setupAuthToken();
                }
                if (yield this.setup.isSecurityTokenNotReady()) {
                    this.logger.warn(`Popup init: a user does not have auth token for anonymous, let's create it`);
                    yield this.setup.setupSecurityToken();
                }
            }
            catch (e) {
                console.log(e);
                this.logger.warn(`InitPopupListener: error`, e);
            }
            this.processor.handleState(States_1.PopupProcessId.INIT).then();
            return;
        });
    }
};
InitPopupListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POPUP_PROCESSOR)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(2, inversify_1.inject(AuthModuleTypes_1.AuthModuleTypes.SETUP_INTERCEPTOR)),
    __metadata("design:paramtypes", [PopupProcessor_1.PopupProcessor, Object, SetupInterceptor_1.SetupInterceptor])
], InitPopupListener);
exports.InitPopupListener = InitPopupListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/ad-blocker/AdBlockerConsentListener.ts":
/*!*****************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/ad-blocker/AdBlockerConsentListener.ts ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdBlockerConsentListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const PopupEventsOut_1 = __webpack_require__(/*! ../../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const AdBlockerService_1 = __webpack_require__(/*! ../../../services/ad-blocker/AdBlockerService */ "./app/bg/modules/app-module/services/ad-blocker/AdBlockerService.ts");
const PopupProcessor_1 = __webpack_require__(/*! ../../../services/popupProcessor/PopupProcessor */ "./app/bg/modules/app-module/services/popupProcessor/PopupProcessor.ts");
const States_1 = __webpack_require__(/*! ../../../services/popupProcessor/States */ "./app/bg/modules/app-module/services/popupProcessor/States.ts");
const PoliciesStorage_1 = __webpack_require__(/*! ../../../storages/PoliciesStorage */ "./app/bg/modules/app-module/storages/PoliciesStorage.ts");
const AdBlockerTypes_1 = __webpack_require__(/*! @urbandevs/mario-ad-blocker/dist/AdBlockerTypes */ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerTypes.js");
const AdBlockerService_2 = __webpack_require__(/*! @urbandevs/mario-ad-blocker/dist/AdBlockerService */ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerService.js");
let AdBlockerConsentListener = class AdBlockerConsentListener {
    constructor(urbanStorage, adBlocker, processor, adBlockerNative) {
        this.urbanStorage = urbanStorage;
        this.adBlocker = adBlocker;
        this.processor = processor;
        this.adBlockerNative = adBlockerNative;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.SET_AD_BLOCKER_CONSENT;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const isAgreed = event.data;
            if (isAgreed) {
                this.adBlockerNative.activateAdBlocker();
                yield Promise.all([
                    this.urbanStorage.agreeAdBlockerPolicy(),
                    this.adBlocker.enableDataCollection()
                ]);
            }
            else {
                yield Promise.all([
                    this.urbanStorage.rejectAdBlockerPolicy(),
                    this.adBlocker.disable(),
                    this.adBlocker.disableDataCollection()
                ]);
            }
            yield this.processor.finished(States_1.PopupProcessId.AD_BLOCKER_CONSENT);
        });
    }
};
AdBlockerConsentListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POLICIES_STORAGE)),
    __param(1, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_AD_BLOCKER_SERVICE)),
    __param(2, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POPUP_PROCESSOR)),
    __param(3, inversify_1.inject(AdBlockerTypes_1.AdBlockerTypes.AD_BLOCKER_SERVICE)),
    __metadata("design:paramtypes", [PoliciesStorage_1.PoliciesStorage,
        AdBlockerService_1.AdBlockerService,
        PopupProcessor_1.PopupProcessor,
        AdBlockerService_2.AdBlockerService])
], AdBlockerConsentListener);
exports.AdBlockerConsentListener = AdBlockerConsentListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/ad-blocker/AdBlockerDisableListener.ts":
/*!*****************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/ad-blocker/AdBlockerDisableListener.ts ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdBlockerDisableListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const PopupEventsOut_1 = __webpack_require__(/*! ../../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const AdBlockerService_1 = __webpack_require__(/*! ../../../services/ad-blocker/AdBlockerService */ "./app/bg/modules/app-module/services/ad-blocker/AdBlockerService.ts");
const PopupProcessor_1 = __webpack_require__(/*! ../../../services/popupProcessor/PopupProcessor */ "./app/bg/modules/app-module/services/popupProcessor/PopupProcessor.ts");
const Analytics_1 = __webpack_require__(/*! ../../../../analytics-module/services/Analytics */ "./app/bg/modules/analytics-module/services/Analytics.ts");
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ../../../../analytics-module/AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
const States_1 = __webpack_require__(/*! ../../../services/popupProcessor/States */ "./app/bg/modules/app-module/services/popupProcessor/States.ts");
let AdBlockerDisableListener = class AdBlockerDisableListener {
    constructor(adBlocker, logger, processor, analytics) {
        this.adBlocker = adBlocker;
        this.logger = logger;
        this.processor = processor;
        this.analytics = analytics;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.AD_BLOCKER_DISABLE;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            this.logger.log('disable ad blocker');
            const trackEvent = {
                event: AnalyticsModuleTypes_1.EventList.AD_BLOCKER__OFF,
                manual: false,
                details: {
                    SOURCE: AnalyticsModuleTypes_1.SourceList.SYSTEM
                }
            };
            this.analytics.track(trackEvent).then();
            yield this.adBlocker.disable();
            yield this.processor.finished(States_1.PopupProcessId.DISABLE_AD_BLOCKER);
            return;
        });
    }
};
AdBlockerDisableListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_AD_BLOCKER_SERVICE)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(2, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POPUP_PROCESSOR)),
    __param(3, inversify_1.inject(AnalyticsModuleTypes_1.AnalyticsModuleTypes.ANALYTICS)),
    __metadata("design:paramtypes", [AdBlockerService_1.AdBlockerService, Object, PopupProcessor_1.PopupProcessor,
        Analytics_1.Analytics])
], AdBlockerDisableListener);
exports.AdBlockerDisableListener = AdBlockerDisableListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/ad-blocker/AdBlockerEnableListener.ts":
/*!****************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/ad-blocker/AdBlockerEnableListener.ts ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdBlockerEnableListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const PopupEventsOut_1 = __webpack_require__(/*! ../../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const AdBlockerService_1 = __webpack_require__(/*! ../../../services/ad-blocker/AdBlockerService */ "./app/bg/modules/app-module/services/ad-blocker/AdBlockerService.ts");
const PopupProcessor_1 = __webpack_require__(/*! ../../../services/popupProcessor/PopupProcessor */ "./app/bg/modules/app-module/services/popupProcessor/PopupProcessor.ts");
const States_1 = __webpack_require__(/*! ../../../services/popupProcessor/States */ "./app/bg/modules/app-module/services/popupProcessor/States.ts");
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ../../../../analytics-module/AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
const Analytics_1 = __webpack_require__(/*! ../../../../analytics-module/services/Analytics */ "./app/bg/modules/analytics-module/services/Analytics.ts");
let AdBlockerEnableListener = class AdBlockerEnableListener {
    constructor(adBlocker, logger, processor, analytics) {
        this.adBlocker = adBlocker;
        this.logger = logger;
        this.processor = processor;
        this.analytics = analytics;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.AD_BLOCKER_ENABLE;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            this.logger.log(`enable ad blocker`);
            const trackEvent = {
                event: AnalyticsModuleTypes_1.EventList.AD_BLOCKER__ON,
                manual: false,
                details: {
                    SOURCE: AnalyticsModuleTypes_1.SourceList.SYSTEM
                }
            };
            this.analytics.track(trackEvent).then();
            yield this.adBlocker.enable();
            yield this.processor.finished(States_1.PopupProcessId.ENABLE_AD_BLOCKER);
            return;
        });
    }
};
AdBlockerEnableListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_AD_BLOCKER_SERVICE)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(2, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POPUP_PROCESSOR)),
    __param(3, inversify_1.inject(AnalyticsModuleTypes_1.AnalyticsModuleTypes.ANALYTICS)),
    __metadata("design:paramtypes", [AdBlockerService_1.AdBlockerService, Object, PopupProcessor_1.PopupProcessor,
        Analytics_1.Analytics])
], AdBlockerEnableListener);
exports.AdBlockerEnableListener = AdBlockerEnableListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/ad-blocker/IsAdBlockerConsentAgreedListener.ts":
/*!*************************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/ad-blocker/IsAdBlockerConsentAgreedListener.ts ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IsAdBlockerConsentAgreedListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const PopupEventsOut_1 = __webpack_require__(/*! ../../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const PoliciesStorage_1 = __webpack_require__(/*! ../../../storages/PoliciesStorage */ "./app/bg/modules/app-module/storages/PoliciesStorage.ts");
const PortDispatcher_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/PortDispatcher/Bg/PortDispatcher */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/PortDispatcher/Bg/PortDispatcher.js");
let IsAdBlockerConsentAgreedListener = class IsAdBlockerConsentAgreedListener {
    constructor(urbanStorage, port) {
        this.urbanStorage = urbanStorage;
        this.port = port;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.IS_AD_BLOCKER_CONSENT_AGREED;
    }
    handle() {
        return __awaiter(this, void 0, void 0, function* () {
            const data = yield this.urbanStorage.isAdBlockerAgreed();
            const response = new src_1.MarioEvent(PopupEventsOut_1.PopupEventsOutResponse.IS_AD_BLOCKER_CONSENT_AGREED_RESPONSE, data);
            return this.port.emit(response);
        });
    }
};
IsAdBlockerConsentAgreedListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POLICIES_STORAGE)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.PORT_DISPATCHER)),
    __metadata("design:paramtypes", [PoliciesStorage_1.PoliciesStorage,
        PortDispatcher_1.PortDispatcher])
], IsAdBlockerConsentAgreedListener);
exports.IsAdBlockerConsentAgreedListener = IsAdBlockerConsentAgreedListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/analytics/google/IsGAEnabledEventListener.ts":
/*!***********************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/analytics/google/IsGAEnabledEventListener.ts ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IsGAEnabledEventListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const AnalyticsModuleEvents_1 = __webpack_require__(/*! ../../../../../analytics-module/AnalyticsModuleEvents */ "./app/bg/modules/analytics-module/AnalyticsModuleEvents.ts");
const GAModuleTypes_1 = __webpack_require__(/*! ../../../../../ga-module/GAModuleTypes */ "./app/bg/modules/ga-module/GAModuleTypes.ts");
const Analytics_1 = __webpack_require__(/*! ../../../../../ga-module/services/Analytics */ "./app/bg/modules/ga-module/services/Analytics.ts");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const PortDispatcher_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/PortDispatcher/Bg/PortDispatcher */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/PortDispatcher/Bg/PortDispatcher.js");
let IsGAEnabledEventListener = class IsGAEnabledEventListener {
    constructor(ga, port) {
        this.ga = ga;
        this.port = port;
    }
    on() {
        return AnalyticsModuleEvents_1.AnalyticsModuleEvents.IS_GA_ENABLED_EVENT;
    }
    handle() {
        return __awaiter(this, void 0, void 0, function* () {
            const response = new src_1.MarioEvent(AnalyticsModuleEvents_1.AnalyticsModuleOutEvents.IS_GA_ENABLED_RESPONSE_EVENT, this.ga.isEnabled());
            return this.port.emit(response);
        });
    }
};
IsGAEnabledEventListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(GAModuleTypes_1.GAModuleTypes.ANALYTICS)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.PORT_DISPATCHER)),
    __metadata("design:paramtypes", [Analytics_1.Analytics,
        PortDispatcher_1.PortDispatcher])
], IsGAEnabledEventListener);
exports.IsGAEnabledEventListener = IsGAEnabledEventListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/analytics/google/SetGAStateEventListener.ts":
/*!**********************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/analytics/google/SetGAStateEventListener.ts ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SetGAStateEventListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const AnalyticsModuleEvents_1 = __webpack_require__(/*! ../../../../../analytics-module/AnalyticsModuleEvents */ "./app/bg/modules/analytics-module/AnalyticsModuleEvents.ts");
const GAModuleTypes_1 = __webpack_require__(/*! ../../../../../ga-module/GAModuleTypes */ "./app/bg/modules/ga-module/GAModuleTypes.ts");
const Analytics_1 = __webpack_require__(/*! ../../../../../ga-module/services/Analytics */ "./app/bg/modules/ga-module/services/Analytics.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const PoliciesStorage_1 = __webpack_require__(/*! ../../../../storages/PoliciesStorage */ "./app/bg/modules/app-module/storages/PoliciesStorage.ts");
let SetGAStateEventListener = class SetGAStateEventListener {
    constructor(ga, policiesStorage) {
        this.ga = ga;
        this.policiesStorage = policiesStorage;
    }
    on() {
        return AnalyticsModuleEvents_1.AnalyticsModuleEvents.SET_GA_STATE_EVENT;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const isEnabled = event.data.isEnabled;
            if (isEnabled) {
                yield Promise.all([
                    this.ga.enable(),
                    this.policiesStorage.agreeGAPolicy()
                ]);
                return;
            }
            yield Promise.all([
                this.ga.disable(),
                this.policiesStorage.rejectGAPolicy()
            ]);
        });
    }
};
SetGAStateEventListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(GAModuleTypes_1.GAModuleTypes.ANALYTICS)),
    __param(1, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POLICIES_STORAGE)),
    __metadata("design:paramtypes", [Analytics_1.Analytics,
        PoliciesStorage_1.PoliciesStorage])
], SetGAStateEventListener);
exports.SetGAStateEventListener = SetGAStateEventListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/analytics/urban/IsUAEnabledEventListener.ts":
/*!**********************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/analytics/urban/IsUAEnabledEventListener.ts ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IsUAEnabledEventListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const AnalyticsModuleEvents_1 = __webpack_require__(/*! ../../../../../analytics-module/AnalyticsModuleEvents */ "./app/bg/modules/analytics-module/AnalyticsModuleEvents.ts");
const Analytics_1 = __webpack_require__(/*! ../../../../../ua-module/services/Analytics */ "./app/bg/modules/ua-module/services/Analytics.ts");
const UaModuleTypes_1 = __webpack_require__(/*! ../../../../../ua-module/UaModuleTypes */ "./app/bg/modules/ua-module/UaModuleTypes.ts");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const PortDispatcher_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/PortDispatcher/Bg/PortDispatcher */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/PortDispatcher/Bg/PortDispatcher.js");
let IsUAEnabledEventListener = class IsUAEnabledEventListener {
    constructor(ua, port) {
        this.ua = ua;
        this.port = port;
    }
    on() {
        return AnalyticsModuleEvents_1.AnalyticsModuleEvents.IS_UA_ENABLED_EVENT;
    }
    handle() {
        return __awaiter(this, void 0, void 0, function* () {
            const response = new src_1.MarioEvent(AnalyticsModuleEvents_1.AnalyticsModuleOutEvents.IS_UA_ENABLED_RESPONSE_EVENT, this.ua.isEnabled());
            return this.port.emit(response);
        });
    }
};
IsUAEnabledEventListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UaModuleTypes_1.UAModuleTypes.ANALYTICS)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.PORT_DISPATCHER)),
    __metadata("design:paramtypes", [Analytics_1.Analytics,
        PortDispatcher_1.PortDispatcher])
], IsUAEnabledEventListener);
exports.IsUAEnabledEventListener = IsUAEnabledEventListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/analytics/urban/SetUAStateEventListener.ts":
/*!*********************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/analytics/urban/SetUAStateEventListener.ts ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SetUAStateEventListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const AnalyticsModuleEvents_1 = __webpack_require__(/*! ../../../../../analytics-module/AnalyticsModuleEvents */ "./app/bg/modules/analytics-module/AnalyticsModuleEvents.ts");
const Analytics_1 = __webpack_require__(/*! ../../../../../ua-module/services/Analytics */ "./app/bg/modules/ua-module/services/Analytics.ts");
const UaModuleTypes_1 = __webpack_require__(/*! ../../../../../ua-module/UaModuleTypes */ "./app/bg/modules/ua-module/UaModuleTypes.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const PoliciesStorage_1 = __webpack_require__(/*! ../../../../storages/PoliciesStorage */ "./app/bg/modules/app-module/storages/PoliciesStorage.ts");
let SetUAStateEventListener = class SetUAStateEventListener {
    constructor(ua, policiesStorage) {
        this.ua = ua;
        this.policiesStorage = policiesStorage;
    }
    on() {
        return AnalyticsModuleEvents_1.AnalyticsModuleEvents.SET_UA_STATE_EVENT;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const isEnabled = event.data.isEnabled;
            if (isEnabled) {
                yield Promise.all([
                    this.ua.enable(),
                    this.policiesStorage.agreeUAPolicy()
                ]);
                return;
            }
            yield Promise.all([
                this.ua.disable(),
                this.policiesStorage.rejectUAPolicy()
            ]);
        });
    }
};
SetUAStateEventListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UaModuleTypes_1.UAModuleTypes.ANALYTICS)),
    __param(1, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POLICIES_STORAGE)),
    __metadata("design:paramtypes", [Analytics_1.Analytics,
        PoliciesStorage_1.PoliciesStorage])
], SetUAStateEventListener);
exports.SetUAStateEventListener = SetUAStateEventListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/anti-male-ware/AntiMaleWareConsentListener.ts":
/*!************************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/anti-male-ware/AntiMaleWareConsentListener.ts ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AntiMaleWareConsentListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const PopupEventsOut_1 = __webpack_require__(/*! ../../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const PoliciesStorage_1 = __webpack_require__(/*! ../../../storages/PoliciesStorage */ "./app/bg/modules/app-module/storages/PoliciesStorage.ts");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! @urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const StateService_1 = __webpack_require__(/*! @urbandevs/mario-urls-safe-check/dist/services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js");
const LibStateService_1 = __webpack_require__(/*! @urbandevs/mario-urls-safe-check/dist/services/LibStateService/LibStateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/LibStateService/LibStateService.js");
const PopupProcessor_1 = __webpack_require__(/*! ../../../services/popupProcessor/PopupProcessor */ "./app/bg/modules/app-module/services/popupProcessor/PopupProcessor.ts");
const States_1 = __webpack_require__(/*! ../../../services/popupProcessor/States */ "./app/bg/modules/app-module/services/popupProcessor/States.ts");
let AntiMaleWareConsentListener = class AntiMaleWareConsentListener {
    constructor(urbanStorage, safeCheckStateService, libStateService, processor) {
        this.urbanStorage = urbanStorage;
        this.safeCheckStateService = safeCheckStateService;
        this.libStateService = libStateService;
        this.processor = processor;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.SET_ANTI_MALE_WARE_CONSENT;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const isAgreed = event.data;
            if (isAgreed) {
                this.safeCheckStateService.setMode(UrlsSafeCheckTypes_1.MODE.FULL_NAVIGATION);
                yield Promise.all([
                    this.urbanStorage.agreeAntiMiningPolicy(),
                    this.libStateService.enable()
                ]);
            }
            else {
                yield Promise.all([
                    this.urbanStorage.rejectAntiMiningPolicy(),
                    this.libStateService.disable(),
                    this.safeCheckStateService.disableNotification()
                ]);
            }
            yield this.processor.finished(States_1.PopupProcessId.ANTI_MALE_WARE_CONSENT);
        });
    }
};
AntiMaleWareConsentListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POLICIES_STORAGE)),
    __param(1, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_SERVICE)),
    __param(2, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_LIB_STATE_SERVICE)),
    __param(3, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POPUP_PROCESSOR)),
    __metadata("design:paramtypes", [PoliciesStorage_1.PoliciesStorage,
        StateService_1.StateService,
        LibStateService_1.LibStateService,
        PopupProcessor_1.PopupProcessor])
], AntiMaleWareConsentListener);
exports.AntiMaleWareConsentListener = AntiMaleWareConsentListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/anti-male-ware/AntiMaleWareDisableListener.ts":
/*!************************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/anti-male-ware/AntiMaleWareDisableListener.ts ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AntiMaleWareDisableListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! @urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const StateService_1 = __webpack_require__(/*! @urbandevs/mario-urls-safe-check/dist/services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js");
const PopupEventsOut_1 = __webpack_require__(/*! ../../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ../../../../analytics-module/AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
const Analytics_1 = __webpack_require__(/*! ../../../../analytics-module/services/Analytics */ "./app/bg/modules/analytics-module/services/Analytics.ts");
const States_1 = __webpack_require__(/*! ../../../services/popupProcessor/States */ "./app/bg/modules/app-module/services/popupProcessor/States.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const PopupProcessor_1 = __webpack_require__(/*! ../../../services/popupProcessor/PopupProcessor */ "./app/bg/modules/app-module/services/popupProcessor/PopupProcessor.ts");
let AntiMaleWareDisableListener = class AntiMaleWareDisableListener {
    constructor(logger, safeCheckStateService, analytics, processor) {
        this.logger = logger;
        this.safeCheckStateService = safeCheckStateService;
        this.analytics = analytics;
        this.processor = processor;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.ANTI_MALE_WARE_DISABLE;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            this.logger.log(`Anti Male Ware Disable`);
            const trackEvent = {
                event: AnalyticsModuleTypes_1.EventList.ANTI_MALWARE__OFF,
                manual: false,
                details: {
                    SOURCE: AnalyticsModuleTypes_1.SourceList.SYSTEM
                }
            };
            this.analytics.track(trackEvent).then();
            yield this.safeCheckStateService.disableNotification();
            yield this.processor.finished(States_1.PopupProcessId.DISABLE_ANTI_MALE_WARE);
            return;
        });
    }
};
AntiMaleWareDisableListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(1, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_SERVICE)),
    __param(2, inversify_1.inject(AnalyticsModuleTypes_1.AnalyticsModuleTypes.ANALYTICS)),
    __param(3, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POPUP_PROCESSOR)),
    __metadata("design:paramtypes", [Object, StateService_1.StateService,
        Analytics_1.Analytics,
        PopupProcessor_1.PopupProcessor])
], AntiMaleWareDisableListener);
exports.AntiMaleWareDisableListener = AntiMaleWareDisableListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/anti-male-ware/AntiMaleWareEnableListener.ts":
/*!***********************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/anti-male-ware/AntiMaleWareEnableListener.ts ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AntiMaleWareEnableListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! @urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const StateService_1 = __webpack_require__(/*! @urbandevs/mario-urls-safe-check/dist/services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js");
const PopupEventsOut_1 = __webpack_require__(/*! ../../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const States_1 = __webpack_require__(/*! ../../../services/popupProcessor/States */ "./app/bg/modules/app-module/services/popupProcessor/States.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const PopupProcessor_1 = __webpack_require__(/*! ../../../services/popupProcessor/PopupProcessor */ "./app/bg/modules/app-module/services/popupProcessor/PopupProcessor.ts");
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ../../../../analytics-module/AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
const Analytics_1 = __webpack_require__(/*! ../../../../analytics-module/services/Analytics */ "./app/bg/modules/analytics-module/services/Analytics.ts");
let AntiMaleWareEnableListener = class AntiMaleWareEnableListener {
    constructor(logger, safeCheckStateService, processor, analytics) {
        this.logger = logger;
        this.safeCheckStateService = safeCheckStateService;
        this.processor = processor;
        this.analytics = analytics;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.ANTI_MALE_WARE_ENABLE;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            this.logger.log(`Anti Male Ware Enable`);
            const trackEvent = {
                event: AnalyticsModuleTypes_1.EventList.ANTI_MALWARE__ON,
                manual: false,
                details: {
                    SOURCE: AnalyticsModuleTypes_1.SourceList.SYSTEM
                }
            };
            this.analytics.track(trackEvent).then();
            yield this.safeCheckStateService.enableNotification();
            yield this.processor.finished(States_1.PopupProcessId.ENABLE_ANTI_MALE_WARE);
            return;
        });
    }
};
AntiMaleWareEnableListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(1, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_SERVICE)),
    __param(2, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POPUP_PROCESSOR)),
    __param(3, inversify_1.inject(AnalyticsModuleTypes_1.AnalyticsModuleTypes.ANALYTICS)),
    __metadata("design:paramtypes", [Object, StateService_1.StateService,
        PopupProcessor_1.PopupProcessor,
        Analytics_1.Analytics])
], AntiMaleWareEnableListener);
exports.AntiMaleWareEnableListener = AntiMaleWareEnableListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/anti-male-ware/IsAntiMaleWareConsentAgreedListener.ts":
/*!********************************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/anti-male-ware/IsAntiMaleWareConsentAgreedListener.ts ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IsAntiMaleWareConsentAgreedListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const PopupEventsOut_1 = __webpack_require__(/*! ../../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const PoliciesStorage_1 = __webpack_require__(/*! ../../../storages/PoliciesStorage */ "./app/bg/modules/app-module/storages/PoliciesStorage.ts");
const PortDispatcher_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/PortDispatcher/Bg/PortDispatcher */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/PortDispatcher/Bg/PortDispatcher.js");
let IsAntiMaleWareConsentAgreedListener = class IsAntiMaleWareConsentAgreedListener {
    constructor(urbanStorage, port) {
        this.urbanStorage = urbanStorage;
        this.port = port;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.IS_ANTI_MALE_WARE_CONSENT_AGREED;
    }
    handle() {
        return __awaiter(this, void 0, void 0, function* () {
            const data = yield this.urbanStorage.isAntiMiningAgreed();
            const response = new src_1.MarioEvent(PopupEventsOut_1.PopupEventsOutResponse.IS_ANTI_MALE_WARE_CONSENT_AGREED_RESPONSE, data);
            return this.port.emit(response);
        });
    }
};
IsAntiMaleWareConsentAgreedListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POLICIES_STORAGE)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.PORT_DISPATCHER)),
    __metadata("design:paramtypes", [PoliciesStorage_1.PoliciesStorage,
        PortDispatcher_1.PortDispatcher])
], IsAntiMaleWareConsentAgreedListener);
exports.IsAntiMaleWareConsentAgreedListener = IsAntiMaleWareConsentAgreedListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/captcha/CaptchaPassedListener.ts":
/*!***********************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/captcha/CaptchaPassedListener.ts ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CaptchaPassedListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const PopupEventsOut_1 = __webpack_require__(/*! ../../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const CaptchaManager_1 = __webpack_require__(/*! ../../../../captcha-module/services/CaptchaManager */ "./app/bg/modules/captcha-module/services/CaptchaManager.ts");
const CaptchaModuleTypes_1 = __webpack_require__(/*! ../../../../captcha-module/CaptchaModuleTypes */ "./app/bg/modules/captcha-module/CaptchaModuleTypes.ts");
let CaptchaPassedListener = class CaptchaPassedListener {
    constructor(captchaManager) {
        this.captchaManager = captchaManager;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.CAPTCHA_PASSED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.captchaManager.markAsPassed();
            return;
        });
    }
};
CaptchaPassedListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(CaptchaModuleTypes_1.CaptchaModuleTypes.CAPTCHA_MANAGER)),
    __metadata("design:paramtypes", [CaptchaManager_1.CaptchaManager])
], CaptchaPassedListener);
exports.CaptchaPassedListener = CaptchaPassedListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/counter/CounterIncreaseListener.ts":
/*!*************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/counter/CounterIncreaseListener.ts ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CounterIncreaseListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const CounterService_1 = __webpack_require__(/*! @urbandevs/mario-counter/dist/CounterService */ "./node_modules/@urbandevs/mario-counter/dist/CounterService.js");
const CounterModuleTypes_1 = __webpack_require__(/*! @urbandevs/mario-counter/dist/CounterModuleTypes */ "./node_modules/@urbandevs/mario-counter/dist/CounterModuleTypes.js");
const PopupEventsOut_1 = __webpack_require__(/*! ../../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
let CounterIncreaseListener = class CounterIncreaseListener {
    constructor(counter) {
        this.counter = counter;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.COUNTER_INCREASE;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const { counter } = event.data;
            this.counter.increase(counter).then();
            return;
        });
    }
};
CounterIncreaseListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(CounterModuleTypes_1.CounterModuleTypes.COUNTER_SERVICE)),
    __metadata("design:paramtypes", [CounterService_1.CounterService])
], CounterIncreaseListener);
exports.CounterIncreaseListener = CounterIncreaseListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/ext-mode/ExtensionModeSetCurrentListener.ts":
/*!**********************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/ext-mode/ExtensionModeSetCurrentListener.ts ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExtensionModeSetCurrentListener = void 0;
const PopupEventsOut_1 = __webpack_require__(/*! ../../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const ExtensionModeService_1 = __webpack_require__(/*! ../../../services/mode/ExtensionModeService */ "./app/bg/modules/app-module/services/mode/ExtensionModeService.ts");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const UrbanTypes_1 = __webpack_require__(/*! ../../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
let ExtensionModeSetCurrentListener = class ExtensionModeSetCurrentListener {
    constructor(extMode) {
        this.extMode = extMode;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.EXT_MODE_SET_CURRENT;
    }
    handle(event) {
        const payload = event.data;
        return this.extMode.setCurrentMode(payload.mode);
    }
};
ExtensionModeSetCurrentListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_EXTENSION_MODE_SERVICE)),
    __metadata("design:paramtypes", [ExtensionModeService_1.ExtensionModeService])
], ExtensionModeSetCurrentListener);
exports.ExtensionModeSetCurrentListener = ExtensionModeSetCurrentListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/location/ActivateLocationListener.ts":
/*!***************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/location/ActivateLocationListener.ts ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActivateLocationListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const LocationModuleTypes_1 = __webpack_require__(/*! ../../../../location-module/LocationModuleTypes */ "./app/bg/modules/location-module/LocationModuleTypes.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const AppService_1 = __webpack_require__(/*! ../../../services/app/AppService */ "./app/bg/modules/app-module/services/app/AppService.ts");
const ProxyLocationTypes_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/ProxyLocationTypes */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationTypes.js");
const LocationHelper_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/services/LocationHelper */ "./node_modules/@urbandevs/mario-proxy-location/dist/services/LocationHelper.js");
const LocationService_1 = __webpack_require__(/*! ../../../../location-module/services/location/LocationService */ "./app/bg/modules/location-module/services/location/LocationService.ts");
const PopupProcessor_1 = __webpack_require__(/*! ../../../services/popupProcessor/PopupProcessor */ "./app/bg/modules/app-module/services/popupProcessor/PopupProcessor.ts");
const PopupEventsOut_1 = __webpack_require__(/*! ../../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const States_1 = __webpack_require__(/*! ../../../services/popupProcessor/States */ "./app/bg/modules/app-module/services/popupProcessor/States.ts");
const LocationCode_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/values/code/LocationCode */ "./node_modules/@urbandevs/mario-proxy-location/dist/values/code/LocationCode.js");
let ActivateLocationListener = class ActivateLocationListener {
    constructor(appState, logger, popup, locationService, helper) {
        this.appState = appState;
        this.logger = logger;
        this.popup = popup;
        this.locationService = locationService;
        this.helper = helper;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.ACTIVATE_LOCATION;
    }
    /**
     * if the extension is already connected to a proxy server
     * it's should be disconnected before to connect a new one
  
     * @param event
     */
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const { provider, code, name } = event.data;
            try {
                yield this.locationService.activate(provider, new LocationCode_1.LocationCode(code));
                const msg = `Connected to ${name}`;
                this.popup.finished(States_1.PopupProcessId.ACTIVATE_LOCATION, msg).then();
            }
            catch (e) {
                this.popup.finishedWithError(States_1.PopupProcessId.ACTIVATE_LOCATION, 'Connection error').then();
            }
            return;
        });
    }
};
ActivateLocationListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_APP_SERVICE)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(2, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POPUP_PROCESSOR)),
    __param(3, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.LOCATION_SERVICE)),
    __param(4, inversify_1.inject(ProxyLocationTypes_1.ProxyLocationTypes.LOCATION_HELPER_SERVICE)),
    __metadata("design:paramtypes", [AppService_1.AppService, Object, PopupProcessor_1.PopupProcessor,
        LocationService_1.LocationService,
        LocationHelper_1.LocationHelper])
], ActivateLocationListener);
exports.ActivateLocationListener = ActivateLocationListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/location/DeactivateLocationListener.ts":
/*!*****************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/location/DeactivateLocationListener.ts ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeactivateLocationListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const UrbanTypes_1 = __webpack_require__(/*! ../../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const LocationModuleTypes_1 = __webpack_require__(/*! ../../../../location-module/LocationModuleTypes */ "./app/bg/modules/location-module/LocationModuleTypes.ts");
const AppService_1 = __webpack_require__(/*! ../../../services/app/AppService */ "./app/bg/modules/app-module/services/app/AppService.ts");
const LocationService_1 = __webpack_require__(/*! ../../../../location-module/services/location/LocationService */ "./app/bg/modules/location-module/services/location/LocationService.ts");
const PopupEventsOut_1 = __webpack_require__(/*! ../../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const States_1 = __webpack_require__(/*! ../../../services/popupProcessor/States */ "./app/bg/modules/app-module/services/popupProcessor/States.ts");
const PopupProcessor_1 = __webpack_require__(/*! ../../../services/popupProcessor/PopupProcessor */ "./app/bg/modules/app-module/services/popupProcessor/PopupProcessor.ts");
let DeactivateLocationListener = class DeactivateLocationListener {
    constructor(appState, logger, popup, locationService) {
        this.appState = appState;
        this.logger = logger;
        this.popup = popup;
        this.locationService = locationService;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.DEACTIVATE_LOCATION;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.locationService.deactivate();
            this.popup.finished(States_1.PopupProcessId.DEACTIVATE_LOCATION, 'Proxy is disconnected').then();
            return;
        });
    }
};
DeactivateLocationListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_APP_SERVICE)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(2, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POPUP_PROCESSOR)),
    __param(3, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.LOCATION_SERVICE)),
    __metadata("design:paramtypes", [AppService_1.AppService, Object, PopupProcessor_1.PopupProcessor,
        LocationService_1.LocationService])
], DeactivateLocationListener);
exports.DeactivateLocationListener = DeactivateLocationListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/page-history/PageHistoryVisitListener.ts":
/*!*******************************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/page-history/PageHistoryVisitListener.ts ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PageHistoryVisitListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const PopupEventsOut_1 = __webpack_require__(/*! ../../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const PageHistoryService_1 = __webpack_require__(/*! ../../../services/page/PageHistoryService */ "./app/bg/modules/app-module/services/page/PageHistoryService.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
let PageHistoryVisitListener = class PageHistoryVisitListener {
    constructor(logger, history) {
        this.logger = logger;
        this.history = history;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.PAGE_HISTORY_VISIT;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const { page } = event.data;
            yield this.history.visit(page);
            return;
        });
    }
};
PageHistoryVisitListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(1, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_PAGE_HISTORY_SERVICE)),
    __metadata("design:paramtypes", [Object, PageHistoryService_1.PageHistoryService])
], PageHistoryVisitListener);
exports.PageHistoryVisitListener = PageHistoryVisitListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/policy/PolicyAgreedListener.ts":
/*!*********************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/policy/PolicyAgreedListener.ts ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolicyAgreedListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const PopupEventsOut_1 = __webpack_require__(/*! ../../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const PolicyService_1 = __webpack_require__(/*! @urbandevs/mario-policy/dist/PolicyService */ "./node_modules/@urbandevs/mario-policy/dist/PolicyService.js");
const PolicyModuleTypes_1 = __webpack_require__(/*! @urbandevs/mario-policy/dist/PolicyModuleTypes */ "./node_modules/@urbandevs/mario-policy/dist/PolicyModuleTypes.js");
let PolicyAgreedListener = class PolicyAgreedListener {
    constructor(policyService) {
        this.policyService = policyService;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.POLICY_AGREED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.policyService.agree();
        });
    }
};
PolicyAgreedListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(PolicyModuleTypes_1.PolicyModuleTypes.POLICY_SERVICE)),
    __metadata("design:paramtypes", [PolicyService_1.PolicyService])
], PolicyAgreedListener);
exports.PolicyAgreedListener = PolicyAgreedListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/policy/PolicyRejectedListener.ts":
/*!***********************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/policy/PolicyRejectedListener.ts ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolicyRejectedListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const PopupEventsOut_1 = __webpack_require__(/*! ../../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
const PolicyService_1 = __webpack_require__(/*! @urbandevs/mario-policy/dist/PolicyService */ "./node_modules/@urbandevs/mario-policy/dist/PolicyService.js");
const PolicyModuleTypes_1 = __webpack_require__(/*! @urbandevs/mario-policy/dist/PolicyModuleTypes */ "./node_modules/@urbandevs/mario-policy/dist/PolicyModuleTypes.js");
let PolicyRejectedListener = class PolicyRejectedListener {
    constructor(policyService) {
        this.policyService = policyService;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.POLICY_REJECTED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.policyService.reject();
        });
    }
};
PolicyRejectedListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(PolicyModuleTypes_1.PolicyModuleTypes.POLICY_SERVICE)),
    __metadata("design:paramtypes", [PolicyService_1.PolicyService])
], PolicyRejectedListener);
exports.PolicyRejectedListener = PolicyRejectedListener;


/***/ }),

/***/ "./app/bg/modules/app-module/listeners/port/tab/CreateNewTabListener.ts":
/*!******************************************************************************!*\
  !*** ./app/bg/modules/app-module/listeners/port/tab/CreateNewTabListener.ts ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateNewTabListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const PopupEventsOut_1 = __webpack_require__(/*! ../../../PopupEventsOut */ "./app/bg/modules/app-module/PopupEventsOut.ts");
let CreateNewTabListener = class CreateNewTabListener {
    constructor(tabService) {
        this.tabService = tabService;
    }
    on() {
        return PopupEventsOut_1.PopupEventsOut.CREATE_TAB;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const props = event.data;
            this.tabService.create(props);
            return;
        });
    }
};
CreateNewTabListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.TAB_SERVICE)),
    __metadata("design:paramtypes", [Object])
], CreateNewTabListener);
exports.CreateNewTabListener = CreateNewTabListener;


/***/ }),

/***/ "./app/bg/modules/app-module/services/ad-blocker/AdBlockerService.ts":
/*!***************************************************************************!*\
  !*** ./app/bg/modules/app-module/services/ad-blocker/AdBlockerService.ts ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdBlockerService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const AdBlockerTypes_1 = __webpack_require__(/*! @urbandevs/mario-ad-blocker/dist/AdBlockerTypes */ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerTypes.js");
const AdBlockerService_1 = __webpack_require__(/*! @urbandevs/mario-ad-blocker/dist/AdBlockerService */ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerService.js");
let AdBlockerService = class AdBlockerService {
    constructor(adBlocker) {
        this.adBlocker = adBlocker;
    }
    enable() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.adBlocker.enableDisplayAdBlocker();
            yield this.adBlocker.enableTwitterAdBlocker();
            yield this.adBlocker.enableFacebookAdBlocker();
        });
    }
    disable() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.adBlocker.disableDisplayAdBlocker();
            yield this.adBlocker.disableTwitterAdBlocker();
            yield this.adBlocker.disableFacebookAdBlocker();
        });
    }
    isEnabled() {
        return __awaiter(this, void 0, void 0, function* () {
            return (yield this.adBlocker.isDisplayAdBlockerEnabled()) ||
                (yield this.adBlocker.isFacebookAdBlockerEnabled()) ||
                (yield this.adBlocker.isTwitterAdBlockerEnabled());
        });
    }
    isDisabled() {
        return __awaiter(this, void 0, void 0, function* () {
            return !(yield this.isEnabled());
        });
    }
    getAdBlockerCountersForActiveTab() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.adBlocker.getAdBlockerCountersForActiveTab();
        });
    }
    enableDataCollection() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.adBlocker.enableDataCollection();
        });
    }
    disableDataCollection() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.adBlocker.disableDataCollection();
        });
    }
};
AdBlockerService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(AdBlockerTypes_1.AdBlockerTypes.AD_BLOCKER_SERVICE)),
    __metadata("design:paramtypes", [AdBlockerService_1.AdBlockerService])
], AdBlockerService);
exports.AdBlockerService = AdBlockerService;


/***/ }),

/***/ "./app/bg/modules/app-module/services/app/AppService.ts":
/*!**************************************************************!*\
  !*** ./app/bg/modules/app-module/services/app/AppService.ts ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const AppState_1 = __webpack_require__(/*! ./AppState */ "./app/bg/modules/app-module/services/app/AppState.ts");
let AppService = class AppService {
    set(state) {
        this.state = state;
    }
    get() {
        return this.state;
    }
    is(state) {
        return this.get() === state;
    }
    isNot(state) {
        return this.get() !== state;
    }
    setStateProxyConnecting() {
        this.set(AppState_1.AppState.PROXY_CONNECTING);
    }
    setStateProxyConnected() {
        this.set(AppState_1.AppState.PROXY_CONNECTED);
    }
    setStateProxyDisconnecting() {
        this.set(AppState_1.AppState.PROXY_DISCONNECTING);
    }
    setStateProxyRepairing() {
        this.set(AppState_1.AppState.PROXY_REPAIRING);
    }
    setStateDirectMode() {
        this.set(AppState_1.AppState.DIRECT_MODE);
    }
    setStateRefreshingToken() {
        this.set(AppState_1.AppState.REFRESHING_TOKEN);
    }
    isState(state) {
        return state === this.state;
    }
    isDirectMode() {
        return this.isState(AppState_1.AppState.DIRECT_MODE);
    }
    isNotDirectMode() {
        return !this.isDirectMode();
    }
    isProxyConnected() {
        return this.isState(AppState_1.AppState.PROXY_CONNECTED);
    }
    isProxyRepairing() {
        return this.isState(AppState_1.AppState.PROXY_REPAIRING);
    }
};
AppService = __decorate([
    inversify_1.injectable()
], AppService);
exports.AppService = AppService;


/***/ }),

/***/ "./app/bg/modules/app-module/services/app/AppState.ts":
/*!************************************************************!*\
  !*** ./app/bg/modules/app-module/services/app/AppState.ts ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AppState = void 0;
var AppState;
(function (AppState) {
    AppState["DIRECT_MODE"] = "DIRECT_MODE";
    AppState["PROXY_DISCONNECTING"] = "PROXY_DISCONNECTING";
    AppState["PROXY_CONNECTING"] = "PROXY_CONNECTING";
    AppState["PROXY_CONNECTED"] = "PROXY_CONNECTED";
    AppState["PROXY_REPAIRING"] = "PROXY_REPAIRING";
    AppState["REFRESHING_TOKEN"] = "REFRESHING_TOKEN";
    AppState["REPAIRING_CONNECTION"] = "REPAIRING_CONNECTION";
})(AppState = exports.AppState || (exports.AppState = {}));


/***/ }),

/***/ "./app/bg/modules/app-module/services/interruption/InterruptionService.ts":
/*!********************************************************************************!*\
  !*** ./app/bg/modules/app-module/services/interruption/InterruptionService.ts ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InterruptionService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
let InterruptionService = class InterruptionService {
    constructor(managementService) {
        this.managementService = managementService;
        this.excludeList = ['ngpampappnmepgilojfohadhhmbhlaek'];
    }
    isExtensionInterrupted() {
        return __awaiter(this, void 0, void 0, function* () {
            const extensions = yield this.getExtensionsThatCauseInterruptions();
            return extensions.length > 0;
        });
    }
    disableExtensionsThatCauseInterruptions() {
        return __awaiter(this, void 0, void 0, function* () {
            const extensions = yield this.getExtensionsThatCauseInterruptions();
            extensions.forEach(extension => this.managementService.setEnabled(extension.id, false));
            return extensions.length;
        });
    }
    getExtensionsThatCauseInterruptions() {
        return __awaiter(this, void 0, void 0, function* () {
            const extensions = yield this.managementService.getAll();
            return extensions.filter(extension => {
                return this.isNoMe(extension.id) &&
                    this.isNotExcludedExtension(extension.id) &&
                    extension.enabled &&
                    extension.permissions.includes('proxy');
            });
        });
    }
    isExcludedExtension(extensionId) {
        return this.excludeList.includes(extensionId);
    }
    isNotExcludedExtension(extensionId) {
        return !this.isExcludedExtension(extensionId);
    }
    isItMe(extensionId) {
        return extensionId === chrome.runtime.id;
    }
    isNoMe(extensionId) {
        return !this.isItMe(extensionId);
    }
};
InterruptionService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.MANAGEMENT)),
    __metadata("design:paramtypes", [Object])
], InterruptionService);
exports.InterruptionService = InterruptionService;


/***/ }),

/***/ "./app/bg/modules/app-module/services/mode/ExtensionMode.ts":
/*!******************************************************************!*\
  !*** ./app/bg/modules/app-module/services/mode/ExtensionMode.ts ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ExtensionMode = void 0;
var ExtensionMode;
(function (ExtensionMode) {
    ExtensionMode["NORMAL"] = "NORMAL";
    ExtensionMode["ANNOUNCEMENT"] = "ANNOUNCEMENT";
})(ExtensionMode = exports.ExtensionMode || (exports.ExtensionMode = {}));


/***/ }),

/***/ "./app/bg/modules/app-module/services/mode/ExtensionModeService.ts":
/*!*************************************************************************!*\
  !*** ./app/bg/modules/app-module/services/mode/ExtensionModeService.ts ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExtensionModeService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const ExtensionMode_1 = __webpack_require__(/*! ./ExtensionMode */ "./app/bg/modules/app-module/services/mode/ExtensionMode.ts");
let ExtensionModeService = class ExtensionModeService {
    constructor(storageService) {
        this.storageService = storageService;
        this.key = 'EXTENSION_MODE';
    }
    getCurrentMode() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!(yield this.storageService.has(this.key))) {
                return ExtensionMode_1.ExtensionMode.NORMAL;
            }
            return this.storageService.get(this.key);
        });
    }
    setCurrentMode(mode) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storageService.set(this.key, mode);
        });
    }
};
ExtensionModeService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.STORAGE_SERVICE)),
    __metadata("design:paramtypes", [Object])
], ExtensionModeService);
exports.ExtensionModeService = ExtensionModeService;


/***/ }),

/***/ "./app/bg/modules/app-module/services/page/PageHistoryService.ts":
/*!***********************************************************************!*\
  !*** ./app/bg/modules/app-module/services/page/PageHistoryService.ts ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PageHistoryService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
let PageHistoryService = class PageHistoryService {
    constructor(storageService) {
        this.storageService = storageService;
    }
    visit(page) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storageService.set('PAGE_' + page, 'VISITED');
        });
    }
    visited(page) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storageService.has('PAGE_' + page);
        });
    }
};
PageHistoryService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.STORAGE_SERVICE)),
    __metadata("design:paramtypes", [Object])
], PageHistoryService);
exports.PageHistoryService = PageHistoryService;


/***/ }),

/***/ "./app/bg/modules/app-module/services/popupProcessor/PopupEmitter.ts":
/*!***************************************************************************!*\
  !*** ./app/bg/modules/app-module/services/popupProcessor/PopupEmitter.ts ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PopupEmitter = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const PortDispatcher_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/PortDispatcher/Bg/PortDispatcher */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/PortDispatcher/Bg/PortDispatcher.js");
const PortList_1 = __webpack_require__(/*! ../../../../PortList */ "./app/bg/PortList.ts");
const UrbanInnerEvents_1 = __webpack_require__(/*! ../../UrbanInnerEvents */ "./app/bg/modules/app-module/UrbanInnerEvents.ts");
let PopupEmitter = class PopupEmitter {
    constructor(portDispatcher, internalDispatcher) {
        this.portDispatcher = portDispatcher;
        this.internalDispatcher = internalDispatcher;
    }
    send(eventName, payload) {
        if (this.portDispatcher.hasPort(PortList_1.PortList.POPUP)) {
            const event = new src_1.MarioEvent(eventName, payload);
            setTimeout(() => this.portDispatcher.emit(event, PortList_1.PortList.POPUP), 0);
        }
        else {
            const event = new src_1.MarioEvent(UrbanInnerEvents_1.UrbanInnerEvents.COULD_NOT_DELIVERY_RESPONSE_TO_POPUP, payload);
            this.internalDispatcher.emit(event).then();
        }
    }
};
PopupEmitter = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.PORT_DISPATCHER)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [PortDispatcher_1.PortDispatcher, Object])
], PopupEmitter);
exports.PopupEmitter = PopupEmitter;


/***/ }),

/***/ "./app/bg/modules/app-module/services/popupProcessor/PopupProcessor.ts":
/*!*****************************************************************************!*\
  !*** ./app/bg/modules/app-module/services/popupProcessor/PopupProcessor.ts ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PopupProcessor = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const PopupStateService_1 = __webpack_require__(/*! ./PopupStateService */ "./app/bg/modules/app-module/services/popupProcessor/PopupStateService.ts");
const States_1 = __webpack_require__(/*! ./States */ "./app/bg/modules/app-module/services/popupProcessor/States.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const PopupEmitter_1 = __webpack_require__(/*! ./PopupEmitter */ "./app/bg/modules/app-module/services/popupProcessor/PopupEmitter.ts");
let PopupProcessor = class PopupProcessor {
    constructor(logger, emitter, stateService) {
        this.logger = logger;
        this.emitter = emitter;
        this.stateService = stateService;
    }
    finished(processId, message) {
        return __awaiter(this, void 0, void 0, function* () {
            this.logger.log(`PopupProcessor: finish "${processId}"`);
            const state = this.getStateHandler(processId);
            try {
                const content = yield this.stateService.getCurrentState(state.fields);
                const res = {
                    ok: true,
                    content,
                    message,
                    onRequest: processId,
                };
                this.emitter.send(state.responseEvent, res);
            }
            catch (e) {
                this.finishedWithError(processId, 'Something went wrong').then();
            }
        });
    }
    //@todo refactor
    handleState(processId, message, ok = true, errType) {
        return __awaiter(this, void 0, void 0, function* () {
            const state = States_1.ProcessingStates[processId];
            try {
                const content = yield this.stateService.getCurrentState(state.fields);
                const res = {
                    ok,
                    content,
                    message,
                    onRequest: processId,
                };
                this.emitter.send(state.responseEvent, res);
            }
            catch (e) {
                console.log(e);
                const res = {
                    ok: false,
                    message: 'Something went wrong',
                    errType,
                    onRequest: processId,
                };
                this.emitter.send(state.responseEvent, res);
            }
        });
    }
    finishedWithError(processId, message, errType) {
        return __awaiter(this, void 0, void 0, function* () {
            const state = this.getStateHandler(processId);
            const content = yield this.stateService.getCurrentState(state.fields);
            const res = {
                ok: false,
                message,
                content,
                errType,
                onRequest: processId,
            };
            this.emitter.send(state.responseEvent, res);
        });
    }
    getStateHandler(processId) {
        return States_1.ProcessingStates[processId];
    }
};
PopupProcessor = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(1, inversify_1.inject(UrbanTypes_1.UrbanTypes.POPUP_EMITTER)),
    __param(2, inversify_1.inject(UrbanTypes_1.UrbanTypes.POPUP_STATE_SERVICE)),
    __metadata("design:paramtypes", [Object, PopupEmitter_1.PopupEmitter,
        PopupStateService_1.PopupStateService])
], PopupProcessor);
exports.PopupProcessor = PopupProcessor;


/***/ }),

/***/ "./app/bg/modules/app-module/services/popupProcessor/PopupStateService.ts":
/*!********************************************************************************!*\
  !*** ./app/bg/modules/app-module/services/popupProcessor/PopupStateService.ts ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PopupStateService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const BrowserEnum_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/BrowserEnum */ "./node_modules/@urbandevs/mario-core/dist/src/BrowserEnum.js");
const LocationModuleTypes_1 = __webpack_require__(/*! ../../../location-module/LocationModuleTypes */ "./app/bg/modules/location-module/LocationModuleTypes.ts");
const LocationService_1 = __webpack_require__(/*! ../../../location-module/services/location/LocationService */ "./app/bg/modules/location-module/services/location/LocationService.ts");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const UrbanPromotionModuleTypes_1 = __webpack_require__(/*! ../../../promotion-module/UrbanPromotionModuleTypes */ "./app/bg/modules/promotion-module/UrbanPromotionModuleTypes.ts");
const PolicyModuleTypes_1 = __webpack_require__(/*! @urbandevs/mario-policy/dist/PolicyModuleTypes */ "./node_modules/@urbandevs/mario-policy/dist/PolicyModuleTypes.js");
const PolicyService_1 = __webpack_require__(/*! @urbandevs/mario-policy/dist/PolicyService */ "./node_modules/@urbandevs/mario-policy/dist/PolicyService.js");
const UrbanPromotionApi_1 = __webpack_require__(/*! ../../../promotion-module/services/UrbanPromotionApi */ "./app/bg/modules/promotion-module/services/UrbanPromotionApi.ts");
const IdentityService_1 = __webpack_require__(/*! @urbandevs/mario-identity/dist/IdentityService */ "./node_modules/@urbandevs/mario-identity/dist/IdentityService.js");
const IdentityTypes_1 = __webpack_require__(/*! @urbandevs/mario-identity/dist/IdentityTypes */ "./node_modules/@urbandevs/mario-identity/dist/IdentityTypes.js");
const PopupTypes_1 = __webpack_require__(/*! ../../PopupTypes */ "./app/bg/modules/app-module/PopupTypes.ts");
const InterruptionService_1 = __webpack_require__(/*! ../interruption/InterruptionService */ "./app/bg/modules/app-module/services/interruption/InterruptionService.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const AdBlockerService_1 = __webpack_require__(/*! ../ad-blocker/AdBlockerService */ "./app/bg/modules/app-module/services/ad-blocker/AdBlockerService.ts");
const PageHistoryService_1 = __webpack_require__(/*! ../page/PageHistoryService */ "./app/bg/modules/app-module/services/page/PageHistoryService.ts");
const CountryRestrictionModuleTypes_1 = __webpack_require__(/*! @urbandevs/mario-country-restriction-check/dist/CountryRestrictionModuleTypes */ "./node_modules/@urbandevs/mario-country-restriction-check/dist/CountryRestrictionModuleTypes.js");
const CountryRestrictionService_1 = __webpack_require__(/*! @urbandevs/mario-country-restriction-check/dist/services/CountryRestrictionService */ "./node_modules/@urbandevs/mario-country-restriction-check/dist/services/CountryRestrictionService.js");
const ExtensionModeService_1 = __webpack_require__(/*! ../mode/ExtensionModeService */ "./app/bg/modules/app-module/services/mode/ExtensionModeService.ts");
const path_1 = __webpack_require__(/*! ../../../../../popup/path */ "./app/popup/path.ts");
const CounterModuleTypes_1 = __webpack_require__(/*! @urbandevs/mario-counter/dist/CounterModuleTypes */ "./node_modules/@urbandevs/mario-counter/dist/CounterModuleTypes.js");
const CounterService_1 = __webpack_require__(/*! @urbandevs/mario-counter/dist/CounterService */ "./node_modules/@urbandevs/mario-counter/dist/CounterService.js");
const CounterList_1 = __webpack_require__(/*! ../../CounterList */ "./app/bg/modules/app-module/CounterList.ts");
const LocationUI_Mapper_1 = __webpack_require__(/*! ../../../../../popup/pages/main/LocationUI_Mapper */ "./app/popup/pages/main/LocationUI_Mapper.ts");
const LocationProvider_1 = __webpack_require__(/*! ../../../location-module/LocationProvider */ "./app/bg/modules/location-module/LocationProvider.ts");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! @urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const StateService_1 = __webpack_require__(/*! @urbandevs/mario-urls-safe-check/dist/services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js");
const AppService_1 = __webpack_require__(/*! ../app/AppService */ "./app/bg/modules/app-module/services/app/AppService.ts");
const CaptchaModuleTypes_1 = __webpack_require__(/*! ../../../captcha-module/CaptchaModuleTypes */ "./app/bg/modules/captcha-module/CaptchaModuleTypes.ts");
const CaptchaManager_1 = __webpack_require__(/*! ../../../captcha-module/services/CaptchaManager */ "./app/bg/modules/captcha-module/services/CaptchaManager.ts");
const PoliciesStorage_1 = __webpack_require__(/*! ../../storages/PoliciesStorage */ "./app/bg/modules/app-module/storages/PoliciesStorage.ts");
let PopupStateService = class PopupStateService {
    constructor(browser, logger, locationService, promoter, policyService, 
    // @inject(FlagModuleTypes.FLAG_SERVICE)
    // private flagService: FlagService,
    identity, restrictionService, interruption, adBlocker, modeService, history, counter, safeCheckStateService, appService, captcha, urbanStorage) {
        this.browser = browser;
        this.logger = logger;
        this.locationService = locationService;
        this.promoter = promoter;
        this.policyService = policyService;
        this.identity = identity;
        this.restrictionService = restrictionService;
        this.interruption = interruption;
        this.adBlocker = adBlocker;
        this.modeService = modeService;
        this.history = history;
        this.counter = counter;
        this.safeCheckStateService = safeCheckStateService;
        this.appService = appService;
        this.captcha = captcha;
        this.urbanStorage = urbanStorage;
    }
    getCurrentState(fields = []) {
        return __awaiter(this, void 0, void 0, function* () {
            const handlers = {
                [PopupTypes_1.PopupStateFields.appState]: () => __awaiter(this, void 0, void 0, function* () { return this.appService.get(); }),
                [PopupTypes_1.PopupStateFields.adsOnPage]: () => __awaiter(this, void 0, void 0, function* () {
                    const adCounter = yield this.adBlocker.getAdBlockerCountersForActiveTab();
                    return adCounter.currentPageTotal;
                }),
                [PopupTypes_1.PopupStateFields.adsTotal]: () => __awaiter(this, void 0, void 0, function* () {
                    const adCounter = yield this.adBlocker.getAdBlockerCountersForActiveTab();
                    return adCounter.currentSessionTotal;
                }),
                [PopupTypes_1.PopupStateFields.isInterrupted]: () => __awaiter(this, void 0, void 0, function* () { return this.isInterrupted(); }),
                [PopupTypes_1.PopupStateFields.promotionElements]: () => __awaiter(this, void 0, void 0, function* () { return this.promoter.getFooter(); }),
                [PopupTypes_1.PopupStateFields.isRateUsPageVisited]: () => __awaiter(this, void 0, void 0, function* () { return this.history.visited(path_1.PATH.RATE_US); }),
                [PopupTypes_1.PopupStateFields.mainPageCounter]: () => __awaiter(this, void 0, void 0, function* () { return this.counter.count(CounterList_1.Counter.MAIN_PAGE_OPENED); }),
                [PopupTypes_1.PopupStateFields.isPolicyAgreed]: () => __awaiter(this, void 0, void 0, function* () { return this.policyService.isAgreed(); }),
                [PopupTypes_1.PopupStateFields.isEnabledAdBlocker]: () => __awaiter(this, void 0, void 0, function* () { return this.adBlocker.isEnabled(); }),
                [PopupTypes_1.PopupStateFields.isAdBlockerPolicyAgreed]: () => __awaiter(this, void 0, void 0, function* () { return this.urbanStorage.isAdBlockerAgreed(); }),
                [PopupTypes_1.PopupStateFields.isEnabledAntiMalware]: () => __awaiter(this, void 0, void 0, function* () { return this.safeCheckStateService.isEnabledNotification(); }),
                [PopupTypes_1.PopupStateFields.isAntiMaleWarePolicyAgreed]: () => __awaiter(this, void 0, void 0, function* () { return this.urbanStorage.isAntiMiningAgreed(); }),
                [PopupTypes_1.PopupStateFields.identityId]: () => __awaiter(this, void 0, void 0, function* () { return this.identity.getIdentityId(); }),
                [PopupTypes_1.PopupStateFields.countryRestriction]: () => __awaiter(this, void 0, void 0, function* () {
                    return {
                        name: this.restrictionService.getRestrictedCountryName(),
                        restricted: this.restrictionService.isRestricted(),
                    };
                }),
                [PopupTypes_1.PopupStateFields.mode]: () => __awaiter(this, void 0, void 0, function* () { return this.modeService.getCurrentMode(); }),
                [PopupTypes_1.PopupStateFields.hasPolicyAnswer]: () => __awaiter(this, void 0, void 0, function* () { return this.policyService.hasAnswer(); }),
                [PopupTypes_1.PopupStateFields.location]: () => __awaiter(this, void 0, void 0, function* () { return this.getCurrentLocation(); }),
                [PopupTypes_1.PopupStateFields.locations]: () => __awaiter(this, void 0, void 0, function* () {
                    try {
                        const earth = yield this.locationService.locations();
                        return LocationUI_Mapper_1.LocationUI_Mapper.map(earth).sort((a, b) => {
                            // the first should be always be Auto Server
                            // than accessible and so
                            // than with lock
                            if (a.provider === LocationProvider_1.LocationProvider.AUTO_SERVER) {
                                return -1;
                            }
                            else if (b.provider === LocationProvider_1.LocationProvider.AUTO_SERVER) {
                                return 1;
                            }
                            if (a.provider === LocationProvider_1.LocationProvider.STREAMING_SERVICE) {
                                return -1;
                            }
                            else if (b.provider === LocationProvider_1.LocationProvider.STREAMING_SERVICE) {
                                return 1;
                            }
                            if (a.isLocked && !b.isLocked) {
                                return 1;
                            }
                            else if (!a.isLocked && b.isLocked) {
                                return -1;
                            }
                            if (a.name === b.name) {
                                return 0;
                            }
                            return a.name > b.name ? 1 : -1;
                        });
                    }
                    catch (e) {
                        this.logger.error(e);
                        throw new Error('Could not load locations');
                    }
                }),
                [PopupTypes_1.PopupStateFields.activationTime]: () => __awaiter(this, void 0, void 0, function* () { return this.locationService.activationTime(); }),
                [PopupTypes_1.PopupStateFields.captcha]: () => __awaiter(this, void 0, void 0, function* () {
                    const captcha = {
                        passed: yield this.captcha.isCaptchaPassed(),
                        enabled: yield this.captcha.isCaptchaEnabled(),
                    };
                    return captcha;
                })
            };
            const state = {};
            for (const field of fields) {
                const handler = handlers[field];
                if (handler) {
                    state[field] = yield handler();
                }
            }
            return state;
        });
    }
    isInterrupted() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.interruption.isExtensionInterrupted();
        });
    }
    getCurrentLocation() {
        return __awaiter(this, void 0, void 0, function* () {
            const location = yield this.locationService.current();
            return LocationUI_Mapper_1.LocationUI_Mapper.mapLocation(location);
        });
    }
};
PopupStateService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.BROWSER)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(2, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.LOCATION_SERVICE)),
    __param(3, inversify_1.inject(UrbanPromotionModuleTypes_1.URBAN_PROMOTION_MODULE_TYPES.URBAN_PROMOTION_API)),
    __param(4, inversify_1.inject(PolicyModuleTypes_1.PolicyModuleTypes.POLICY_SERVICE)),
    __param(5, inversify_1.inject(IdentityTypes_1.IdentityTypes.IDENTITY_SERVICE)),
    __param(6, inversify_1.inject(CountryRestrictionModuleTypes_1.CountryRestrictionModuleTypes.RESTRICTION_SERVICE)),
    __param(7, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_INTERRUPTION_SERVICE)),
    __param(8, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_AD_BLOCKER_SERVICE)),
    __param(9, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_EXTENSION_MODE_SERVICE)),
    __param(10, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_PAGE_HISTORY_SERVICE)),
    __param(11, inversify_1.inject(CounterModuleTypes_1.CounterModuleTypes.COUNTER_SERVICE)),
    __param(12, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_SERVICE)),
    __param(13, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_APP_SERVICE)),
    __param(14, inversify_1.inject(CaptchaModuleTypes_1.CaptchaModuleTypes.CAPTCHA_MANAGER)),
    __param(15, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_POLICIES_STORAGE)),
    __metadata("design:paramtypes", [String, Object, LocationService_1.LocationService,
        UrbanPromotionApi_1.UrbanPromotionApi,
        PolicyService_1.PolicyService,
        IdentityService_1.IdentityService,
        CountryRestrictionService_1.CountryRestrictionService,
        InterruptionService_1.InterruptionService,
        AdBlockerService_1.AdBlockerService,
        ExtensionModeService_1.ExtensionModeService,
        PageHistoryService_1.PageHistoryService,
        CounterService_1.CounterService,
        StateService_1.StateService,
        AppService_1.AppService,
        CaptchaManager_1.CaptchaManager,
        PoliciesStorage_1.PoliciesStorage])
], PopupStateService);
exports.PopupStateService = PopupStateService;


/***/ }),

/***/ "./app/bg/modules/app-module/services/popupProcessor/States.ts":
/*!*********************************************************************!*\
  !*** ./app/bg/modules/app-module/services/popupProcessor/States.ts ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProcessingStates = exports.PopupProcessId = void 0;
const PopupEventsIn_1 = __webpack_require__(/*! ../../PopupEventsIn */ "./app/bg/modules/app-module/PopupEventsIn.ts");
const PopupTypes_1 = __webpack_require__(/*! ../../PopupTypes */ "./app/bg/modules/app-module/PopupTypes.ts");
var PopupProcessId;
(function (PopupProcessId) {
    PopupProcessId["INIT"] = "INIT";
    PopupProcessId["HANDS_SHAKE_START"] = "HANDS_SHAKE_START";
    // COULD_NOT_REPAIR_CONNECTION = 'COULD_NOT_REPAIR_CONNECTION',
    PopupProcessId["ENABLE_AD_BLOCKER"] = "ENABLE_AD_BLOCKER";
    PopupProcessId["DISABLE_AD_BLOCKER"] = "DISABLE_AD_BLOCKER";
    PopupProcessId["AD_BLOCKER_CONSENT"] = "AD_BLOCKER_CONSENT";
    PopupProcessId["ENABLE_ANTI_MALE_WARE"] = "ENABLE_ANTI_MALE_WARE";
    PopupProcessId["DISABLE_ANTI_MALE_WARE"] = "DISABLE_ANTI_MALE_WARE";
    PopupProcessId["ANTI_MALE_WARE_CONSENT"] = "ANTI_MALE_WARE_CONSENT";
    PopupProcessId["ACTIVATE_LOCATION"] = "ACTIVATE_LOCATION";
    PopupProcessId["DEACTIVATE_LOCATION"] = "DEACTIVATE_LOCATION";
})(PopupProcessId = exports.PopupProcessId || (exports.PopupProcessId = {}));
exports.ProcessingStates = {
    [PopupProcessId.INIT]: {
        fields: Object.values(PopupTypes_1.PopupStateFields),
        responseEvent: PopupEventsIn_1.PopupEventsIn.READY,
    },
    [PopupProcessId.HANDS_SHAKE_START]: {
        fields: [],
        responseEvent: PopupEventsIn_1.PopupEventsIn.HANDS_SHAKE_FINISH_RESPONSE
    },
    [PopupProcessId.ENABLE_AD_BLOCKER]: {
        fields: [
            PopupTypes_1.PopupStateFields.isEnabledAdBlocker,
            PopupTypes_1.PopupStateFields.isAdBlockerPolicyAgreed,
            PopupTypes_1.PopupStateFields.isAntiMaleWarePolicyAgreed,
            PopupTypes_1.PopupStateFields.isPolicyAgreed,
            PopupTypes_1.PopupStateFields.hasPolicyAnswer,
        ],
        responseEvent: PopupEventsIn_1.PopupEventsIn.STATE_CHANGED
    },
    [PopupProcessId.DISABLE_AD_BLOCKER]: {
        fields: [
            PopupTypes_1.PopupStateFields.isAdBlockerPolicyAgreed,
            PopupTypes_1.PopupStateFields.isEnabledAdBlocker,
        ],
        responseEvent: PopupEventsIn_1.PopupEventsIn.STATE_CHANGED
    },
    [PopupProcessId.AD_BLOCKER_CONSENT]: {
        fields: [
            PopupTypes_1.PopupStateFields.isEnabledAdBlocker,
            PopupTypes_1.PopupStateFields.isAdBlockerPolicyAgreed,
            PopupTypes_1.PopupStateFields.isPolicyAgreed,
        ],
        responseEvent: PopupEventsIn_1.PopupEventsIn.STATE_CHANGED
    },
    [PopupProcessId.ENABLE_ANTI_MALE_WARE]: {
        fields: [
            PopupTypes_1.PopupStateFields.isEnabledAntiMalware,
            PopupTypes_1.PopupStateFields.isAdBlockerPolicyAgreed,
            PopupTypes_1.PopupStateFields.isAntiMaleWarePolicyAgreed,
            PopupTypes_1.PopupStateFields.isPolicyAgreed,
            PopupTypes_1.PopupStateFields.hasPolicyAnswer,
        ],
        responseEvent: PopupEventsIn_1.PopupEventsIn.STATE_CHANGED
    },
    [PopupProcessId.DISABLE_ANTI_MALE_WARE]: {
        fields: [
            PopupTypes_1.PopupStateFields.isEnabledAntiMalware,
            PopupTypes_1.PopupStateFields.isAntiMaleWarePolicyAgreed
        ],
        responseEvent: PopupEventsIn_1.PopupEventsIn.STATE_CHANGED
    },
    [PopupProcessId.ANTI_MALE_WARE_CONSENT]: {
        fields: [
            PopupTypes_1.PopupStateFields.isEnabledAntiMalware,
            PopupTypes_1.PopupStateFields.isAntiMaleWarePolicyAgreed,
            PopupTypes_1.PopupStateFields.isPolicyAgreed,
        ],
        responseEvent: PopupEventsIn_1.PopupEventsIn.STATE_CHANGED
    },
    [PopupProcessId.ACTIVATE_LOCATION]: {
        fields: [
            PopupTypes_1.PopupStateFields.appState,
            PopupTypes_1.PopupStateFields.location,
            PopupTypes_1.PopupStateFields.activationTime,
        ],
        responseEvent: PopupEventsIn_1.PopupEventsIn.STATE_CHANGED
    },
    [PopupProcessId.DEACTIVATE_LOCATION]: {
        fields: [
            PopupTypes_1.PopupStateFields.appState,
            PopupTypes_1.PopupStateFields.location,
            PopupTypes_1.PopupStateFields.activationTime,
        ],
        responseEvent: PopupEventsIn_1.PopupEventsIn.STATE_CHANGED
    },
};


/***/ }),

/***/ "./app/bg/modules/app-module/services/urbanToolbar/UrbanToolbarService.ts":
/*!********************************************************************************!*\
  !*** ./app/bg/modules/app-module/services/urbanToolbar/UrbanToolbarService.ts ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UrbanToolbarService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const BrowserEnum_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/BrowserEnum */ "./node_modules/@urbandevs/mario-core/dist/src/BrowserEnum.js");
let UrbanToolbarService = class UrbanToolbarService {
    constructor(browser, browserAction) {
        this.browser = browser;
        this.browserAction = browserAction;
    }
    getColoredRoboImage() {
        return 'icons/icon.png';
    }
    getGreyedRoboImage() {
        return 'icons/icon_grey.png';
    }
    draw(src) {
        return __awaiter(this, void 0, void 0, function* () {
            const imageData = yield this.loadImage(src);
            yield this.browserAction.setIcon({ imageData });
        });
    }
    drawFlag(countryCode, bg = this.getColoredRoboImage(), isBadgeShown = false) {
        return __awaiter(this, void 0, void 0, function* () {
            let baseImage = yield this.loadImage(bg);
            let flag = yield this.loadImage(`popup/flags/png/${countryCode.toLowerCase()}.png`);
            let canvas = document.createElement('canvas');
            let context = canvas.getContext('2d');
            context.clearRect(0, 0, 18, 18);
            context.putImageData(baseImage, 0, 0);
            let x = 1;
            let y = 8;
            if (isBadgeShown) {
                y = this.browser === BrowserEnum_1.BrowserEnum.CHROME_BROWSER ? 0 : 8;
            }
            context.putImageData(flag, x, y);
            const imageData = context.getImageData(0, 0, 18, 18);
            yield this.browserAction.setIcon({ imageData });
        });
    }
    drawAnimation(frames, delay = 200) {
        this.stopAnimation();
        const func = (frames) => {
            let i = 0;
            return () => {
                if (i === frames.length) {
                    i = 0;
                }
                const src = frames[i];
                if (this.intervalId) {
                    this.draw(src).then();
                }
                i = i + 1;
            };
        };
        this.intervalId = setInterval(func(frames), delay);
    }
    drawAutoServer() {
        return __awaiter(this, void 0, void 0, function* () {
            let icon = yield this.loadImage(`icons/icon_auto_server.png`);
            let canvas = document.createElement('canvas');
            let context = canvas.getContext('2d');
            context.clearRect(0, 0, 16, 16);
            context.putImageData(icon, 0, 0);
            const imageData = context.getImageData(0, 0, 16, 16);
            yield this.browserAction.setIcon({ imageData });
        });
    }
    stopAnimation() {
        if (this.intervalId) {
            clearInterval(this.intervalId);
        }
    }
    drawConnectionAnimation() {
        const frames = [
            'icons/icon_grey.png',
            'icons/icon_antenna_2.png',
            'icons/icon_antenna_3.png',
            'icons/icon_antenna_2.png',
        ];
        this.drawAnimation(frames);
    }
    loadImage(src) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                let canvas = document.createElement('canvas');
                let context = canvas.getContext('2d');
                context.clearRect(0, 0, 18, 18);
                let image = new Image();
                image.src = src;
                image.onload = function () {
                    context.drawImage(image, 0, 0);
                    context.save();
                    const imageData = context.getImageData(0, 0, image.naturalWidth, image.naturalHeight);
                    resolve(imageData);
                };
                image.onerror = function (e) {
                    reject(e);
                };
            });
        });
    }
};
UrbanToolbarService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.BROWSER)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.BROWSER_ACTION)),
    __metadata("design:paramtypes", [String, Object])
], UrbanToolbarService);
exports.UrbanToolbarService = UrbanToolbarService;


/***/ }),

/***/ "./app/bg/modules/app-module/storages/PoliciesStorage.ts":
/*!***************************************************************!*\
  !*** ./app/bg/modules/app-module/storages/PoliciesStorage.ts ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PoliciesStorage = exports.PoliciesState = exports.PoliciesKeys = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
var PoliciesKeys;
(function (PoliciesKeys) {
    PoliciesKeys["AD_BLOCKER_POLICY"] = "AD_BLOCKER_POLICY";
    PoliciesKeys["ANTI_MINING_POLICY"] = "ANTI_MINING_POLICY";
    PoliciesKeys["GA_POLICY"] = "GA_POLICY";
    PoliciesKeys["UA_POLICY"] = "UA_POLICY";
})(PoliciesKeys = exports.PoliciesKeys || (exports.PoliciesKeys = {}));
var PoliciesState;
(function (PoliciesState) {
    PoliciesState["REJECT"] = "REJECT";
    PoliciesState["AGREE"] = "AGREE";
})(PoliciesState = exports.PoliciesState || (exports.PoliciesState = {}));
let PoliciesStorage = class PoliciesStorage {
    constructor(storage) {
        this.storage = storage;
    }
    isAdBlockerAgreed() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.is(PoliciesState.AGREE, PoliciesKeys.AD_BLOCKER_POLICY);
        });
    }
    isAntiMiningAgreed() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.is(PoliciesState.AGREE, PoliciesKeys.ANTI_MINING_POLICY);
        });
    }
    agreeAdBlockerPolicy() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storage.set(PoliciesKeys.AD_BLOCKER_POLICY, PoliciesState.AGREE);
        });
    }
    rejectAdBlockerPolicy() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storage.set(PoliciesKeys.AD_BLOCKER_POLICY, PoliciesState.REJECT);
        });
    }
    agreeAntiMiningPolicy() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storage.set(PoliciesKeys.ANTI_MINING_POLICY, PoliciesState.AGREE);
        });
    }
    rejectAntiMiningPolicy() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storage.set(PoliciesKeys.ANTI_MINING_POLICY, PoliciesState.REJECT);
        });
    }
    agreeGAPolicy() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storage.set(PoliciesKeys.GA_POLICY, PoliciesState.AGREE);
        });
    }
    rejectGAPolicy() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storage.set(PoliciesKeys.GA_POLICY, PoliciesState.REJECT);
        });
    }
    agreeUAPolicy() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storage.set(PoliciesKeys.UA_POLICY, PoliciesState.AGREE);
        });
    }
    rejectUAPolicy() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storage.set(PoliciesKeys.UA_POLICY, PoliciesState.REJECT);
        });
    }
    hasAnswer(key) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.storage.has(key);
        });
    }
    is(policyType, key) {
        return __awaiter(this, void 0, void 0, function* () {
            if (yield this.hasAnswer(key)) {
                const existingValue = yield this.storage.get(key);
                return existingValue === policyType;
            }
            return false;
        });
    }
};
PoliciesStorage = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.STORAGE_SERVICE)),
    __metadata("design:paramtypes", [Object])
], PoliciesStorage);
exports.PoliciesStorage = PoliciesStorage;


/***/ }),

/***/ "./app/bg/modules/auth-module/AuthModule.ts":
/*!**************************************************!*\
  !*** ./app/bg/modules/auth-module/AuthModule.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const AuthModuleTypes_1 = __webpack_require__(/*! ./AuthModuleTypes */ "./app/bg/modules/auth-module/AuthModuleTypes.ts");
const RequestsInterceptor_1 = __webpack_require__(/*! ./services/requests-interceptor/RequestsInterceptor */ "./app/bg/modules/auth-module/services/requests-interceptor/RequestsInterceptor.ts");
const TokensStorage_1 = __webpack_require__(/*! ./storage/TokensStorage */ "./app/bg/modules/auth-module/storage/TokensStorage.ts");
const SecurityService_1 = __webpack_require__(/*! ./services/security/SecurityService */ "./app/bg/modules/auth-module/services/security/SecurityService.ts");
const AccountService_1 = __webpack_require__(/*! ./services/account/AccountService */ "./app/bg/modules/auth-module/services/account/AccountService.ts");
const SetupInterceptor_1 = __webpack_require__(/*! ./services/setup-interceptor/SetupInterceptor */ "./app/bg/modules/auth-module/services/setup-interceptor/SetupInterceptor.ts");
const AuthMigration_1 = __webpack_require__(/*! ./services/auth-migration/AuthMigration */ "./app/bg/modules/auth-module/services/auth-migration/AuthMigration.ts");
class AuthModule extends src_1.MarioModule {
    name() {
        return 'AuthModule';
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this.mario()
                .container()
                .bind(AuthModuleTypes_1.AuthModuleTypes.CLIENT_APP)
                .toConstantValue(options.clientApp);
            this.mario()
                .container()
                .bind(AuthModuleTypes_1.AuthModuleTypes.BROWSER)
                .toConstantValue(options.browser);
            this.mario()
                .container()
                .bind(AuthModuleTypes_1.AuthModuleTypes.SECURITY_API_URL)
                .toConstantValue(options.securityApi);
            this.mario()
                .container()
                .bind(AuthModuleTypes_1.AuthModuleTypes.ACCOUNT_API_URL)
                .toConstantValue(options.accountApi);
            this
                .mario()
                .registerService(AuthModuleTypes_1.AuthModuleTypes.TOKEN_STORAGE, TokensStorage_1.TokensStorage);
            this
                .mario()
                .registerService(AuthModuleTypes_1.AuthModuleTypes.SECURITY_SERVICE, SecurityService_1.SecurityService);
            this
                .mario()
                .registerService(AuthModuleTypes_1.AuthModuleTypes.ACCOUNT_SERVICE, AccountService_1.AccountService);
            this
                .mario()
                .registerService(AuthModuleTypes_1.AuthModuleTypes.AUTH_REQUESTS_INTERCEPTOR, RequestsInterceptor_1.RequestsInterceptor);
            this
                .mario()
                .registerService(AuthModuleTypes_1.AuthModuleTypes.SETUP_INTERCEPTOR, SetupInterceptor_1.SetupInterceptor);
            this
                .mario()
                .registerService(AuthModuleTypes_1.AuthModuleTypes.AUTH_MIGRATION, AuthMigration_1.AuthMigration);
            yield this.runAuthMigration();
            yield this.setupInterceptor();
            return;
        });
    }
    static use(mario, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return mario.registerModule(AuthModule, options);
        });
    }
    runAuthMigration() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.mario()
                .getService(AuthModuleTypes_1.AuthModuleTypes.AUTH_MIGRATION)
                .runAuthMigration();
        });
    }
    setupInterceptor() {
        return __awaiter(this, void 0, void 0, function* () {
            const setupService = this
                .mario()
                .getService(AuthModuleTypes_1.AuthModuleTypes.SETUP_INTERCEPTOR);
            if (yield setupService.isAuthTokenNotReady()) {
                yield setupService.setupAuthToken();
            }
            if (yield setupService.isSecurityTokenNotReady()) {
                yield setupService.setupSecurityToken();
            }
            yield setupService.setupInterceptor();
            // this.mario().logger().log(`AuthModule: could not start setup interceptor because tokens are not ready`);
            return;
        });
    }
}
exports.AuthModule = AuthModule;


/***/ }),

/***/ "./app/bg/modules/auth-module/AuthModuleTypes.ts":
/*!*******************************************************!*\
  !*** ./app/bg/modules/auth-module/AuthModuleTypes.ts ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthModuleTypes = void 0;
const AuthModuleTypes = {
    AUTH_MIGRATION: Symbol.for('AUTH_MIGRATION'),
    AUTH_REQUESTS_INTERCEPTOR: Symbol.for('AUTH_REQUESTS_INTERCEPTOR'),
    ACCOUNT_SERVICE: Symbol.for('ACCOUNT_SERVICE'),
    ACCOUNT_API_URL: Symbol.for('ACCOUNT_API_URL'),
    TOKEN_STORAGE: Symbol.for('TOKEN_STORAGE'),
    SECURITY_SERVICE: Symbol.for('SECURITY_SERVICE'),
    SECURITY_API_URL: Symbol.for('SECURITY_API_URL'),
    SETUP_INTERCEPTOR: Symbol.for('SETUP_INTERCEPTOR'),
    CLIENT_APP: Symbol.for('CLIENT_APP'),
    BROWSER: Symbol.for('CLIENT_BROWSER'),
};
exports.AuthModuleTypes = AuthModuleTypes;


/***/ }),

/***/ "./app/bg/modules/auth-module/AuthStorageKeys.ts":
/*!*******************************************************!*\
  !*** ./app/bg/modules/auth-module/AuthStorageKeys.ts ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthStorageKeys = void 0;
var AuthStorageKeys;
(function (AuthStorageKeys) {
    AuthStorageKeys["AUTH_ANONYMOUS_AUTH_TOKEN"] = "AUTH_ANONYMOUS_AUTH_TOKEN";
    AuthStorageKeys["AUTH_ANONYMOUS_SECURITY_TOKEN"] = "AUTH_ANONYMOUS_SECURITY_TOKEN";
})(AuthStorageKeys = exports.AuthStorageKeys || (exports.AuthStorageKeys = {}));


/***/ }),

/***/ "./app/bg/modules/auth-module/services/account/AccountService.ts":
/*!***********************************************************************!*\
  !*** ./app/bg/modules/auth-module/services/account/AccountService.ts ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const AuthModuleTypes_1 = __webpack_require__(/*! ../../AuthModuleTypes */ "./app/bg/modules/auth-module/AuthModuleTypes.ts");
const HttpClientModuleTypes_1 = __webpack_require__(/*! @urbandevs/mario-http-client/dist/HttpClientModuleTypes */ "./node_modules/@urbandevs/mario-http-client/dist/HttpClientModuleTypes.js");
const HttpClient_1 = __webpack_require__(/*! @urbandevs/mario-http-client/dist/services/HttpClient */ "./node_modules/@urbandevs/mario-http-client/dist/services/HttpClient.js");
const BrowserEnum_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/BrowserEnum */ "./node_modules/@urbandevs/mario-core/dist/src/BrowserEnum.js");
let AccountService = class AccountService {
    constructor(apiUrl, clientApp, browser, httpClient) {
        this.apiUrl = apiUrl;
        this.clientApp = clientApp;
        this.browser = browser;
        this.httpClient = httpClient;
    }
    registerAnonymous() {
        return __awaiter(this, void 0, void 0, function* () {
            const endpoint = this.buildEndpoint(`/registrations/clientApps/URBAN_VPN_BROWSER_EXTENSION/users/anonymous`);
            const payload = {
                clientApp: {
                    name: this.clientApp,
                    browser: this.mapBrowser(),
                },
            };
            const headers = new Headers();
            headers.append('content-type', 'application/json');
            const options = { headers };
            const extraOptions = {
                skipInterceptor: true,
                skipFailHandler: true,
            };
            return this.httpClient.post(endpoint, payload, options, extraOptions);
        });
    }
    buildEndpoint(url) {
        return this.apiUrl + url;
    }
    mapBrowser() {
        const browsers = {
            [BrowserEnum_1.BrowserEnum.EDGE_BROWSER]: 'EDGE',
            [BrowserEnum_1.BrowserEnum.FIREFOX_BROWSER]: 'FIREFOX',
            [BrowserEnum_1.BrowserEnum.CHROME_BROWSER]: 'CHROME',
        };
        return browsers[this.browser];
    }
};
AccountService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(AuthModuleTypes_1.AuthModuleTypes.ACCOUNT_API_URL)),
    __param(1, inversify_1.inject(AuthModuleTypes_1.AuthModuleTypes.CLIENT_APP)),
    __param(2, inversify_1.inject(AuthModuleTypes_1.AuthModuleTypes.BROWSER)),
    __param(3, inversify_1.inject(HttpClientModuleTypes_1.HTTP_CLIENT_MODULE_TYPES.HTTP_CLIENT)),
    __metadata("design:paramtypes", [String, String, String, HttpClient_1.HttpClient])
], AccountService);
exports.AccountService = AccountService;


/***/ }),

/***/ "./app/bg/modules/auth-module/services/auth-migration/AuthMigration.ts":
/*!*****************************************************************************!*\
  !*** ./app/bg/modules/auth-module/services/auth-migration/AuthMigration.ts ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthMigration = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const TokensStorage_1 = __webpack_require__(/*! ../../storage/TokensStorage */ "./app/bg/modules/auth-module/storage/TokensStorage.ts");
const SetupInterceptor_1 = __webpack_require__(/*! ../setup-interceptor/SetupInterceptor */ "./app/bg/modules/auth-module/services/setup-interceptor/SetupInterceptor.ts");
const AuthModuleTypes_1 = __webpack_require__(/*! ../../AuthModuleTypes */ "./app/bg/modules/auth-module/AuthModuleTypes.ts");
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ../../../analytics-module/AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
const Analytics_1 = __webpack_require__(/*! ../../../analytics-module/services/Analytics */ "./app/bg/modules/analytics-module/services/Analytics.ts");
const OLD_TOKEN_KEY = 'ACCOUNT_SECURITY_TOKEN';
let AuthMigration = class AuthMigration {
    constructor(storage, tokenStorage, interceptor, logger, analytics) {
        this.storage = storage;
        this.tokenStorage = tokenStorage;
        this.interceptor = interceptor;
        this.logger = logger;
        this.analytics = analytics;
    }
    runAuthMigration() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!(yield this.storage.has(OLD_TOKEN_KEY))) {
                return;
            }
            this.logger.log(`AuthMigration: start migrating a token from FREE to PREMIUM`);
            const token = yield this.storage.get(OLD_TOKEN_KEY);
            yield this.storage.remove([OLD_TOKEN_KEY]);
            const authToken = { value: token };
            yield this.tokenStorage.saveAuthToken(authToken);
            const status = yield this.interceptor.setupSecurityToken();
            if (status !== SetupInterceptor_1.SecurityTokenStatus.DONE) {
                this.logger.warn(`AuthMigration: a token migration is failed`);
                yield this.tokenStorage.removeAuthAndSecurityTokens();
            }
            else {
                this.logger.log(`AuthMigration: a token migration is succeeded`);
            }
            return;
        });
    }
};
AuthMigration = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.STORAGE_SERVICE)),
    __param(1, inversify_1.inject(AuthModuleTypes_1.AuthModuleTypes.TOKEN_STORAGE)),
    __param(2, inversify_1.inject(AuthModuleTypes_1.AuthModuleTypes.SETUP_INTERCEPTOR)),
    __param(3, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(4, inversify_1.inject(AnalyticsModuleTypes_1.AnalyticsModuleTypes.ANALYTICS)),
    __metadata("design:paramtypes", [Object, TokensStorage_1.TokensStorage,
        SetupInterceptor_1.SetupInterceptor, Object, Analytics_1.Analytics])
], AuthMigration);
exports.AuthMigration = AuthMigration;


/***/ }),

/***/ "./app/bg/modules/auth-module/services/requests-interceptor/RequestsInterceptor.ts":
/*!*****************************************************************************************!*\
  !*** ./app/bg/modules/auth-module/services/requests-interceptor/RequestsInterceptor.ts ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestsInterceptor = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const HttpClientModuleTypes_1 = __webpack_require__(/*! @urbandevs/mario-http-client/dist/HttpClientModuleTypes */ "./node_modules/@urbandevs/mario-http-client/dist/HttpClientModuleTypes.js");
const HttpClient_1 = __webpack_require__(/*! @urbandevs/mario-http-client/dist/services/HttpClient */ "./node_modules/@urbandevs/mario-http-client/dist/services/HttpClient.js");
const AuthModuleTypes_1 = __webpack_require__(/*! ../../AuthModuleTypes */ "./app/bg/modules/auth-module/AuthModuleTypes.ts");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const TokensStorage_1 = __webpack_require__(/*! ../../storage/TokensStorage */ "./app/bg/modules/auth-module/storage/TokensStorage.ts");
const SecurityService_1 = __webpack_require__(/*! ../security/SecurityService */ "./app/bg/modules/auth-module/services/security/SecurityService.ts");
let RequestsInterceptor = class RequestsInterceptor {
    constructor(httpClient, storage, dispatcher, security) {
        this.httpClient = httpClient;
        this.storage = storage;
        this.dispatcher = dispatcher;
        this.security = security;
        this.interceptionEnabled = false;
        this.httpClient.intercept(this.interceptor.bind(this));
        this.httpClient.onFail(this.failHandler.bind(this));
    }
    setAuthToken(token) {
        this.authToken = token.value;
    }
    getAuthToken() {
        return this.authToken;
    }
    setSecurityToken(token) {
        this.securityToken = token;
    }
    getSecurityToken() {
        return this.securityToken;
    }
    enableInterception() {
        this.interceptionEnabled = true;
    }
    disableInterception() {
        this.interceptionEnabled = false;
    }
    interceptor(request, resolve, reject) {
        if (!this.interceptionEnabled) {
            resolve();
            return;
        }
        const headers = request.headers ? request.headers : new Headers();
        if (headers.has('authorization')) {
            headers.delete('authorization');
        }
        headers.append('authorization', `Bearer ${this.securityToken.value}`);
        if (!headers.has('content-Type')) {
            headers.append('content-Type', 'application/json');
        }
        request.headers = headers;
        resolve();
    }
    ;
    failHandler(response, resolve, reject) {
        if (!this.interceptionEnabled) {
            reject();
        }
        if (response.status !== 401) {
            reject();
        }
        let isTokenRefreshed = false;
        this.security.getSecurityToken(this.authToken)
            .then((res) => {
            this.securityToken = res;
            return this.storage.saveSecurityToken(res);
        })
            .then(() => {
            console.log('token is refreshed');
            isTokenRefreshed = true;
        })
            .catch(() => {
            return Promise.resolve();
        })
            .then(() => {
            isTokenRefreshed ? resolve() : reject();
        });
    }
};
RequestsInterceptor = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(HttpClientModuleTypes_1.HTTP_CLIENT_MODULE_TYPES.HTTP_CLIENT)),
    __param(1, inversify_1.inject(AuthModuleTypes_1.AuthModuleTypes.TOKEN_STORAGE)),
    __param(2, inversify_1.inject(src_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __param(3, inversify_1.inject(AuthModuleTypes_1.AuthModuleTypes.SECURITY_SERVICE)),
    __metadata("design:paramtypes", [HttpClient_1.HttpClient,
        TokensStorage_1.TokensStorage, Object, SecurityService_1.SecurityService])
], RequestsInterceptor);
exports.RequestsInterceptor = RequestsInterceptor;


/***/ }),

/***/ "./app/bg/modules/auth-module/services/security/SecurityService.ts":
/*!*************************************************************************!*\
  !*** ./app/bg/modules/auth-module/services/security/SecurityService.ts ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const HttpClientModuleTypes_1 = __webpack_require__(/*! @urbandevs/mario-http-client/dist/HttpClientModuleTypes */ "./node_modules/@urbandevs/mario-http-client/dist/HttpClientModuleTypes.js");
const HttpClient_1 = __webpack_require__(/*! @urbandevs/mario-http-client/dist/services/HttpClient */ "./node_modules/@urbandevs/mario-http-client/dist/services/HttpClient.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const luxon_1 = __webpack_require__(/*! luxon */ "./node_modules/luxon/build/cjs-browser/luxon.js");
const AuthModuleTypes_1 = __webpack_require__(/*! ../../AuthModuleTypes */ "./app/bg/modules/auth-module/AuthModuleTypes.ts");
let SecurityService = class SecurityService {
    constructor(apiUrl, clientApp, httpClient, logger) {
        this.apiUrl = apiUrl;
        this.clientApp = clientApp;
        this.httpClient = httpClient;
        this.logger = logger;
    }
    getSecurityToken(authToken) {
        const endpoint = this.buildEndpoint('/security/tokens/accs');
        const payload = {
            type: 'accs',
            clientApp: {
                name: this.clientApp,
            }
        };
        const headers = new Headers();
        headers.append('authorization', `Bearer ${authToken}`);
        headers.append('content-Type', 'application/json');
        const options = {
            headers,
        };
        const extra = {
            skipFailHandler: true,
            skipInterceptor: true,
            forceRequest: true,
        };
        return this.httpClient.post(endpoint, payload, options, extra);
    }
    getAuthProxyToken(signature) {
        return __awaiter(this, void 0, void 0, function* () {
            this.logger.log(`SIGNATURE: ${signature}`);
            const endpoint = this.buildEndpoint('/security/tokens/accs-proxy');
            const payload = {
                type: 'accs-proxy',
                clientApp: {
                    name: this.clientApp,
                },
                signature,
            };
            const extraOptions = {
                rawResponse: true,
            };
            const response = yield this.httpClient.post(endpoint, payload, {}, extraOptions);
            const token = yield response.json();
            const httpDate = response.headers.get('Date');
            const time = luxon_1.DateTime.fromHTTP(httpDate).toMillis();
            return {
                token,
                time,
            };
        });
    }
    buildEndpoint(url) {
        return this.apiUrl + url;
    }
};
SecurityService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(AuthModuleTypes_1.AuthModuleTypes.SECURITY_API_URL)),
    __param(1, inversify_1.inject(AuthModuleTypes_1.AuthModuleTypes.CLIENT_APP)),
    __param(2, inversify_1.inject(HttpClientModuleTypes_1.HTTP_CLIENT_MODULE_TYPES.HTTP_CLIENT)),
    __param(3, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [String, String, HttpClient_1.HttpClient, Object])
], SecurityService);
exports.SecurityService = SecurityService;


/***/ }),

/***/ "./app/bg/modules/auth-module/services/setup-interceptor/SetupInterceptor.ts":
/*!***********************************************************************************!*\
  !*** ./app/bg/modules/auth-module/services/setup-interceptor/SetupInterceptor.ts ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SetupInterceptor = exports.SecurityTokenStatus = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const AuthModuleTypes_1 = __webpack_require__(/*! ../../AuthModuleTypes */ "./app/bg/modules/auth-module/AuthModuleTypes.ts");
const TokensStorage_1 = __webpack_require__(/*! ../../storage/TokensStorage */ "./app/bg/modules/auth-module/storage/TokensStorage.ts");
const RequestsInterceptor_1 = __webpack_require__(/*! ../requests-interceptor/RequestsInterceptor */ "./app/bg/modules/auth-module/services/requests-interceptor/RequestsInterceptor.ts");
const SecurityService_1 = __webpack_require__(/*! ../security/SecurityService */ "./app/bg/modules/auth-module/services/security/SecurityService.ts");
const AccountService_1 = __webpack_require__(/*! ../account/AccountService */ "./app/bg/modules/auth-module/services/account/AccountService.ts");
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ../../../analytics-module/AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
const Analytics_1 = __webpack_require__(/*! ../../../analytics-module/services/Analytics */ "./app/bg/modules/analytics-module/services/Analytics.ts");
var SecurityTokenStatus;
(function (SecurityTokenStatus) {
    SecurityTokenStatus["AUTH_ERROR"] = "AUTH_ERROR";
    SecurityTokenStatus["DONE"] = "DONE";
    SecurityTokenStatus["UNKNOWN_ERROR"] = "UNKNOWN_ERROR";
})(SecurityTokenStatus = exports.SecurityTokenStatus || (exports.SecurityTokenStatus = {}));
let SetupInterceptor = class SetupInterceptor {
    constructor(logger, storage, security, interceptor, accountService, analytics) {
        this.logger = logger;
        this.storage = storage;
        this.security = security;
        this.interceptor = interceptor;
        this.accountService = accountService;
        this.analytics = analytics;
        this.interceptorReady = false;
    }
    isAuthTokenReady() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.hasAuthToken();
        });
    }
    isAuthTokenNotReady() {
        return __awaiter(this, void 0, void 0, function* () {
            return !(yield this.isAuthTokenReady());
        });
    }
    isSecurityTokenReady() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.hasSecurityToken();
        });
    }
    isSecurityTokenNotReady() {
        return __awaiter(this, void 0, void 0, function* () {
            return !(yield this.isSecurityTokenReady());
        });
    }
    setupAuthToken() {
        return __awaiter(this, void 0, void 0, function* () {
            if (yield this.isAuthTokenReady()) {
                return true;
            }
            try {
                const authToken = yield this.accountService.registerAnonymous();
                yield this.storage.saveAuthToken(authToken);
            }
            catch (e) {
                this.logger.log(`AuthSetupService: Could not register Anonymous`);
                const event = {
                    event: AnalyticsModuleTypes_1.EventList.COULD_NOT_REGISTER_ANONYMOUS,
                    manual: false,
                    details: {
                        SOURCE: AnalyticsModuleTypes_1.SourceList.SYSTEM,
                    }
                };
                this.analytics.track(event).then();
                return false;
            }
            return true;
        });
    }
    setupSecurityToken() {
        return __awaiter(this, void 0, void 0, function* () {
            if (yield this.storage.hasNoAuthToken()) {
                throw new Error(`AuthSetupService: Could not get security token because no auth token`);
            }
            const authToken = yield this.storage.getAuthToken();
            try {
                const securityToken = yield this.security.getSecurityToken(authToken.value);
                yield this.storage.saveSecurityToken(securityToken);
            }
            catch (e) {
                this.logger.log(`Could not get security token`);
                this.logger.log(e);
                if (e.status === 401) {
                    return SecurityTokenStatus.AUTH_ERROR;
                }
                return SecurityTokenStatus.UNKNOWN_ERROR;
            }
            return SecurityTokenStatus.DONE;
        });
    }
    setupInterceptor() {
        return __awaiter(this, void 0, void 0, function* () {
            const authToken = yield this.storage.getAuthToken();
            const securityToken = yield this.storage.getSecurityToken();
            this.interceptor.setAuthToken(authToken);
            this.interceptor.setSecurityToken(securityToken);
            this.interceptor.enableInterception();
            this.interceptorReady = true;
            return;
        });
    }
    isInterceptorReady() {
        return this.interceptorReady;
    }
    isInterceptorNotReady() {
        return !this.isInterceptorReady();
    }
};
SetupInterceptor = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(1, inversify_1.inject(AuthModuleTypes_1.AuthModuleTypes.TOKEN_STORAGE)),
    __param(2, inversify_1.inject(AuthModuleTypes_1.AuthModuleTypes.SECURITY_SERVICE)),
    __param(3, inversify_1.inject(AuthModuleTypes_1.AuthModuleTypes.AUTH_REQUESTS_INTERCEPTOR)),
    __param(4, inversify_1.inject(AuthModuleTypes_1.AuthModuleTypes.ACCOUNT_SERVICE)),
    __param(5, inversify_1.inject(AnalyticsModuleTypes_1.AnalyticsModuleTypes.ANALYTICS)),
    __metadata("design:paramtypes", [Object, TokensStorage_1.TokensStorage,
        SecurityService_1.SecurityService,
        RequestsInterceptor_1.RequestsInterceptor,
        AccountService_1.AccountService,
        Analytics_1.Analytics])
], SetupInterceptor);
exports.SetupInterceptor = SetupInterceptor;


/***/ }),

/***/ "./app/bg/modules/auth-module/storage/TokensStorage.ts":
/*!*************************************************************!*\
  !*** ./app/bg/modules/auth-module/storage/TokensStorage.ts ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokensStorage = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const AuthStorageKeys_1 = __webpack_require__(/*! ../AuthStorageKeys */ "./app/bg/modules/auth-module/AuthStorageKeys.ts");
let TokensStorage = class TokensStorage {
    constructor(storage) {
        this.storage = storage;
    }
    saveAuthToken(authToken) {
        return __awaiter(this, void 0, void 0, function* () {
            const json = JSON.stringify(authToken);
            yield this.storage.set(AuthStorageKeys_1.AuthStorageKeys.AUTH_ANONYMOUS_AUTH_TOKEN, json);
        });
    }
    saveSecurityToken(securityToken) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storage.set(AuthStorageKeys_1.AuthStorageKeys.AUTH_ANONYMOUS_SECURITY_TOKEN, JSON.stringify(securityToken));
        });
    }
    getAuthToken() {
        return __awaiter(this, void 0, void 0, function* () {
            const json = yield this.storage.get(AuthStorageKeys_1.AuthStorageKeys.AUTH_ANONYMOUS_AUTH_TOKEN);
            return JSON.parse(json);
        });
    }
    getSecurityToken() {
        return __awaiter(this, void 0, void 0, function* () {
            const json = yield this.storage.get(AuthStorageKeys_1.AuthStorageKeys.AUTH_ANONYMOUS_SECURITY_TOKEN);
            return JSON.parse(json);
        });
    }
    hasAuthToken() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.has(AuthStorageKeys_1.AuthStorageKeys.AUTH_ANONYMOUS_AUTH_TOKEN);
        });
    }
    hasNoAuthToken() {
        return __awaiter(this, void 0, void 0, function* () {
            return !(yield this.hasAuthToken());
        });
    }
    hasSecurityToken() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.has(AuthStorageKeys_1.AuthStorageKeys.AUTH_ANONYMOUS_SECURITY_TOKEN);
        });
    }
    hasNoSecurityToken() {
        return __awaiter(this, void 0, void 0, function* () {
            return !(yield this.hasSecurityToken());
        });
    }
    hasAuthAndSecurityTokens() {
        return __awaiter(this, void 0, void 0, function* () {
            return (yield this.hasAuthToken()) && (yield this.hasSecurityToken());
        });
    }
    removeAuthAndSecurityTokens() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storage.remove([
                AuthStorageKeys_1.AuthStorageKeys.AUTH_ANONYMOUS_AUTH_TOKEN,
                AuthStorageKeys_1.AuthStorageKeys.AUTH_ANONYMOUS_SECURITY_TOKEN,
            ]);
        });
    }
};
TokensStorage = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.STORAGE_SERVICE)),
    __metadata("design:paramtypes", [Object])
], TokensStorage);
exports.TokensStorage = TokensStorage;


/***/ }),

/***/ "./app/bg/modules/captcha-module/CaptchaModule.ts":
/*!********************************************************!*\
  !*** ./app/bg/modules/captcha-module/CaptchaModule.ts ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CaptchaModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const CaptchaModuleTypes_1 = __webpack_require__(/*! ./CaptchaModuleTypes */ "./app/bg/modules/captcha-module/CaptchaModuleTypes.ts");
const CaptchaManager_1 = __webpack_require__(/*! ./services/CaptchaManager */ "./app/bg/modules/captcha-module/services/CaptchaManager.ts");
const CaptchaClient_1 = __webpack_require__(/*! ./services/CaptchaClient */ "./app/bg/modules/captcha-module/services/CaptchaClient.ts");
const CaptchaStorage_1 = __webpack_require__(/*! ./storage/CaptchaStorage */ "./app/bg/modules/captcha-module/storage/CaptchaStorage.ts");
class CaptchaModule extends src_1.MarioModule {
    name() {
        return 'CaptchaModule';
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            const opts = options;
            this
                .mario()
                .container()
                .bind(CaptchaModuleTypes_1.CaptchaModuleTypes.CAPTCHA_API_URL)
                .toConstantValue(opts.apiUrl);
            this
                .mario()
                .container()
                .bind(CaptchaModuleTypes_1.CaptchaModuleTypes.CAPTCHA_EXPIRATION_CHECK_TIME)
                .toConstantValue(opts.expirationCheckTime);
            this
                .mario()
                .registerService(CaptchaModuleTypes_1.CaptchaModuleTypes.CAPTCHA_CLIENT, CaptchaClient_1.CaptchaClient);
            this
                .mario()
                .registerService(CaptchaModuleTypes_1.CaptchaModuleTypes.CAPTCHA_MANAGER, CaptchaManager_1.CaptchaManager);
            this
                .mario()
                .registerService(CaptchaModuleTypes_1.CaptchaModuleTypes.CAPTCHA_STORAGE, CaptchaStorage_1.CaptchaStorage);
            return;
        });
    }
    static use(mario, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return mario.registerModule(CaptchaModule, options);
        });
    }
}
exports.CaptchaModule = CaptchaModule;


/***/ }),

/***/ "./app/bg/modules/captcha-module/CaptchaModuleTypes.ts":
/*!*************************************************************!*\
  !*** ./app/bg/modules/captcha-module/CaptchaModuleTypes.ts ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CaptchaModuleTypes = exports.CaptchaStatus = exports.CaptchaVerificationStatus = void 0;
const CaptchaModuleTypes = {
    CAPTCHA_MANAGER: Symbol.for('CAPTCHA_MANAGER'),
    CAPTCHA_CLIENT: Symbol.for('CAPTCHA_CLIENT'),
    CAPTCHA_API_URL: Symbol.for('CAPTCHA_API_URL'),
    CAPTCHA_STORAGE: Symbol.for('CAPTCHA_STORAGE'),
    CAPTCHA_EXPIRATION_CHECK_TIME: Symbol.for('CAPTCHA_EXPIRATION_CHECK_TIME'),
};
exports.CaptchaModuleTypes = CaptchaModuleTypes;
var CaptchaVerificationStatus;
(function (CaptchaVerificationStatus) {
    CaptchaVerificationStatus["PASSED"] = "PASSED";
    CaptchaVerificationStatus["NOT_PASSED"] = "NOT_PASSED";
})(CaptchaVerificationStatus = exports.CaptchaVerificationStatus || (exports.CaptchaVerificationStatus = {}));
var CaptchaStatus;
(function (CaptchaStatus) {
    CaptchaStatus["ENABLED"] = "ENABLED";
    CaptchaStatus["DISABLED"] = "DISABLED";
})(CaptchaStatus = exports.CaptchaStatus || (exports.CaptchaStatus = {}));


/***/ }),

/***/ "./app/bg/modules/captcha-module/services/CaptchaClient.ts":
/*!*****************************************************************!*\
  !*** ./app/bg/modules/captcha-module/services/CaptchaClient.ts ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CaptchaClient = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const CaptchaModuleTypes_1 = __webpack_require__(/*! ../CaptchaModuleTypes */ "./app/bg/modules/captcha-module/CaptchaModuleTypes.ts");
const HttpClient_1 = __webpack_require__(/*! @urbandevs/mario-http-client/dist/services/HttpClient */ "./node_modules/@urbandevs/mario-http-client/dist/services/HttpClient.js");
const HttpClientModuleTypes_1 = __webpack_require__(/*! @urbandevs/mario-http-client/dist/HttpClientModuleTypes */ "./node_modules/@urbandevs/mario-http-client/dist/HttpClientModuleTypes.js");
let CaptchaClient = class CaptchaClient {
    constructor(apiUrl, httpClient) {
        this.apiUrl = apiUrl;
        this.httpClient = httpClient;
    }
    getCaptchaStatus() {
        return __awaiter(this, void 0, void 0, function* () {
            const endpoint = this.buildEndpoint(`/website/country/validate`);
            const res = yield this.httpClient.get(endpoint);
            return res.captcha ? CaptchaModuleTypes_1.CaptchaStatus.ENABLED : CaptchaModuleTypes_1.CaptchaStatus.DISABLED;
        });
    }
    buildEndpoint(url) {
        return `${this.apiUrl}${url}`;
    }
};
CaptchaClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(CaptchaModuleTypes_1.CaptchaModuleTypes.CAPTCHA_API_URL)),
    __param(1, inversify_1.inject(HttpClientModuleTypes_1.HTTP_CLIENT_MODULE_TYPES.HTTP_CLIENT)),
    __metadata("design:paramtypes", [String, HttpClient_1.HttpClient])
], CaptchaClient);
exports.CaptchaClient = CaptchaClient;


/***/ }),

/***/ "./app/bg/modules/captcha-module/services/CaptchaManager.ts":
/*!******************************************************************!*\
  !*** ./app/bg/modules/captcha-module/services/CaptchaManager.ts ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CaptchaManager = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const CaptchaClient_1 = __webpack_require__(/*! ./CaptchaClient */ "./app/bg/modules/captcha-module/services/CaptchaClient.ts");
const CaptchaModuleTypes_1 = __webpack_require__(/*! ../CaptchaModuleTypes */ "./app/bg/modules/captcha-module/CaptchaModuleTypes.ts");
const CaptchaStorage_1 = __webpack_require__(/*! ../storage/CaptchaStorage */ "./app/bg/modules/captcha-module/storage/CaptchaStorage.ts");
const luxon_1 = __webpack_require__(/*! luxon */ "./node_modules/luxon/build/cjs-browser/luxon.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
let CaptchaManager = class CaptchaManager {
    constructor(storage, client, expirationCheckTime, logger) {
        this.storage = storage;
        this.client = client;
        this.expirationCheckTime = expirationCheckTime;
        this.logger = logger;
    }
    isCaptchaPassed() {
        return __awaiter(this, void 0, void 0, function* () {
            return (yield this.storage.getVerificationStatus()) === CaptchaModuleTypes_1.CaptchaVerificationStatus.PASSED;
        });
    }
    isCaptchaEnabled() {
        return __awaiter(this, void 0, void 0, function* () {
            if (yield this.needRefresh()) {
                const status = yield this.refreshCaptchaStatus();
                yield this.storage.setCaptchaStatus(status);
            }
            return (yield this.storage.getCaptchaStatus()) === CaptchaModuleTypes_1.CaptchaStatus.ENABLED;
        });
    }
    markAsPassed() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.setVerificationStatus(CaptchaModuleTypes_1.CaptchaVerificationStatus.PASSED);
        });
    }
    needRefresh() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!(yield this.storage.hasLastCheckTime())) {
                return true;
            }
            const date = yield this.storage.getLastCheckTime();
            const expirationTime = date.plus({ minutes: this.expirationCheckTime });
            return luxon_1.DateTime.local() > expirationTime;
        });
    }
    refreshCaptchaStatus() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const status = yield this.client.getCaptchaStatus();
                yield this.storage.setLastCheckTimeNow();
                return status;
            }
            catch (e) {
                this.logger.error(e);
            }
            return CaptchaModuleTypes_1.CaptchaStatus.DISABLED;
        });
    }
};
CaptchaManager = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(CaptchaModuleTypes_1.CaptchaModuleTypes.CAPTCHA_STORAGE)),
    __param(1, inversify_1.inject(CaptchaModuleTypes_1.CaptchaModuleTypes.CAPTCHA_CLIENT)),
    __param(2, inversify_1.inject(CaptchaModuleTypes_1.CaptchaModuleTypes.CAPTCHA_EXPIRATION_CHECK_TIME)),
    __param(3, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [CaptchaStorage_1.CaptchaStorage,
        CaptchaClient_1.CaptchaClient, Number, Object])
], CaptchaManager);
exports.CaptchaManager = CaptchaManager;


/***/ }),

/***/ "./app/bg/modules/captcha-module/storage/CaptchaStorage.ts":
/*!*****************************************************************!*\
  !*** ./app/bg/modules/captcha-module/storage/CaptchaStorage.ts ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CaptchaStorage = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const CaptchaModuleTypes_1 = __webpack_require__(/*! ../CaptchaModuleTypes */ "./app/bg/modules/captcha-module/CaptchaModuleTypes.ts");
const luxon_1 = __webpack_require__(/*! luxon */ "./node_modules/luxon/build/cjs-browser/luxon.js");
const key = {
    verification: 'CAPTCHA_VERIFICATION_STATUS',
    lastCheckTime: 'CAPTCHA_LAST_CHECK',
    status: 'CAPTCHA_STATUS',
};
let CaptchaStorage = class CaptchaStorage {
    constructor(storage) {
        this.storage = storage;
    }
    getVerificationStatus() {
        return __awaiter(this, void 0, void 0, function* () {
            if (yield this.storage.has(key.verification)) {
                return this.storage.get(key.verification);
            }
            return CaptchaModuleTypes_1.CaptchaVerificationStatus.NOT_PASSED;
        });
    }
    setVerificationStatus(status) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.set(key.verification, status);
        });
    }
    getCaptchaStatus() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.get(key.status);
        });
    }
    setCaptchaStatus(status) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.set(key.status, status);
        });
    }
    getLastCheckTime() {
        return __awaiter(this, void 0, void 0, function* () {
            const lastCheckTime = +(yield this.storage.get(key.lastCheckTime));
            return luxon_1.DateTime.fromSeconds(lastCheckTime);
        });
    }
    hasLastCheckTime() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.has(key.lastCheckTime);
        });
    }
    setLastCheckTimeNow() {
        return __awaiter(this, void 0, void 0, function* () {
            const now = luxon_1.DateTime.local().toSeconds();
            return this.storage.set(key.lastCheckTime, now.toString());
        });
    }
};
CaptchaStorage = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.STORAGE_SERVICE)),
    __metadata("design:paramtypes", [Object])
], CaptchaStorage);
exports.CaptchaStorage = CaptchaStorage;


/***/ }),

/***/ "./app/bg/modules/ga-module/GAModule.ts":
/*!**********************************************!*\
  !*** ./app/bg/modules/ga-module/GAModule.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GAModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const GAModuleTypes_1 = __webpack_require__(/*! ./GAModuleTypes */ "./app/bg/modules/ga-module/GAModuleTypes.ts");
const Analytics_1 = __webpack_require__(/*! ./services/Analytics */ "./app/bg/modules/ga-module/services/Analytics.ts");
const TrackEventListener_1 = __webpack_require__(/*! ./listeners/internal/TrackEventListener */ "./app/bg/modules/ga-module/listeners/internal/TrackEventListener.ts");
class GAModule extends src_1.MarioModule {
    name() {
        return 'GAModule';
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this
                .mario()
                .registerService(GAModuleTypes_1.GAModuleTypes.ANALYTICS, Analytics_1.Analytics);
            this
                .mario()
                .internalDispatcher()
                .on(TrackEventListener_1.TrackEventListener);
        });
    }
    static use(mario, options) {
        return __awaiter(this, void 0, void 0, function* () {
            yield mario.registerModule(GAModule, options);
            return;
        });
    }
}
exports.GAModule = GAModule;


/***/ }),

/***/ "./app/bg/modules/ga-module/GAModuleTypes.ts":
/*!***************************************************!*\
  !*** ./app/bg/modules/ga-module/GAModuleTypes.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.GAModuleTypes = void 0;
exports.GAModuleTypes = {
    ANALYTICS: Symbol.for('APP_GA_ANALYTICS'),
};


/***/ }),

/***/ "./app/bg/modules/ga-module/listeners/internal/TrackEventListener.ts":
/*!***************************************************************************!*\
  !*** ./app/bg/modules/ga-module/listeners/internal/TrackEventListener.ts ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrackEventListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const AnalyticsModuleEvents_1 = __webpack_require__(/*! ../../../analytics-module/AnalyticsModuleEvents */ "./app/bg/modules/analytics-module/AnalyticsModuleEvents.ts");
const GAModuleTypes_1 = __webpack_require__(/*! ../../GAModuleTypes */ "./app/bg/modules/ga-module/GAModuleTypes.ts");
const Analytics_1 = __webpack_require__(/*! ../../services/Analytics */ "./app/bg/modules/ga-module/services/Analytics.ts");
let TrackEventListener = class TrackEventListener {
    constructor(analytics) {
        this.analytics = analytics;
    }
    on() {
        return AnalyticsModuleEvents_1.AnalyticsModuleEvents.TRACK_EVENT;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const payload = event.data;
            yield this.analytics.track(payload);
        });
    }
};
TrackEventListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(GAModuleTypes_1.GAModuleTypes.ANALYTICS)),
    __metadata("design:paramtypes", [Analytics_1.Analytics])
], TrackEventListener);
exports.TrackEventListener = TrackEventListener;


/***/ }),

/***/ "./app/bg/modules/ga-module/services/Analytics.ts":
/*!********************************************************!*\
  !*** ./app/bg/modules/ga-module/services/Analytics.ts ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Analytics = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ../../analytics-module/AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
const GoogleAnalyticsTypes_1 = __webpack_require__(/*! @urbandevs/mario-google-analytics/dist/GoogleAnalyticsTypes */ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsTypes.js");
const GoogleAnalyticsService_1 = __webpack_require__(/*! @urbandevs/mario-google-analytics/dist/GoogleAnalyticsService */ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsService.js");
const LocationHelper_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/services/LocationHelper */ "./node_modules/@urbandevs/mario-proxy-location/dist/services/LocationHelper.js");
const ProxyLocationTypes_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/ProxyLocationTypes */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationTypes.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
let Analytics = class Analytics {
    constructor(ga, helper, logger) {
        this.ga = ga;
        this.helper = helper;
        this.logger = logger;
    }
    track(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const mapper = {
                [AnalyticsModuleTypes_1.EventList.LOCATION_SELECTED]: this.mapLocationSelected.bind(this),
                [AnalyticsModuleTypes_1.EventList.AUTO_SERVER_LOCATION]: this.mapAutoServer.bind(this),
                [AnalyticsModuleTypes_1.EventList.LOCATION_STOPPED]: false,
                [AnalyticsModuleTypes_1.EventList.CLICK]: this.mapClick.bind(this),
                [AnalyticsModuleTypes_1.EventList.EXTENSION_UPDATED]: (event) => {
                    return {
                        category: 'extension',
                        action: 'update',
                        label: event.details.CURRENT_VERSION,
                    };
                },
                [AnalyticsModuleTypes_1.EventList.LOCATION_UI]: false,
                [AnalyticsModuleTypes_1.EventList.ACTIVE_LOCATION_NOT_AVAILABLE]: false,
                [AnalyticsModuleTypes_1.EventList.COULD_NOT_ACTIVATE_LOCATION]: false,
                [AnalyticsModuleTypes_1.EventList.REPAIR_CONNECTION_STARTED]: false,
                [AnalyticsModuleTypes_1.EventList.REPAIR_CONNECTION_RESULT]: false,
                [AnalyticsModuleTypes_1.EventList.COULD_NOT_REGISTER_ANONYMOUS]: false,
                [AnalyticsModuleTypes_1.EventList.COULD_NOT_ESTABLISH_CONNECTION_WITH_PROXY]: false,
                [AnalyticsModuleTypes_1.EventList.AD_BLOCKER__ON]: () => {
                    return {
                        category: 'ad_blocker',
                        action: 'on',
                    };
                },
                [AnalyticsModuleTypes_1.EventList.AD_BLOCKER__OFF]: () => {
                    return {
                        category: 'ad_blocker',
                        action: 'off'
                    };
                },
                [AnalyticsModuleTypes_1.EventList.ANTI_MALWARE__ON]: () => {
                    return {
                        category: 'safe_browsing',
                        action: 'on'
                    };
                },
                [AnalyticsModuleTypes_1.EventList.ANTI_MALWARE__OFF]: () => {
                    return {
                        category: 'safe_browsing',
                        action: 'off'
                    };
                },
                [AnalyticsModuleTypes_1.EventList.PROMOTION_LINK_CLICKED]: this.mapPromotionLinkClicked.bind(this),
                [AnalyticsModuleTypes_1.EventList.POLICY_DECISION]: false,
                [AnalyticsModuleTypes_1.EventList.PAGE_SHOWN]: this.mapPageView.bind(this),
                [AnalyticsModuleTypes_1.EventList.PAGE_CLOSED]: false,
                [AnalyticsModuleTypes_1.EventList.CAPTCHA_SHOWN]: () => {
                    return {
                        category: 'captcha',
                        action: 'shown'
                    };
                },
                [AnalyticsModuleTypes_1.EventList.CAPTCHA_PASSED]: () => {
                    return {
                        category: 'captcha',
                        action: 'passed'
                    };
                },
            };
            if (!mapper[event.event]) {
                this.logger.log(`[Google Analytics] An event "${event.event}" is ignored`);
                return;
            }
            const handler = mapper[event.event];
            try {
                const gaEvent = handler(event);
                if (!gaEvent) {
                    this.logger.log(`[Google Analytics] An event "${event.event}" is not mapped and ignored`);
                    return;
                }
                this.ga.trackEvent(gaEvent.category, gaEvent.action, gaEvent.label);
            }
            catch (e) {
            }
        });
    }
    enable() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.ga.enable();
        });
    }
    disable() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.ga.disable();
        });
    }
    isEnabled() {
        return this.ga.isEnabled();
    }
    mapLocationSelected(event) {
        if (event.details.CODE === AnalyticsModuleTypes_1.LocationType.AUTO_SERVER) {
            throw new Error(`Auto server could be mapped to such event`);
        }
        const country = this.helper.getCountryName(event.details.CODE, event.details.CODE);
        return {
            category: 'Location',
            action: 'OnLocationSelected',
            label: country,
        };
    }
    mapAutoServer(event) {
        const country = this.helper.getCountryName(event.details.CODE, event.details.CODE);
        return {
            category: 'Location',
            action: 'AUTO_SERVER',
            label: country,
        };
    }
    mapClick(event) {
        const list = {
            [AnalyticsModuleTypes_1.ElementList.AD_BLOCKER_TOGGLE_BUTTON]: () => false,
            [AnalyticsModuleTypes_1.ElementList.ANTI_MALWARE_TOGGLE_BUTTON]: () => false,
            [AnalyticsModuleTypes_1.ElementList.DISABLE_OTHER_EXTENSIONS]: () => {
                return {
                    category: 'interruption_page',
                    action: 'click_disable_other_extension'
                };
            },
            [AnalyticsModuleTypes_1.ElementList.AGREED_POLICY_BUTTON]: () => {
                return {
                    category: 'policy_agree_button',
                    action: 'clicked'
                };
            },
            [AnalyticsModuleTypes_1.ElementList.REJECT_POLICY_BUTTON]: () => {
                return {
                    category: 'policy_cancel_button',
                    action: 'clicked'
                };
            },
            [AnalyticsModuleTypes_1.ElementList.RATE_US]: () => {
                return {
                    category: 'rate_us_close_button',
                    action: 'clicked'
                };
            },
            [AnalyticsModuleTypes_1.ElementList.SHARE_LINK]: () => {
                return {
                    category: 'invite_friends_copy_button',
                    action: 'clicked',
                };
            },
            [AnalyticsModuleTypes_1.ElementList.SEARCH_INPUT]: () => {
                return {
                    category: 'SearchInput',
                    action: 'onFocus'
                };
            },
            [AnalyticsModuleTypes_1.ElementList.SEARCH_CLEAR]: () => {
                return {
                    category: 'SearchInput',
                    action: 'onClearSearchString'
                };
            },
            [AnalyticsModuleTypes_1.ElementList.YES_BLOCK_ADS]: () => {
                if (event.details.SOURCE === AnalyticsModuleTypes_1.SourceList.ANNOUNCEMENT_PAGE) {
                    return {
                        category: 'announcement_yes_block_ads_button',
                        action: 'clicked',
                    };
                }
                return false;
            },
            [AnalyticsModuleTypes_1.ElementList.NO_THANKS]: () => {
                if (event.details.SOURCE === AnalyticsModuleTypes_1.SourceList.ANNOUNCEMENT_PAGE) {
                    return {
                        category: 'announcement_no_thanks_button',
                        action: 'clicked',
                    };
                }
                return false;
            },
            [AnalyticsModuleTypes_1.ElementList.RESTRICTED_GOT_IT]: () => {
                return {
                    category: 'country_restriction_page_close_button',
                    action: 'clicked'
                };
            },
            [AnalyticsModuleTypes_1.ElementList.MENU_BUTTON]: () => {
                if (event.details.TO === AnalyticsModuleTypes_1.ActionList.CLOSE_MENU_ACTION) {
                    return {
                        category: 'Menu',
                        action: 'OnCloseMenuClicked'
                    };
                }
                else if (event.details.TO === AnalyticsModuleTypes_1.ActionList.OPEN_MENU_ACTION) {
                    return {
                        category: 'Menu',
                        action: 'OnShowMenuClicked'
                    };
                }
                return false;
            },
            [AnalyticsModuleTypes_1.ElementList.LOCATION_LIST]: () => false,
            [AnalyticsModuleTypes_1.ElementList.PLAY_BUTTON]: () => false,
        };
        const handler = list[event.details.ID];
        return handler();
    }
    mapPageView(event) {
        const list = {
            [AnalyticsModuleTypes_1.SourceList.SYSTEM]: () => false,
            [AnalyticsModuleTypes_1.SourceList.MAIN_PAGE]: () => false,
            [AnalyticsModuleTypes_1.SourceList.INITIALIZING_PAGE]: () => false,
            [AnalyticsModuleTypes_1.SourceList.INTERRUPTION_PAGE]: () => false,
            [AnalyticsModuleTypes_1.SourceList.RATE_US_PAGE]: () => {
                return {
                    category: 'rate_us_page_shown',
                    action: ''
                };
            },
            [AnalyticsModuleTypes_1.SourceList.ANTI_MALE_WARE_CONSENT_PAGE]: () => false,
            [AnalyticsModuleTypes_1.SourceList.AD_BLOCKER_CONSENT_PAGE]: () => false,
            [AnalyticsModuleTypes_1.SourceList.COUNTRY_RESTRICTED_PAGE]: () => {
                return {
                    category: 'country_restriction_page',
                    action: 'shown',
                };
            },
            [AnalyticsModuleTypes_1.SourceList.INVITE_FRIENDS_PAGE]: () => {
                return {
                    category: 'invite_friends_page',
                    action: 'shown',
                };
            },
            [AnalyticsModuleTypes_1.SourceList.WELCOME_CONSENT_PAGE]: () => {
                return {
                    category: 'policy_page',
                    action: 'shown',
                };
            },
            [AnalyticsModuleTypes_1.SourceList.ANNOUNCEMENT_PAGE]: () => {
                return {
                    category: 'announcement_page',
                    action: 'shown',
                };
            }
        };
        const handler = list[event.details.ID];
        return handler();
    }
    mapPromotionLinkClicked(event) {
        return {
            category: 'promotion_link_clicked',
            action: event.details.LINK_TEXT,
            label: event.details.LINK_URL,
        };
    }
};
Analytics = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_SERVICE)),
    __param(1, inversify_1.inject(ProxyLocationTypes_1.ProxyLocationTypes.LOCATION_HELPER_SERVICE)),
    __param(2, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [GoogleAnalyticsService_1.GoogleAnalyticsService,
        LocationHelper_1.LocationHelper, Object])
], Analytics);
exports.Analytics = Analytics;


/***/ }),

/***/ "./app/bg/modules/location-module/LocationModule.ts":
/*!**********************************************************!*\
  !*** ./app/bg/modules/location-module/LocationModule.ts ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var LocationModule_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const LocationModuleTypes_1 = __webpack_require__(/*! ./LocationModuleTypes */ "./app/bg/modules/location-module/LocationModuleTypes.ts");
const LocationService_1 = __webpack_require__(/*! ./services/location/LocationService */ "./app/bg/modules/location-module/services/location/LocationService.ts");
const LocationFactory_1 = __webpack_require__(/*! ./factories/LocationFactory */ "./app/bg/modules/location-module/factories/LocationFactory.ts");
const LocationStorage_1 = __webpack_require__(/*! ./storage/LocationStorage */ "./app/bg/modules/location-module/storage/LocationStorage.ts");
const ConnectionVerification_1 = __webpack_require__(/*! ./services/connection-verification/ConnectionVerification */ "./app/bg/modules/location-module/services/connection-verification/ConnectionVerification.ts");
const SignatureHelper_1 = __webpack_require__(/*! ./services/signature-helper/SignatureHelper */ "./app/bg/modules/location-module/services/signature-helper/SignatureHelper.ts");
const CredentialsHandler_1 = __webpack_require__(/*! ./services/credentials-handler/CredentialsHandler */ "./app/bg/modules/location-module/services/credentials-handler/CredentialsHandler.ts");
const LocationActivator_1 = __webpack_require__(/*! ./services/location/LocationActivator */ "./app/bg/modules/location-module/services/location/LocationActivator.ts");
const LocationDeactivator_1 = __webpack_require__(/*! ./services/location/LocationDeactivator */ "./app/bg/modules/location-module/services/location/LocationDeactivator.ts");
const LocationAlarmManager_1 = __webpack_require__(/*! ./alarms/LocationAlarmManager */ "./app/bg/modules/location-module/alarms/LocationAlarmManager.ts");
const LocationActivatedListener_1 = __webpack_require__(/*! ./listeners/internal/LocationActivatedListener */ "./app/bg/modules/location-module/listeners/internal/LocationActivatedListener.ts");
const LocationDeactivatedListener_1 = __webpack_require__(/*! ./listeners/internal/LocationDeactivatedListener */ "./app/bg/modules/location-module/listeners/internal/LocationDeactivatedListener.ts");
const RefreshProxyTokenListener_1 = __webpack_require__(/*! ./listeners/internal/RefreshProxyTokenListener */ "./app/bg/modules/location-module/listeners/internal/RefreshProxyTokenListener.ts");
const RepairConnectionListener_1 = __webpack_require__(/*! ./listeners/internal/repair-connection/RepairConnectionListener */ "./app/bg/modules/location-module/listeners/internal/repair-connection/RepairConnectionListener.ts");
const WebRequestErrors_1 = __webpack_require__(/*! ./listeners/internal/WebRequestErrors */ "./app/bg/modules/location-module/listeners/internal/WebRequestErrors.ts");
const LocationBeforeActivatedListener_1 = __webpack_require__(/*! ./listeners/internal/LocationBeforeActivatedListener */ "./app/bg/modules/location-module/listeners/internal/LocationBeforeActivatedListener.ts");
const ProxyErrorListener_1 = __webpack_require__(/*! ./listeners/internal/ProxyErrorListener */ "./app/bg/modules/location-module/listeners/internal/ProxyErrorListener.ts");
let LocationModule = LocationModule_1 = class LocationModule extends src_1.MarioModule {
    name() {
        return 'LocationModule';
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this
                .mario()
                .registerService(LocationModuleTypes_1.LocationModuleTypes.LOCATION_STORAGE, LocationStorage_1.LocationStorage);
            this.mario()
                .container()
                .bind(LocationModuleTypes_1.LocationModuleTypes.REFRESH_TOKEN_SHIFT_EXPIRATION_TIME_MINUTES)
                .toConstantValue(options.refreshTokenShiftExpirationTimeMinutes);
            this.mario()
                .container()
                .bind(LocationModuleTypes_1.LocationModuleTypes.BY_PASS)
                .toConstantValue(options.byPass);
            this
                .mario()
                .registerService(LocationModuleTypes_1.LocationModuleTypes.LOCATION_FACTORY, LocationFactory_1.LocationFactory);
            this
                .mario()
                .registerService(LocationModuleTypes_1.LocationModuleTypes.CONNECTION_VERIFICATION, ConnectionVerification_1.ConnectionVerification);
            this
                .mario()
                .registerService(LocationModuleTypes_1.LocationModuleTypes.SIGNATURE_HELPER, SignatureHelper_1.SignatureHelper);
            this
                .mario()
                .registerService(LocationModuleTypes_1.LocationModuleTypes.CREDENTIALS_HANDLER, CredentialsHandler_1.CredentialsHandler);
            this
                .mario()
                .registerService(LocationModuleTypes_1.LocationModuleTypes.LOCATION_ACTIVATOR, LocationActivator_1.LocationActivator);
            this
                .mario()
                .registerService(LocationModuleTypes_1.LocationModuleTypes.LOCATION_DEACTIVATOR, LocationDeactivator_1.LocationDeactivator);
            this
                .mario()
                .registerService(LocationModuleTypes_1.LocationModuleTypes.ALARM, LocationAlarmManager_1.LocationAlarmManager);
            this
                .mario()
                .registerService(LocationModuleTypes_1.LocationModuleTypes.LOCATION_SERVICE, LocationService_1.LocationService);
            yield this.setupCurrentLocation();
            this
                .mario()
                .internalDispatcher()
                .on(LocationActivatedListener_1.LocationActivatedListener);
            this
                .mario()
                .internalDispatcher()
                .on(LocationDeactivatedListener_1.LocationDeactivatedListener);
            this
                .mario()
                .internalDispatcher()
                .on(LocationBeforeActivatedListener_1.LocationBeforeActivatedListener);
            this
                .mario()
                .internalDispatcher()
                .on(RefreshProxyTokenListener_1.RefreshProxyTokenListener);
            this
                .mario()
                .internalDispatcher()
                .on(RepairConnectionListener_1.RepairConnectionListener);
            this
                .mario()
                .internalDispatcher()
                .on(WebRequestErrors_1.WebRequestErrors);
            this
                .mario()
                .internalDispatcher()
                .on(ProxyErrorListener_1.ProxyErrorListener);
            return;
        });
    }
    static use(mario, options) {
        return mario.registerModule(LocationModule_1, options);
    }
    setupCurrentLocation() {
        return __awaiter(this, void 0, void 0, function* () {
            this
                .mario()
                .registerService(LocationModuleTypes_1.LocationModuleTypes.LOCATION_STORAGE, LocationStorage_1.LocationStorage);
            const storage = this
                .mario()
                .getService(LocationModuleTypes_1.LocationModuleTypes.LOCATION_STORAGE);
            if (!(yield storage.hasCurrent())) {
                // set default value
                const factory = this
                    .mario()
                    .getService(LocationModuleTypes_1.LocationModuleTypes.LOCATION_FACTORY);
                const autoServer = factory.makeAutoServer();
                yield storage.storeCurrent(autoServer);
            }
        });
    }
};
LocationModule = LocationModule_1 = __decorate([
    inversify_1.injectable()
], LocationModule);
exports.LocationModule = LocationModule;


/***/ }),

/***/ "./app/bg/modules/location-module/LocationModuleEvents.ts":
/*!****************************************************************!*\
  !*** ./app/bg/modules/location-module/LocationModuleEvents.ts ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationModuleEvents = void 0;
var LocationModuleEvents;
(function (LocationModuleEvents) {
    LocationModuleEvents["REPAIR_CONNECTION"] = "REPAIR_CONNECTION";
    LocationModuleEvents["COULD_NOT_REPAIR_CONNECTION"] = "COULD_NOT_REPAIR_CONNECTION";
    LocationModuleEvents["BEFORE_TOKEN_REFRESHED"] = "BEFORE_TOKEN_REFRESHED";
    LocationModuleEvents["ACTIVE_LOCATION_NOT_AVAILABLE"] = "ACTIVE_LOCATION_NOT_AVAILABLE";
    LocationModuleEvents["LOCATION_COULD_NOT_BE_ACTIVATED"] = "LOCATION_COULD_NOT_BE_ACTIVATED";
    LocationModuleEvents["LOCATION_TARGET"] = "LOCATION_TARGET";
})(LocationModuleEvents = exports.LocationModuleEvents || (exports.LocationModuleEvents = {}));


/***/ }),

/***/ "./app/bg/modules/location-module/LocationModuleTypes.ts":
/*!***************************************************************!*\
  !*** ./app/bg/modules/location-module/LocationModuleTypes.ts ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationModuleTypes = void 0;
const LocationModuleTypes = {
    BY_PASS: Symbol.for('LOCATION_MODULE_BY_PASS'),
    CONNECTION_VERIFICATION: Symbol.for('CONNECTION_VERIFICATION'),
    CREDENTIALS_HANDLER: Symbol.for('CREDENTIALS_HANDLER'),
    LOCATION_SERVICE: Symbol.for('LOCATION_MODULE_LOCATION_SERVICE'),
    LOCATION_STORAGE: Symbol.for('LOCATION_MODULE_LOCATION_STORAGE'),
    LOCATION_FACTORY: Symbol.for('LOCATION_MODULE_LOCATION_FACTORY'),
    LOCATION_ACTIVATOR: Symbol.for('LOCATION_MODULE_LOCATION_ACTIVATOR'),
    LOCATION_DEACTIVATOR: Symbol.for('LOCATION_MODULE_LOCATION_DEACTIVATOR'),
    SIGNATURE_HELPER: Symbol.for('SIGNATURE_HELPER'),
    REFRESH_TOKEN_SHIFT_EXPIRATION_TIME_MINUTES: Symbol.for('REFRESH_TOKEN_SHIFT_EXPIRATION_TIME_MINUTES'),
    ALARM: Symbol.for('LOCATION_MODULE_ALARM_MANAGER'),
};
exports.LocationModuleTypes = LocationModuleTypes;


/***/ }),

/***/ "./app/bg/modules/location-module/LocationProvider.ts":
/*!************************************************************!*\
  !*** ./app/bg/modules/location-module/LocationProvider.ts ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationProvider = void 0;
var LocationProvider;
(function (LocationProvider) {
    LocationProvider["GENERIC"] = "GENERIC";
    LocationProvider["AUTO_SERVER"] = "AUTO_SERVER";
    LocationProvider["STREAMING_SERVICE"] = "STREAMING_SERVICE";
})(LocationProvider = exports.LocationProvider || (exports.LocationProvider = {}));


/***/ }),

/***/ "./app/bg/modules/location-module/LocationStorageKeys.ts":
/*!***************************************************************!*\
  !*** ./app/bg/modules/location-module/LocationStorageKeys.ts ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationStorageKeys = void 0;
var LocationStorageKeys;
(function (LocationStorageKeys) {
    LocationStorageKeys["ACTIVATION_TIME"] = "LOCATION_STORAGE_ACTIVATION_TIME";
    LocationStorageKeys["CURRENT"] = "LOCATION_STORAGE_CURRENT";
    LocationStorageKeys["LOCATIONS"] = "LOCATION_STORAGE_LOCATIONS";
    LocationStorageKeys["SYNC_TIME"] = "LOCATION_STORAGE_SYNC_TIME";
})(LocationStorageKeys = exports.LocationStorageKeys || (exports.LocationStorageKeys = {}));


/***/ }),

/***/ "./app/bg/modules/location-module/LocationType.ts":
/*!********************************************************!*\
  !*** ./app/bg/modules/location-module/LocationType.ts ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationType = void 0;
var LocationType;
(function (LocationType) {
    LocationType["ACCESSIBLE"] = "ACCESSIBLE";
    LocationType["RANDOM"] = "RANDOM";
    LocationType["INACCESSIBLE"] = "INACCESSIBLE";
})(LocationType = exports.LocationType || (exports.LocationType = {}));


/***/ }),

/***/ "./app/bg/modules/location-module/alarms/LocationAlarmManager.ts":
/*!***********************************************************************!*\
  !*** ./app/bg/modules/location-module/alarms/LocationAlarmManager.ts ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationAlarmManager = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const luxon_1 = __webpack_require__(/*! luxon */ "./node_modules/luxon/build/cjs-browser/luxon.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const LocationModuleTypes_1 = __webpack_require__(/*! ../LocationModuleTypes */ "./app/bg/modules/location-module/LocationModuleTypes.ts");
const LocationAlarms_1 = __webpack_require__(/*! ./LocationAlarms */ "./app/bg/modules/location-module/alarms/LocationAlarms.ts");
const CredentialsHandler_1 = __webpack_require__(/*! ../services/credentials-handler/CredentialsHandler */ "./app/bg/modules/location-module/services/credentials-handler/CredentialsHandler.ts");
let LocationAlarmManager = class LocationAlarmManager {
    constructor(alarm, shiftMinutes, credentialsHolder, logger) {
        this.alarm = alarm;
        this.shiftMinutes = shiftMinutes;
        this.credentialsHolder = credentialsHolder;
        this.logger = logger;
    }
    setup() {
        this.logger.log('LocationAlarmManager: Setup auto refreshing an auth proxy token');
        const token = this.credentialsHolder.getAuthProxyToken();
        const duration = {
            minutes: this.shiftMinutes,
        };
        const when = luxon_1.DateTime.fromMillis(token.expirationTime).minus(duration);
        this.logger.log(`LocationAlarmManager: Refresh proxy token at ${when}`);
        const alarmCreate = {
            when: when.toMillis(),
        };
        this.alarm.create(alarmCreate, LocationAlarms_1.LocationAlarms.REFRESH_PROXY_TOKEN);
    }
    clear() {
        return this.alarm.clear(LocationAlarms_1.LocationAlarms.REFRESH_PROXY_TOKEN);
    }
};
LocationAlarmManager = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.ALARM_SERVICE)),
    __param(1, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.REFRESH_TOKEN_SHIFT_EXPIRATION_TIME_MINUTES)),
    __param(2, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.CREDENTIALS_HANDLER)),
    __param(3, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [Object, Number, CredentialsHandler_1.CredentialsHandler, Object])
], LocationAlarmManager);
exports.LocationAlarmManager = LocationAlarmManager;


/***/ }),

/***/ "./app/bg/modules/location-module/alarms/LocationAlarms.ts":
/*!*****************************************************************!*\
  !*** ./app/bg/modules/location-module/alarms/LocationAlarms.ts ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationAlarms = void 0;
var LocationAlarms;
(function (LocationAlarms) {
    LocationAlarms["REFRESH_PROXY_TOKEN"] = "REFRESH_PROXY_TOKEN";
})(LocationAlarms = exports.LocationAlarms || (exports.LocationAlarms = {}));


/***/ }),

/***/ "./app/bg/modules/location-module/factories/LocationFactory.ts":
/*!*********************************************************************!*\
  !*** ./app/bg/modules/location-module/factories/LocationFactory.ts ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationFactory = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const ProxyLocation_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/models/ProxyLocation */ "./node_modules/@urbandevs/mario-proxy-location/dist/models/ProxyLocation.js");
const LocationType_1 = __webpack_require__(/*! ../LocationType */ "./app/bg/modules/location-module/LocationType.ts");
const LocationProvider_1 = __webpack_require__(/*! ../LocationProvider */ "./app/bg/modules/location-module/LocationProvider.ts");
let LocationFactory = class LocationFactory {
    makeAutoServer() {
        return ProxyLocation_1.ProxyLocation.create('Auto server', 'AUTO_SERVER', LocationType_1.LocationType.RANDOM, LocationProvider_1.LocationProvider.AUTO_SERVER);
    }
    makePlanet() {
        return ProxyLocation_1.ProxyLocation.create('USER_PLANET', 'USER_PLANET', 'USER_PLANET');
    }
};
LocationFactory = __decorate([
    inversify_1.injectable()
], LocationFactory);
exports.LocationFactory = LocationFactory;


/***/ }),

/***/ "./app/bg/modules/location-module/listeners/internal/LocationActivatedListener.ts":
/*!****************************************************************************************!*\
  !*** ./app/bg/modules/location-module/listeners/internal/LocationActivatedListener.ts ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationActivatedListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const ProxyLocationEvents_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/ProxyLocationEvents */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationEvents.js");
const LocationAlarmManager_1 = __webpack_require__(/*! ../../alarms/LocationAlarmManager */ "./app/bg/modules/location-module/alarms/LocationAlarmManager.ts");
const LocationModuleTypes_1 = __webpack_require__(/*! ../../LocationModuleTypes */ "./app/bg/modules/location-module/LocationModuleTypes.ts");
let LocationActivatedListener = class LocationActivatedListener {
    constructor(alarm) {
        this.alarm = alarm;
    }
    on() {
        return ProxyLocationEvents_1.ProxyLocationEvents.PROXY_LOCATION_AFTER_ACTIVATED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.alarm.setup();
            return;
        });
    }
};
LocationActivatedListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.ALARM)),
    __metadata("design:paramtypes", [LocationAlarmManager_1.LocationAlarmManager])
], LocationActivatedListener);
exports.LocationActivatedListener = LocationActivatedListener;


/***/ }),

/***/ "./app/bg/modules/location-module/listeners/internal/LocationBeforeActivatedListener.ts":
/*!**********************************************************************************************!*\
  !*** ./app/bg/modules/location-module/listeners/internal/LocationBeforeActivatedListener.ts ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationBeforeActivatedListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const ProxyLocationEvents_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/ProxyLocationEvents */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationEvents.js");
const LocationAlarmManager_1 = __webpack_require__(/*! ../../alarms/LocationAlarmManager */ "./app/bg/modules/location-module/alarms/LocationAlarmManager.ts");
const LocationModuleTypes_1 = __webpack_require__(/*! ../../LocationModuleTypes */ "./app/bg/modules/location-module/LocationModuleTypes.ts");
const CredentialsHandler_1 = __webpack_require__(/*! ../../services/credentials-handler/CredentialsHandler */ "./app/bg/modules/location-module/services/credentials-handler/CredentialsHandler.ts");
let LocationBeforeActivatedListener = class LocationBeforeActivatedListener {
    constructor(alarm, credentials) {
        this.alarm = alarm;
        this.credentials = credentials;
    }
    on() {
        return ProxyLocationEvents_1.ProxyLocationEvents.PROXY_LOCATION_BEFORE_ACTIVATED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.alarm.clear();
            this.credentials.reset();
            return;
        });
    }
};
LocationBeforeActivatedListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.ALARM)),
    __param(1, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.CREDENTIALS_HANDLER)),
    __metadata("design:paramtypes", [LocationAlarmManager_1.LocationAlarmManager,
        CredentialsHandler_1.CredentialsHandler])
], LocationBeforeActivatedListener);
exports.LocationBeforeActivatedListener = LocationBeforeActivatedListener;


/***/ }),

/***/ "./app/bg/modules/location-module/listeners/internal/LocationDeactivatedListener.ts":
/*!******************************************************************************************!*\
  !*** ./app/bg/modules/location-module/listeners/internal/LocationDeactivatedListener.ts ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationDeactivatedListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const ProxyLocationEvents_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/ProxyLocationEvents */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationEvents.js");
const LocationAlarmManager_1 = __webpack_require__(/*! ../../alarms/LocationAlarmManager */ "./app/bg/modules/location-module/alarms/LocationAlarmManager.ts");
const LocationModuleTypes_1 = __webpack_require__(/*! ../../LocationModuleTypes */ "./app/bg/modules/location-module/LocationModuleTypes.ts");
const CredentialsHandler_1 = __webpack_require__(/*! ../../services/credentials-handler/CredentialsHandler */ "./app/bg/modules/location-module/services/credentials-handler/CredentialsHandler.ts");
let LocationDeactivatedListener = class LocationDeactivatedListener {
    constructor(alarm, credentials) {
        this.alarm = alarm;
        this.credentials = credentials;
    }
    on() {
        return ProxyLocationEvents_1.ProxyLocationEvents.PROXY_LOCATION_AFTER_DEACTIVATED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.alarm.clear();
            this.credentials.reset();
            return;
        });
    }
};
LocationDeactivatedListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.ALARM)),
    __param(1, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.CREDENTIALS_HANDLER)),
    __metadata("design:paramtypes", [LocationAlarmManager_1.LocationAlarmManager,
        CredentialsHandler_1.CredentialsHandler])
], LocationDeactivatedListener);
exports.LocationDeactivatedListener = LocationDeactivatedListener;


/***/ }),

/***/ "./app/bg/modules/location-module/listeners/internal/ProxyErrorListener.ts":
/*!*********************************************************************************!*\
  !*** ./app/bg/modules/location-module/listeners/internal/ProxyErrorListener.ts ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyErrorListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const RepairConnectionReason_1 = __webpack_require__(/*! ./repair-connection/RepairConnectionReason */ "./app/bg/modules/location-module/listeners/internal/repair-connection/RepairConnectionReason.ts");
const LocationModuleEvents_1 = __webpack_require__(/*! ../../LocationModuleEvents */ "./app/bg/modules/location-module/LocationModuleEvents.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../../app-module/UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const AppService_1 = __webpack_require__(/*! ../../../app-module/services/app/AppService */ "./app/bg/modules/app-module/services/app/AppService.ts");
const AppState_1 = __webpack_require__(/*! ../../../app-module/services/app/AppState */ "./app/bg/modules/app-module/services/app/AppState.ts");
let ProxyErrorListener = class ProxyErrorListener {
    constructor(state, dispatcher, logger) {
        this.state = state;
        this.dispatcher = dispatcher;
        this.logger = logger;
    }
    on() {
        return 'PROXY_ERROR';
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.state.is(AppState_1.AppState.PROXY_CONNECTED)) {
                return;
            }
            const { error } = event.data;
            this.logger.warn('ProxyErrorListener handle: ' + error);
            const errors = [
                'net::ERR_PROXY_CONNECTION_FAILED',
            ];
            if (errors.includes(error)) {
                const payload = {
                    reason: RepairConnectionReason_1.RepairConnectionReason.CONNECTION_REFUSED,
                };
                const event = new src_1.MarioEvent(LocationModuleEvents_1.LocationModuleEvents.REPAIR_CONNECTION, payload);
                this.dispatcher.emit(event).then();
            }
            return;
        });
    }
};
ProxyErrorListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_APP_SERVICE)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __param(2, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [AppService_1.AppService, Object, Object])
], ProxyErrorListener);
exports.ProxyErrorListener = ProxyErrorListener;


/***/ }),

/***/ "./app/bg/modules/location-module/listeners/internal/RefreshProxyTokenListener.ts":
/*!****************************************************************************************!*\
  !*** ./app/bg/modules/location-module/listeners/internal/RefreshProxyTokenListener.ts ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RefreshProxyTokenListener = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const AlarmEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Alarm/Bg/AlarmEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Alarm/Bg/AlarmEvents.js");
const LocationModuleTypes_1 = __webpack_require__(/*! ../../LocationModuleTypes */ "./app/bg/modules/location-module/LocationModuleTypes.ts");
const LocationService_1 = __webpack_require__(/*! ../../services/location/LocationService */ "./app/bg/modules/location-module/services/location/LocationService.ts");
const LocationAlarms_1 = __webpack_require__(/*! ../../alarms/LocationAlarms */ "./app/bg/modules/location-module/alarms/LocationAlarms.ts");
const LocationAlarmManager_1 = __webpack_require__(/*! ../../alarms/LocationAlarmManager */ "./app/bg/modules/location-module/alarms/LocationAlarmManager.ts");
/**
 * it should refresh a proxy token with repetition
 */
let RefreshProxyTokenListener = class RefreshProxyTokenListener {
    constructor(alarm, locationService, logger) {
        this.alarm = alarm;
        this.locationService = locationService;
        this.logger = logger;
    }
    on() {
        return AlarmEvents_1.AlarmEvents.ALARM_ELAPSED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const { name } = event.data;
            if (name !== LocationAlarms_1.LocationAlarms.REFRESH_PROXY_TOKEN) {
                return;
            }
            try {
                yield this.locationService.refresh();
                this.alarm.setup();
            }
            catch (e) {
                this.logger.warn(`RefreshProxyTokenListener: Something happened with refreshing`);
            }
            return;
        });
    }
};
RefreshProxyTokenListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.ALARM)),
    __param(1, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.LOCATION_SERVICE)),
    __param(2, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [LocationAlarmManager_1.LocationAlarmManager,
        LocationService_1.LocationService, Object])
], RefreshProxyTokenListener);
exports.RefreshProxyTokenListener = RefreshProxyTokenListener;


/***/ }),

/***/ "./app/bg/modules/location-module/listeners/internal/WebRequestErrors.ts":
/*!*******************************************************************************!*\
  !*** ./app/bg/modules/location-module/listeners/internal/WebRequestErrors.ts ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebRequestErrors = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const WebRequestServiceEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents.js");
let WebRequestErrors = class WebRequestErrors {
    constructor(
    // @inject(StateModuleTypes.STATE)
    // private state: State,
    dispatcher) {
        this.dispatcher = dispatcher;
    }
    on() {
        return WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_ERROR_OCCURRED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            // if (!this.state.is(AppState.PROTECTED)) {
            //   return;
            // }
            // const { details } = event.data;
            // const errors = [
            //   'NS_ERROR_PROXY_CONNECTION_REFUSED',
            //   'ERR_PROXY_CONNECTION_FAILED',
            // ];
            //
            // if (errors.includes(details.error)) {
            //   const payload = {
            //     reason: RepairConnectionReason.CONNECTION_REFUSED,
            //   };
            //   const event = new MarioEvent(LocationModuleEvents.REPAIR_CONNECTION, payload);
            //   this.dispatcher.emit(event).then();
            // }
            return;
        });
    }
};
WebRequestErrors = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [Object])
], WebRequestErrors);
exports.WebRequestErrors = WebRequestErrors;


/***/ }),

/***/ "./app/bg/modules/location-module/listeners/internal/repair-connection/RepairConnectionListener.ts":
/*!*********************************************************************************************************!*\
  !*** ./app/bg/modules/location-module/listeners/internal/repair-connection/RepairConnectionListener.ts ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RepairConnectionListener = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const LocationModuleEvents_1 = __webpack_require__(/*! ../../../LocationModuleEvents */ "./app/bg/modules/location-module/LocationModuleEvents.ts");
const LocationService_1 = __webpack_require__(/*! ../../../services/location/LocationService */ "./app/bg/modules/location-module/services/location/LocationService.ts");
const LocationModuleTypes_1 = __webpack_require__(/*! ../../../LocationModuleTypes */ "./app/bg/modules/location-module/LocationModuleTypes.ts");
const UrbanTypes_1 = __webpack_require__(/*! ../../../../app-module/UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const AppService_1 = __webpack_require__(/*! ../../../../app-module/services/app/AppService */ "./app/bg/modules/app-module/services/app/AppService.ts");
const AppState_1 = __webpack_require__(/*! ../../../../app-module/services/app/AppState */ "./app/bg/modules/app-module/services/app/AppState.ts");
let RepairConnectionListener = class RepairConnectionListener {
    constructor(logger, state, locationService, dispatcher) {
        this.logger = logger;
        this.state = state;
        this.locationService = locationService;
        this.dispatcher = dispatcher;
    }
    on() {
        return LocationModuleEvents_1.LocationModuleEvents.REPAIR_CONNECTION;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.state.is(AppState_1.AppState.PROXY_CONNECTED)) {
                return;
            }
            const payload = event.data;
            try {
                yield this.locationService.repair(payload.reason);
            }
            catch (e) {
                this.dispatcher.emit(new src_1.MarioEvent(LocationModuleEvents_1.LocationModuleEvents.COULD_NOT_REPAIR_CONNECTION)).then();
            }
            return;
        });
    }
};
RepairConnectionListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(1, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_APP_SERVICE)),
    __param(2, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.LOCATION_SERVICE)),
    __param(3, inversify_1.inject(src_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [Object, AppService_1.AppService,
        LocationService_1.LocationService, Object])
], RepairConnectionListener);
exports.RepairConnectionListener = RepairConnectionListener;


/***/ }),

/***/ "./app/bg/modules/location-module/listeners/internal/repair-connection/RepairConnectionReason.ts":
/*!*******************************************************************************************************!*\
  !*** ./app/bg/modules/location-module/listeners/internal/repair-connection/RepairConnectionReason.ts ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RepairConnectionReason = void 0;
var RepairConnectionReason;
(function (RepairConnectionReason) {
    RepairConnectionReason["TOKEN_EXPIRED"] = "TOKEN_EXPIRED";
    RepairConnectionReason["UNEXPECTED_AUTH_REQUEST"] = "UNEXPECTED_AUTH_REQUEST";
    RepairConnectionReason["CONNECTION_REFUSED"] = "CONNECTION_REFUSED";
})(RepairConnectionReason = exports.RepairConnectionReason || (exports.RepairConnectionReason = {}));


/***/ }),

/***/ "./app/bg/modules/location-module/services/connection-verification/ConnectionVerification.ts":
/*!***************************************************************************************************!*\
  !*** ./app/bg/modules/location-module/services/connection-verification/ConnectionVerification.ts ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectionVerification = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
let ConnectionVerification = class ConnectionVerification {
    constructor(logger) {
        this.logger = logger;
    }
    verifyEthernetConnection() {
        return window.navigator.onLine;
    }
    verifyInternetConnection() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve) => {
                const headers = {
                    method: 'HEAD',
                    pragma: 'no-cache',
                    'cache-control': 'no-cache, no-store',
                };
                fetch('https://www.google-analytics.com/', { headers })
                    .then(() => {
                    resolve(true);
                })
                    .catch(() => {
                    resolve(false);
                });
            });
        });
    }
    verifyProxyConnection() {
        return new Promise((resolve) => {
            const controller = new AbortController();
            const signal = controller.signal;
            const timerId = setTimeout(() => {
                this.logger.warn('ConnectionVerificationError: timeout');
                controller.abort();
                resolve(false);
            }, 3000);
            const headers = {
                method: 'HEAD',
                pragma: 'no-cache',
                'cache-control': 'no-cache, no-store',
            };
            fetch('https://www.google.com/favicon.ico', { signal, headers })
                .then(response => {
                clearTimeout(timerId);
                resolve(response.status === 200);
            })
                .catch((e) => {
                clearTimeout(timerId);
                resolve(false);
            });
            return;
        });
    }
};
ConnectionVerification = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [Object])
], ConnectionVerification);
exports.ConnectionVerification = ConnectionVerification;


/***/ }),

/***/ "./app/bg/modules/location-module/services/connection-verification/ConnectionVerificationError.ts":
/*!********************************************************************************************************!*\
  !*** ./app/bg/modules/location-module/services/connection-verification/ConnectionVerificationError.ts ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectionVerificationError = void 0;
class ConnectionVerificationError extends Error {
}
exports.ConnectionVerificationError = ConnectionVerificationError;


/***/ }),

/***/ "./app/bg/modules/location-module/services/credentials-handler/CredentialsHandler.ts":
/*!*******************************************************************************************!*\
  !*** ./app/bg/modules/location-module/services/credentials-handler/CredentialsHandler.ts ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CredentialsHandler = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const luxon_1 = __webpack_require__(/*! luxon */ "./node_modules/luxon/build/cjs-browser/luxon.js");
const UrbanTypes_1 = __webpack_require__(/*! ../../../app-module/UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const AppService_1 = __webpack_require__(/*! ../../../app-module/services/app/AppService */ "./app/bg/modules/app-module/services/app/AppService.ts");
const AppState_1 = __webpack_require__(/*! ../../../app-module/services/app/AppState */ "./app/bg/modules/app-module/services/app/AppState.ts");
const RepairConnectionReason_1 = __webpack_require__(/*! ../../listeners/internal/repair-connection/RepairConnectionReason */ "./app/bg/modules/location-module/listeners/internal/repair-connection/RepairConnectionReason.ts");
const LocationModuleEvents_1 = __webpack_require__(/*! ../../LocationModuleEvents */ "./app/bg/modules/location-module/LocationModuleEvents.ts");
/**
 * It should keep proxy's credentials
 * and run a process of force updating credentials
 *
 * [NB] if a user's pc fall in hibernation an alarm that refreshes a token might not be called
 *
 */
let CredentialsHandler = class CredentialsHandler {
    constructor(dispatcher, state, proxyNative, logger) {
        this.dispatcher = dispatcher;
        this.state = state;
        this.proxyNative = proxyNative;
        this.logger = logger;
        this.hasCredentials = false;
    }
    setAuthProxyToken(authToken) {
        return __awaiter(this, void 0, void 0, function* () {
            this.hasCredentials = true;
            this.authToken = authToken;
            const callback = () => {
                var _a, _b;
                this.logger.log(`CredentialsHolder: AuthRequired state "${this.state.get()}"`);
                this.logger.log(`CredentialsHolder: Token "${(_a = this.authToken) === null || _a === void 0 ? void 0 : _a.value}"`, this.authToken);
                if (this.state.is(AppState_1.AppState.PROXY_CONNECTED)) {
                    this.logger.log(`CredentialsHolder: Something is going wrong let's repair connection`);
                    const localTime = luxon_1.DateTime.local().toMillis();
                    this.emitRepairConnectionEvent(this.getAuthProxyToken().expirationTime < localTime
                        ? RepairConnectionReason_1.RepairConnectionReason.TOKEN_EXPIRED
                        : RepairConnectionReason_1.RepairConnectionReason.UNEXPECTED_AUTH_REQUEST);
                }
                return {
                    username: this.authToken ? (_b = this.authToken) === null || _b === void 0 ? void 0 : _b.value : '',
                    password: '1'
                };
            };
            this.proxyNative.onAuthRequired(callback, { urls: ['<all_urls>'] }, ['blocking'], true);
        });
    }
    getAuthProxyToken() {
        return this.authToken;
    }
    reset() {
        this.hasCredentials = false;
        this.proxyNative.removeAuthRequiredListener();
    }
    emitRepairConnectionEvent(reason) {
        const payload = { reason };
        const event = new src_1.MarioEvent(LocationModuleEvents_1.LocationModuleEvents.REPAIR_CONNECTION, payload);
        this.dispatcher.emit(event).then();
    }
};
CredentialsHandler = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __param(1, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_APP_SERVICE)),
    __param(2, inversify_1.inject(src_1.MARIO_TYPES.PROXY_SERVICE)),
    __param(3, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [Object, AppService_1.AppService, Object, Object])
], CredentialsHandler);
exports.CredentialsHandler = CredentialsHandler;


/***/ }),

/***/ "./app/bg/modules/location-module/services/date-time-shifter/DateTimeShifter.ts":
/*!**************************************************************************************!*\
  !*** ./app/bg/modules/location-module/services/date-time-shifter/DateTimeShifter.ts ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DateTimeShifter = void 0;
class DateTimeShifter {
    static shift(systemTime, realTime, threshold = 59) {
        const diff = systemTime - realTime;
        const isShifted = Math.abs(diff) / 1000 > threshold;
        return isShifted ? diff : 0;
    }
}
exports.DateTimeShifter = DateTimeShifter;


/***/ }),

/***/ "./app/bg/modules/location-module/services/location/LocationActivator.ts":
/*!*******************************************************************************!*\
  !*** ./app/bg/modules/location-module/services/location/LocationActivator.ts ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationActivator = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const LocationModuleTypes_1 = __webpack_require__(/*! ../../LocationModuleTypes */ "./app/bg/modules/location-module/LocationModuleTypes.ts");
const ConnectionVerification_1 = __webpack_require__(/*! ../connection-verification/ConnectionVerification */ "./app/bg/modules/location-module/services/connection-verification/ConnectionVerification.ts");
const CredentialsHandler_1 = __webpack_require__(/*! ../credentials-handler/CredentialsHandler */ "./app/bg/modules/location-module/services/credentials-handler/CredentialsHandler.ts");
const ConnectionVerificationError_1 = __webpack_require__(/*! ../connection-verification/ConnectionVerificationError */ "./app/bg/modules/location-module/services/connection-verification/ConnectionVerificationError.ts");
const ProxyLocation_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/models/ProxyLocation */ "./node_modules/@urbandevs/mario-proxy-location/dist/models/ProxyLocation.js");
const LocationType_1 = __webpack_require__(/*! ../../LocationType */ "./app/bg/modules/location-module/LocationType.ts");
const WeightBasedStrategy_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/services/strategies/weight/WeightBasedStrategy */ "./node_modules/@urbandevs/mario-proxy-location/dist/services/strategies/weight/WeightBasedStrategy.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const AuthModuleTypes_1 = __webpack_require__(/*! ../../../auth-module/AuthModuleTypes */ "./app/bg/modules/auth-module/AuthModuleTypes.ts");
const SecurityService_1 = __webpack_require__(/*! ../../../auth-module/services/security/SecurityService */ "./app/bg/modules/auth-module/services/security/SecurityService.ts");
const LocationStorage_1 = __webpack_require__(/*! ../../storage/LocationStorage */ "./app/bg/modules/location-module/storage/LocationStorage.ts");
const SignatureHelper_1 = __webpack_require__(/*! ../signature-helper/SignatureHelper */ "./app/bg/modules/location-module/services/signature-helper/SignatureHelper.ts");
const ProxySignature_1 = __webpack_require__(/*! @urbandevs/mario-static-proxies-api/dist/ProxySignature */ "./node_modules/@urbandevs/mario-static-proxies-api/dist/ProxySignature.js");
const StaticProxiesApiTypes_1 = __webpack_require__(/*! @urbandevs/mario-static-proxies-api/dist/StaticProxiesApiTypes */ "./node_modules/@urbandevs/mario-static-proxies-api/dist/StaticProxiesApiTypes.js");
const StaticProxiesService_1 = __webpack_require__(/*! @urbandevs/mario-static-proxies-api/dist/services/StaticProxiesService */ "./node_modules/@urbandevs/mario-static-proxies-api/dist/services/StaticProxiesService.js");
const ProxyLocationEvents_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/ProxyLocationEvents */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationEvents.js");
const luxon_1 = __webpack_require__(/*! luxon */ "./node_modules/luxon/build/cjs-browser/luxon.js");
const DateTimeShifter_1 = __webpack_require__(/*! ../date-time-shifter/DateTimeShifter */ "./app/bg/modules/location-module/services/date-time-shifter/DateTimeShifter.ts");
const LocationFactory_1 = __webpack_require__(/*! ../../factories/LocationFactory */ "./app/bg/modules/location-module/factories/LocationFactory.ts");
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ../../../analytics-module/AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
const Analytics_1 = __webpack_require__(/*! ../../../analytics-module/services/Analytics */ "./app/bg/modules/analytics-module/services/Analytics.ts");
const LocationModuleEvents_1 = __webpack_require__(/*! ../../LocationModuleEvents */ "./app/bg/modules/location-module/LocationModuleEvents.ts");
let LocationActivator = class LocationActivator {
    constructor(api, byPassList, connection, credentials, dispatcher, security, signatureHelper, storage, proxy, logger, factory, analytics) {
        this.api = api;
        this.byPassList = byPassList;
        this.connection = connection;
        this.credentials = credentials;
        this.dispatcher = dispatcher;
        this.security = security;
        this.signatureHelper = signatureHelper;
        this.storage = storage;
        this.proxy = proxy;
        this.logger = logger;
        this.factory = factory;
        this.analytics = analytics;
    }
    activate(location, locations, init, attempt = 0) {
        return __awaiter(this, void 0, void 0, function* () {
            let target = location;
            if (attempt === 0) {
                yield this.verifyNetwork();
                this.logger.log('LocationActivator: Connection with the Internet confirmed');
            }
            if (init && attempt === 0) {
                yield this.emitBeforeActivateEvent(location, this.byPassList);
            }
            if (location.isType(LocationType_1.LocationType.RANDOM)) {
                target = yield this.api.getAutoServer(false);
            }
            const strategy = new WeightBasedStrategy_1.WeightBasedStrategy();
            const proxy = yield strategy.selectProxy(target);
            this.logger.log('LocationActivator: Location', target);
            this.emitTargetEvent(target).then();
            this.logger.log('LocationActivator: Proxy', proxy);
            const signature = this.signatureHelper.getSignature(target, proxy);
            const { token, time } = yield this.security.getAuthProxyToken(signature);
            const localTime = luxon_1.DateTime.local().toMillis();
            const shiftTime = DateTimeShifter_1.DateTimeShifter.shift(localTime, time);
            if (shiftTime) {
                this.logger.log(`LocationActivator: Time is shifted on "${shiftTime}" milliseconds`);
                const duration = { milliseconds: shiftTime };
                token.expirationTime = luxon_1.DateTime
                    .fromMillis(token.expirationTime)
                    .plus(duration)
                    .toMillis();
            }
            yield this.credentials.setAuthProxyToken(token);
            yield this.proxy.connect(proxy, this.byPassList);
            if (!(yield this.connection.verifyProxyConnection())) {
                const event = {
                    event: AnalyticsModuleTypes_1.EventList.COULD_NOT_ESTABLISH_CONNECTION_WITH_PROXY,
                    manual: false,
                    details: {
                        SOURCE: AnalyticsModuleTypes_1.SourceList.SYSTEM,
                        HOST: ProxySignature_1.ProxySignature.buildKey(proxy),
                    }
                };
                this.analytics.track(event);
                yield this.proxy.direct(false);
                let canTryActivateAgain = true;
                if (location.isType(LocationType_1.LocationType.RANDOM)) {
                    if (attempt === 10) {
                        throw new ConnectionVerificationError_1.ConnectionVerificationError('LocationActivator: the number of maximum attempts are exceeded');
                    }
                    // extra logic here
                }
                else {
                    canTryActivateAgain = yield this.removeProxyFromLocation(location.code(), proxy, locations);
                    // get latest
                    location = locations.getLocation(location.code());
                }
                if (canTryActivateAgain) {
                    this.logger.log(`LocationActivator: Try another proxy [attempt #${attempt + 1}]`);
                    yield this.activate(location, locations, init, attempt + 1);
                }
                else {
                    this.logger.log(`LocationActivator: Location does not have proxies anymore`);
                    throw new Error(`LocationActivator: Could not activate a location`);
                }
                return;
            }
            if (init) {
                yield this.emitAfterActivateEvent(location, this.byPassList);
            }
        });
    }
    verifyNetwork() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.connection.verifyEthernetConnection()) {
                throw new ConnectionVerificationError_1.ConnectionVerificationError('LocationActivator: No Ethernet connection');
            }
            else if (!(yield this.connection.verifyInternetConnection())) {
                throw new ConnectionVerificationError_1.ConnectionVerificationError('LocationActivator: No connection with the Internet');
            }
        });
    }
    findLocationPos(code, locations) {
        let pos = 0;
        for (const location of locations) {
            if (location.code().value() === code.value()) {
                return pos;
            }
            pos++;
        }
        return -1;
    }
    removeProxyFromLocation(code, proxy, locations) {
        return __awaiter(this, void 0, void 0, function* () {
            this.logger.log(`LocationActivator: Remove proxy ${ProxySignature_1.ProxySignature.buildKey(proxy)}`);
            const pos = this.findLocationPos(code, locations);
            if (pos === -1) {
                this.logger.warn(`LocationActivator: Could not find a pos`);
                return false;
            }
            // it's better to clone object
            const location = ProxyLocation_1.ProxyLocation.decode(JSON.stringify(locations.pos(pos)));
            if (location.type() !== LocationType_1.LocationType.ACCESSIBLE) {
                return false;
            }
            const configs = location.configList().filter((conf) => {
                const mapped = {
                    scheme: conf.scheme().value(),
                    host: conf.host().value(),
                    port: conf.portRange().from(),
                };
                return ProxySignature_1.ProxySignature.buildKey(proxy) !== ProxySignature_1.ProxySignature.buildKey(mapped);
            });
            const updatedLocation = ProxyLocation_1.ProxyLocation.create(location.name().value(), location.code().value(), location.type(), location.provider(), configs, location.extraData());
            const hasProxies = configs.length > 0;
            if (hasProxies) {
                locations.replace(pos, updatedLocation);
            }
            else {
                locations.remove(pos);
            }
            yield this.storage.storeLocations(locations);
            return hasProxies;
        });
    }
    emitBeforeActivateEvent(location, bypassList) {
        return __awaiter(this, void 0, void 0, function* () {
            const payload = { location, bypassList };
            const event = new src_1.MarioEvent(ProxyLocationEvents_1.ProxyLocationEvents.PROXY_LOCATION_BEFORE_ACTIVATED, payload);
            yield this.dispatcher.emit(event);
        });
    }
    emitAfterActivateEvent(location, bypassList) {
        return __awaiter(this, void 0, void 0, function* () {
            const payload = { location, bypassList };
            const event = new src_1.MarioEvent(ProxyLocationEvents_1.ProxyLocationEvents.PROXY_LOCATION_AFTER_ACTIVATED, payload);
            yield this.dispatcher.emit(event);
        });
    }
    emitTargetEvent(location) {
        return __awaiter(this, void 0, void 0, function* () {
            const payload = { location };
            const event = new src_1.MarioEvent(LocationModuleEvents_1.LocationModuleEvents.LOCATION_TARGET, payload);
            yield this.dispatcher.emit(event);
        });
    }
};
LocationActivator = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(StaticProxiesApiTypes_1.StaticProxiesApiTypes.STATIC_PROXIES_SERVICE)),
    __param(1, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.BY_PASS)),
    __param(2, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.CONNECTION_VERIFICATION)),
    __param(3, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.CREDENTIALS_HANDLER)),
    __param(4, inversify_1.inject(src_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __param(5, inversify_1.inject(AuthModuleTypes_1.AuthModuleTypes.SECURITY_SERVICE)),
    __param(6, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.SIGNATURE_HELPER)),
    __param(7, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.LOCATION_STORAGE)),
    __param(8, inversify_1.inject(src_1.MARIO_TYPES.PROXY_SERVICE)),
    __param(9, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(10, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.LOCATION_FACTORY)),
    __param(11, inversify_1.inject(AnalyticsModuleTypes_1.AnalyticsModuleTypes.ANALYTICS)),
    __metadata("design:paramtypes", [StaticProxiesService_1.StaticProxiesService, Array, ConnectionVerification_1.ConnectionVerification,
        CredentialsHandler_1.CredentialsHandler, Object, SecurityService_1.SecurityService,
        SignatureHelper_1.SignatureHelper,
        LocationStorage_1.LocationStorage, Object, Object, LocationFactory_1.LocationFactory,
        Analytics_1.Analytics])
], LocationActivator);
exports.LocationActivator = LocationActivator;


/***/ }),

/***/ "./app/bg/modules/location-module/services/location/LocationDeactivator.ts":
/*!*********************************************************************************!*\
  !*** ./app/bg/modules/location-module/services/location/LocationDeactivator.ts ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationDeactivator = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const LocationModuleTypes_1 = __webpack_require__(/*! ../../LocationModuleTypes */ "./app/bg/modules/location-module/LocationModuleTypes.ts");
const LocationStorage_1 = __webpack_require__(/*! ../../storage/LocationStorage */ "./app/bg/modules/location-module/storage/LocationStorage.ts");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const ProxyLocationEvents_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/ProxyLocationEvents */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationEvents.js");
let LocationDeactivator = class LocationDeactivator {
    constructor(dispatcher, storage, proxy) {
        this.dispatcher = dispatcher;
        this.storage = storage;
        this.proxy = proxy;
    }
    deactivate(emit = true) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!(yield this.storage.isCurrentActivated())) {
                return;
            }
            const location = yield this.storage.getCurrent();
            if (emit) {
                yield this.emitBeforeDeactivateEvent(location);
            }
            if (this.proxy.hasCurrent()) {
                yield this.proxy.direct();
            }
            if (emit) {
                yield this.emitAfterDeactivateEvent(location);
            }
        });
    }
    emitBeforeDeactivateEvent(location) {
        return __awaiter(this, void 0, void 0, function* () {
            const event = new src_1.MarioEvent(ProxyLocationEvents_1.ProxyLocationEvents.PROXY_LOCATION_BEFORE_DEACTIVATED, location);
            yield this.dispatcher.emit(event);
        });
    }
    emitAfterDeactivateEvent(location) {
        return __awaiter(this, void 0, void 0, function* () {
            const event = new src_1.MarioEvent(ProxyLocationEvents_1.ProxyLocationEvents.PROXY_LOCATION_AFTER_DEACTIVATED, location);
            yield this.dispatcher.emit(event);
        });
    }
};
LocationDeactivator = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __param(1, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.LOCATION_STORAGE)),
    __param(2, inversify_1.inject(src_1.MARIO_TYPES.PROXY_SERVICE)),
    __metadata("design:paramtypes", [Object, LocationStorage_1.LocationStorage, Object])
], LocationDeactivator);
exports.LocationDeactivator = LocationDeactivator;


/***/ }),

/***/ "./app/bg/modules/location-module/services/location/LocationService.ts":
/*!*****************************************************************************!*\
  !*** ./app/bg/modules/location-module/services/location/LocationService.ts ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const LocationModuleTypes_1 = __webpack_require__(/*! ../../LocationModuleTypes */ "./app/bg/modules/location-module/LocationModuleTypes.ts");
const ProxyLocation_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/models/ProxyLocation */ "./node_modules/@urbandevs/mario-proxy-location/dist/models/ProxyLocation.js");
const LocationFactory_1 = __webpack_require__(/*! ../../factories/LocationFactory */ "./app/bg/modules/location-module/factories/LocationFactory.ts");
const LocationStorage_1 = __webpack_require__(/*! ../../storage/LocationStorage */ "./app/bg/modules/location-module/storage/LocationStorage.ts");
const luxon_1 = __webpack_require__(/*! luxon */ "./node_modules/luxon/build/cjs-browser/luxon.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const LocationActivator_1 = __webpack_require__(/*! ./LocationActivator */ "./app/bg/modules/location-module/services/location/LocationActivator.ts");
const LocationDeactivator_1 = __webpack_require__(/*! ./LocationDeactivator */ "./app/bg/modules/location-module/services/location/LocationDeactivator.ts");
const StaticProxiesApiTypes_1 = __webpack_require__(/*! @urbandevs/mario-static-proxies-api/dist/StaticProxiesApiTypes */ "./node_modules/@urbandevs/mario-static-proxies-api/dist/StaticProxiesApiTypes.js");
const StaticProxiesService_1 = __webpack_require__(/*! @urbandevs/mario-static-proxies-api/dist/services/StaticProxiesService */ "./node_modules/@urbandevs/mario-static-proxies-api/dist/services/StaticProxiesService.js");
const UrbanTypes_1 = __webpack_require__(/*! ../../../app-module/UrbanTypes */ "./app/bg/modules/app-module/UrbanTypes.ts");
const AppService_1 = __webpack_require__(/*! ../../../app-module/services/app/AppService */ "./app/bg/modules/app-module/services/app/AppService.ts");
const LocationType_1 = __webpack_require__(/*! ../../LocationType */ "./app/bg/modules/location-module/LocationType.ts");
const AppState_1 = __webpack_require__(/*! ../../../app-module/services/app/AppState */ "./app/bg/modules/app-module/services/app/AppState.ts");
const LocationModuleEvents_1 = __webpack_require__(/*! ../../LocationModuleEvents */ "./app/bg/modules/location-module/LocationModuleEvents.ts");
const ProxySignature_1 = __webpack_require__(/*! @urbandevs/mario-static-proxies-api/dist/ProxySignature */ "./node_modules/@urbandevs/mario-static-proxies-api/dist/ProxySignature.js");
const Analytics_1 = __webpack_require__(/*! ../../../analytics-module/services/Analytics */ "./app/bg/modules/analytics-module/services/Analytics.ts");
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ../../../analytics-module/AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
let LocationService = class LocationService {
    constructor(state, api, activator, deactivator, storage, factory, logger, analytics, dispatcher, proxy) {
        this.state = state;
        this.api = api;
        this.activator = activator;
        this.deactivator = deactivator;
        this.storage = storage;
        this.factory = factory;
        this.logger = logger;
        this.analytics = analytics;
        this.dispatcher = dispatcher;
        this.proxy = proxy;
    }
    activate(provider, code) {
        return __awaiter(this, void 0, void 0, function* () {
            this.logger.log(`LocationService: Activate a location "${code.value()}"`);
            const event = {
                event: AnalyticsModuleTypes_1.EventList.LOCATION_SELECTED,
                manual: false,
                details: {
                    SOURCE: AnalyticsModuleTypes_1.SourceList.SYSTEM,
                    CODE: code.value(),
                    TYPE: provider,
                }
            };
            this.analytics.track(event);
            if (this.state.is(AppState_1.AppState.PROXY_CONNECTED)) {
                this.logger.log(`LocationService: Browser is already connected to some location and should be deactivated`);
                yield this.deactivate();
            }
            if (this.state.isNot(AppState_1.AppState.DIRECT_MODE)) {
                const msg = `LocationService: Location cannot be activated because the app is not in direct mode`;
                this.logger.log(msg);
                throw new Error(msg);
            }
            this.state.set(AppState_1.AppState.PROXY_CONNECTING);
            this.logger.log(`LocationService: Connecting...`);
            let locations;
            try {
                locations = yield this.locations();
                this.logger.log(`LocationService: Locations`, locations);
            }
            catch (e) {
                this.state.set(AppState_1.AppState.DIRECT_MODE);
                this.logger.log(`LocationService: Could not get locations the app switched to "${AppState_1.AppState.DIRECT_MODE}"`);
                throw e;
            }
            if (!locations.hasLocation(code)) {
                this.state.set(AppState_1.AppState.DIRECT_MODE);
                const msg = `LocationService: Location "${code.value()}" is not available`;
                this.logger.log(msg);
                throw new Error(msg);
            }
            try {
                const location = locations.getLocation(code);
                yield this.activator.activate(location, locations, true);
                yield this.storage.storeCurrent(location);
                const timeInSeconds = luxon_1.DateTime.local().toSeconds();
                yield this.storage.storeActivationTime(timeInSeconds);
            }
            catch (e) {
                this.logger.log(`LocationService: Could not activate location the app switched to "${AppState_1.AppState.DIRECT_MODE}"`);
                const event = {
                    event: AnalyticsModuleTypes_1.EventList.COULD_NOT_ACTIVATE_LOCATION,
                    manual: false,
                    details: {
                        SOURCE: AnalyticsModuleTypes_1.SourceList.SYSTEM,
                        CODE: code.value(),
                        TYPE: provider
                    }
                };
                this.analytics.track(event);
                yield this.deactivate();
                this.dispatcher.emit(new src_1.MarioEvent(LocationModuleEvents_1.LocationModuleEvents.LOCATION_COULD_NOT_BE_ACTIVATED)).then();
                throw e;
            }
            this.state.set(AppState_1.AppState.PROXY_CONNECTED);
        });
    }
    deactivate() {
        return __awaiter(this, void 0, void 0, function* () {
            this.state.set(AppState_1.AppState.PROXY_DISCONNECTING);
            try {
                yield this.deactivator.deactivate();
                yield this.storage.removeActivationTime();
            }
            catch (e) {
                this.logger.warn(e.message);
            }
            this.state.set(AppState_1.AppState.DIRECT_MODE);
        });
    }
    refresh() {
        return __awaiter(this, void 0, void 0, function* () {
            this.logger.log(`LocationService: Refresh a proxy token`);
            if (this.state.isNot(AppState_1.AppState.PROXY_CONNECTED)) {
                const msg = `LocationService: Browser is not connected to any proxy`;
                this.logger.warn(msg);
                throw new Error(msg);
            }
            this.state.set(AppState_1.AppState.REFRESHING_TOKEN);
            this.logger.log(`LocationService: Refreshing...`);
            try {
                yield this.act();
            }
            catch (e) {
                const msg = `LocationService: Could not refresh token`;
                this.logger.warn(msg);
                yield this.deactivate();
                this.emitActiveLocationNotAvailable(yield this.current()).then();
                return;
            }
            this.state.set(AppState_1.AppState.PROXY_CONNECTED);
        });
    }
    repair(reason) {
        return __awaiter(this, void 0, void 0, function* () {
            this.logger.log(`LocationService: Repair`);
            if (this.state.isNot(AppState_1.AppState.PROXY_CONNECTED)) {
                const msg = `LocationService: Nothing to repair a browser is not connected to any proxy`;
                this.logger.warn(msg);
                throw new Error(msg);
            }
            this.state.set(AppState_1.AppState.REPAIRING_CONNECTION);
            const currProxy = this.proxy.current();
            const currHost = ProxySignature_1.ProxySignature.buildKey(currProxy);
            const repairConnectionEvent = {
                event: AnalyticsModuleTypes_1.EventList.REPAIR_CONNECTION_STARTED,
                manual: false,
                details: {
                    SOURCE: AnalyticsModuleTypes_1.SourceList.SYSTEM,
                    HOST: currHost,
                    REASON: reason,
                }
            };
            this.analytics.track(repairConnectionEvent);
            try {
                yield this.deactivator.deactivate(false);
                yield this.act();
            }
            catch (e) {
                const msg = `LocationService: Could not repair connection`;
                this.logger.warn(msg);
                const event = {
                    event: AnalyticsModuleTypes_1.EventList.REPAIR_CONNECTION_RESULT,
                    manual: false,
                    details: {
                        SOURCE: AnalyticsModuleTypes_1.SourceList.SYSTEM,
                        HOST: currHost,
                        RESULT: AnalyticsModuleTypes_1.RepairStatus.FAILURE,
                    }
                };
                this.analytics.track(event).then();
                yield this.deactivate();
                this.emitActiveLocationNotAvailable(yield this.current()).then();
                return;
            }
            const newProxy = this.proxy.current();
            const newHost = ProxySignature_1.ProxySignature.buildKey(newProxy);
            const event = {
                event: AnalyticsModuleTypes_1.EventList.REPAIR_CONNECTION_RESULT,
                manual: false,
                details: {
                    SOURCE: AnalyticsModuleTypes_1.SourceList.SYSTEM,
                    HOST: newHost,
                    RESULT: AnalyticsModuleTypes_1.RepairStatus.SUCCESS,
                }
            };
            this.analytics.track(event).then();
            this.state.set(AppState_1.AppState.PROXY_CONNECTED);
        });
    }
    locations() {
        return __awaiter(this, void 0, void 0, function* () {
            this.logger.log(`LocationService: Get locations`);
            let needSync = false;
            if (yield this.storage.hasNoLocations()) {
                this.logger.log(`LocationService: No locations in the storage need sync`);
                needSync = true;
            }
            else {
                const lastSyncTime = yield this.storage.getSyncTime();
                const expirationTime = luxon_1.DateTime
                    .fromSeconds(lastSyncTime)
                    .plus({ minutes: 30 });
                const now = luxon_1.DateTime.local();
                needSync = now > expirationTime;
                this.logger.log(`LocationService: Last sync time: ${luxon_1.DateTime.fromSeconds(lastSyncTime)}`);
                this.logger.log(`LocationService: Expiration time: ${expirationTime}`);
                this.logger.log(`LocationService: Need sync locations: ${needSync}`);
            }
            if (needSync) {
                yield this.storage.removeLocations();
                try {
                    const countries = yield this.api.getCountries(false);
                    if (countries.isEmpty()) {
                        throw new Error(`LocationService: Response from the API does not have countries`);
                    }
                    const locations = yield this.makeLocations(countries);
                    const syncTime = luxon_1.DateTime.local();
                    this.logger.log(`LocationService: Locations are synced. Time: ${syncTime}`);
                    yield this.storage.storeSyncTime(syncTime.toSeconds());
                    yield this.storage.storeLocations(locations);
                    return locations;
                }
                catch (e) {
                    this.logger.error(e);
                }
            }
            if (yield this.storage.hasNoLocations()) {
                throw new Error('LocationService: Could not sync locations');
            }
            return this.storage.getLocations();
        });
    }
    current() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.getCurrent();
        });
    }
    activationTime() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.getActivationTime();
        });
    }
    act() {
        return __awaiter(this, void 0, void 0, function* () {
            this.logger.log(`LocationService: Removed locations from the storage`);
            if (!(yield this.storage.hasCurrent())) {
                const msg = `LocationService: No current location`;
                this.logger.warn(msg);
                throw new Error(msg);
            }
            const current = yield this.storage.getCurrent();
            let locations;
            try {
                locations = yield this.locations();
            }
            catch (e) {
                const msg = `LocationService: Could not get locations`;
                this.logger.warn(msg);
                throw e;
            }
            if (!locations.hasLocation(current.code())) {
                const msg = `LocationService: Active location "${current.code()}" is not available`;
                this.logger.warn(msg);
                throw new Error(msg);
            }
            const location = locations.getLocation(current.code());
            try {
                yield this.activator.activate(location, locations, false);
            }
            catch (e) {
                const msg = `LocationService: Could not activate`;
                this.logger.warn(msg);
                throw e;
            }
        });
    }
    makeLocations(countries) {
        const planet = this.factory.makePlanet();
        Array
            .from(countries)
            .forEach((location) => {
            if (location.isType(LocationType_1.LocationType.ACCESSIBLE) && location.configList().length > 0) {
                const clone = ProxyLocation_1.ProxyLocation.decode(location.encode());
                planet.append(clone);
            }
        });
        const autoServer = this.factory.makeAutoServer();
        planet.insert(0, autoServer);
        return planet;
    }
    emitBeforeTokenRefreshed() {
        return __awaiter(this, void 0, void 0, function* () {
            const event = new src_1.MarioEvent(LocationModuleEvents_1.LocationModuleEvents.BEFORE_TOKEN_REFRESHED);
            return this.dispatcher.emit(event);
        });
    }
    emitActiveLocationNotAvailable(location) {
        return __awaiter(this, void 0, void 0, function* () {
            const payload = { location };
            const event = new src_1.MarioEvent(LocationModuleEvents_1.LocationModuleEvents.ACTIVE_LOCATION_NOT_AVAILABLE, payload);
            return this.dispatcher.emit(event);
        });
    }
};
LocationService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanTypes_1.UrbanTypes.URBAN_APP_SERVICE)),
    __param(1, inversify_1.inject(StaticProxiesApiTypes_1.StaticProxiesApiTypes.STATIC_PROXIES_SERVICE)),
    __param(2, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.LOCATION_ACTIVATOR)),
    __param(3, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.LOCATION_DEACTIVATOR)),
    __param(4, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.LOCATION_STORAGE)),
    __param(5, inversify_1.inject(LocationModuleTypes_1.LocationModuleTypes.LOCATION_FACTORY)),
    __param(6, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(7, inversify_1.inject(AnalyticsModuleTypes_1.AnalyticsModuleTypes.ANALYTICS)),
    __param(8, inversify_1.inject(src_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __param(9, inversify_1.inject(src_1.MARIO_TYPES.PROXY_SERVICE)),
    __metadata("design:paramtypes", [AppService_1.AppService,
        StaticProxiesService_1.StaticProxiesService,
        LocationActivator_1.LocationActivator,
        LocationDeactivator_1.LocationDeactivator,
        LocationStorage_1.LocationStorage,
        LocationFactory_1.LocationFactory, Object, Analytics_1.Analytics, Object, Object])
], LocationService);
exports.LocationService = LocationService;


/***/ }),

/***/ "./app/bg/modules/location-module/services/signature-helper/SignatureHelper.ts":
/*!*************************************************************************************!*\
  !*** ./app/bg/modules/location-module/services/signature-helper/SignatureHelper.ts ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SignatureHelper = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const ProxySignature_1 = __webpack_require__(/*! @urbandevs/mario-static-proxies-api/dist/ProxySignature */ "./node_modules/@urbandevs/mario-static-proxies-api/dist/ProxySignature.js");
let SignatureHelper = class SignatureHelper {
    getSignature(location, proxy) {
        var _a;
        const key = ProxySignature_1.ProxySignature.buildKey(proxy);
        const collection = (_a = location.extraData()) === null || _a === void 0 ? void 0 : _a.signatureCollection;
        const signature = collection[key];
        return signature;
    }
    getSignatureWithProxy(location, proxy) {
        const signature = this.getSignature(location, proxy);
        return {
            signature,
            proxy,
        };
    }
};
SignatureHelper = __decorate([
    inversify_1.injectable()
], SignatureHelper);
exports.SignatureHelper = SignatureHelper;


/***/ }),

/***/ "./app/bg/modules/location-module/storage/LocationStorage.ts":
/*!*******************************************************************!*\
  !*** ./app/bg/modules/location-module/storage/LocationStorage.ts ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationStorage = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const ProxyLocation_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/models/ProxyLocation */ "./node_modules/@urbandevs/mario-proxy-location/dist/models/ProxyLocation.js");
const LocationStorageKeys_1 = __webpack_require__(/*! ../LocationStorageKeys */ "./app/bg/modules/location-module/LocationStorageKeys.ts");
let LocationStorage = class LocationStorage {
    constructor(storage) {
        this.storage = storage;
    }
    storeLocations(earth) {
        const json = JSON.stringify(earth);
        return this.storage.set(LocationStorageKeys_1.LocationStorageKeys.LOCATIONS, json);
    }
    getLocations() {
        return __awaiter(this, void 0, void 0, function* () {
            const json = yield this.storage.get(LocationStorageKeys_1.LocationStorageKeys.LOCATIONS);
            return ProxyLocation_1.ProxyLocation.decode(json);
        });
    }
    removeLocations() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storage.remove([LocationStorageKeys_1.LocationStorageKeys.LOCATIONS]);
        });
    }
    hasLocations() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.has(LocationStorageKeys_1.LocationStorageKeys.LOCATIONS);
        });
    }
    hasNoLocations() {
        return __awaiter(this, void 0, void 0, function* () {
            return !(yield this.hasLocations());
        });
    }
    isCurrentActivated() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.has(LocationStorageKeys_1.LocationStorageKeys.ACTIVATION_TIME);
        });
    }
    storeCurrent(location) {
        return __awaiter(this, void 0, void 0, function* () {
            const json = JSON.stringify(location);
            return this.storage.set(LocationStorageKeys_1.LocationStorageKeys.CURRENT, json);
        });
    }
    getCurrent() {
        return __awaiter(this, void 0, void 0, function* () {
            const json = yield this.storage.get(LocationStorageKeys_1.LocationStorageKeys.CURRENT);
            return ProxyLocation_1.ProxyLocation.decode(json);
        });
    }
    hasCurrent() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.storage.has(LocationStorageKeys_1.LocationStorageKeys.CURRENT);
        });
    }
    storeActivationTime(time) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.set(LocationStorageKeys_1.LocationStorageKeys.ACTIVATION_TIME, time.toString());
        });
    }
    getActivationTime() {
        return __awaiter(this, void 0, void 0, function* () {
            const str = yield this.storage.get(LocationStorageKeys_1.LocationStorageKeys.ACTIVATION_TIME);
            return Number(str);
        });
    }
    removeActivationTime() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storage.remove([LocationStorageKeys_1.LocationStorageKeys.ACTIVATION_TIME]);
        });
    }
    /**
     * @returns - time in seconds
     */
    getSyncTime() {
        return __awaiter(this, void 0, void 0, function* () {
            const str = yield this.storage.get(LocationStorageKeys_1.LocationStorageKeys.SYNC_TIME);
            return Number(str);
        });
    }
    /**
     * @param time - in seconds
     */
    storeSyncTime(time) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storage.set(LocationStorageKeys_1.LocationStorageKeys.SYNC_TIME, time.toString());
        });
    }
};
LocationStorage = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.STORAGE_SERVICE)),
    __metadata("design:paramtypes", [Object])
], LocationStorage);
exports.LocationStorage = LocationStorage;


/***/ }),

/***/ "./app/bg/modules/notification-module/NotificationContentIn.ts":
/*!*********************************************************************!*\
  !*** ./app/bg/modules/notification-module/NotificationContentIn.ts ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NotificationContentIn = void 0;
var NotificationContentIn;
(function (NotificationContentIn) {
    NotificationContentIn["NOTIFICATION_SHOW"] = "APP_NOTIFICATION_SHOW";
})(NotificationContentIn = exports.NotificationContentIn || (exports.NotificationContentIn = {}));


/***/ }),

/***/ "./app/bg/modules/notification-module/NotificationModule.ts":
/*!******************************************************************!*\
  !*** ./app/bg/modules/notification-module/NotificationModule.ts ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NotificationModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const NotificationService_1 = __webpack_require__(/*! ./services/NotificationService */ "./app/bg/modules/notification-module/services/NotificationService.ts");
const NotificationModuleTypes_1 = __webpack_require__(/*! ./NotificationModuleTypes */ "./app/bg/modules/notification-module/NotificationModuleTypes.ts");
class NotificationModule extends src_1.MarioModule {
    name() {
        return 'NotificationModule';
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this
                .mario()
                .registerService(NotificationModuleTypes_1.NotificationModuleTypes.NOTIFICATION_SERVICE, NotificationService_1.NotificationService);
            return;
        });
    }
    static use(mario) {
        return __awaiter(this, void 0, void 0, function* () {
            return mario.registerModule(NotificationModule);
        });
    }
}
exports.NotificationModule = NotificationModule;


/***/ }),

/***/ "./app/bg/modules/notification-module/NotificationModuleTypes.ts":
/*!***********************************************************************!*\
  !*** ./app/bg/modules/notification-module/NotificationModuleTypes.ts ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NotificationModuleTypes = void 0;
const NotificationModuleTypes = {
    NOTIFICATION_SERVICE: Symbol.for('NOTIFICATION_SERVICE'),
};
exports.NotificationModuleTypes = NotificationModuleTypes;


/***/ }),

/***/ "./app/bg/modules/notification-module/services/Notification.ts":
/*!*********************************************************************!*\
  !*** ./app/bg/modules/notification-module/services/Notification.ts ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NotificationImage = exports.NotificationType = void 0;
var NotificationType;
(function (NotificationType) {
    NotificationType["SUCCESS"] = "success";
    NotificationType["ERROR"] = "error";
})(NotificationType = exports.NotificationType || (exports.NotificationType = {}));
var NotificationImage;
(function (NotificationImage) {
    NotificationImage["ALERT"] = "ALERT";
    NotificationImage["WINK"] = "WINK";
})(NotificationImage = exports.NotificationImage || (exports.NotificationImage = {}));


/***/ }),

/***/ "./app/bg/modules/notification-module/services/NotificationService.ts":
/*!****************************************************************************!*\
  !*** ./app/bg/modules/notification-module/services/NotificationService.ts ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NotificationService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const NotificationContentIn_1 = __webpack_require__(/*! ../NotificationContentIn */ "./app/bg/modules/notification-module/NotificationContentIn.ts");
let NotificationService = class NotificationService {
    constructor(dispatcher, tabService, logger) {
        this.dispatcher = dispatcher;
        this.tabService = tabService;
        this.logger = logger;
    }
    send(notification) {
        return __awaiter(this, void 0, void 0, function* () {
            const tabs = yield this.tabService.query({
                active: true,
                currentWindow: true,
            });
            this.logger.log(`NotificationService: ${tabs.length}`, tabs);
            if (tabs.length === 0) {
                this.logger.log(`NotificationService: No active tab`);
                return;
            }
            const payload = { notification };
            const event = new src_1.MarioEvent(NotificationContentIn_1.NotificationContentIn.NOTIFICATION_SHOW, payload);
            this.dispatcher.emit(tabs[0].id, event);
        });
    }
};
NotificationService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.EXTERNAL_DISPATCHER)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.TAB_SERVICE)),
    __param(2, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [Object, Object, Object])
], NotificationService);
exports.NotificationService = NotificationService;


/***/ }),

/***/ "./app/bg/modules/promotion-module/UrbanPromotionModule.ts":
/*!*****************************************************************!*\
  !*** ./app/bg/modules/promotion-module/UrbanPromotionModule.ts ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UrbanPromotionModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const PromotionApiModule_1 = __webpack_require__(/*! @urbandevs/mario-promation-api/dist/PromotionApiModule */ "./node_modules/@urbandevs/mario-promation-api/dist/PromotionApiModule.js");
const UrbanPromotionModuleTypes_1 = __webpack_require__(/*! ./UrbanPromotionModuleTypes */ "./app/bg/modules/promotion-module/UrbanPromotionModuleTypes.ts");
const UrbanPromotionStorage_1 = __webpack_require__(/*! ./storage/UrbanPromotionStorage */ "./app/bg/modules/promotion-module/storage/UrbanPromotionStorage.ts");
const UrbanPromotionApi_1 = __webpack_require__(/*! ./services/UrbanPromotionApi */ "./app/bg/modules/promotion-module/services/UrbanPromotionApi.ts");
const PromotionApiModuleTypes_1 = __webpack_require__(/*! @urbandevs/mario-promation-api/dist/PromotionApiModuleTypes */ "./node_modules/@urbandevs/mario-promation-api/dist/PromotionApiModuleTypes.js");
class UrbanPromotionModule extends src_1.MarioModule {
    name() {
        return 'UrbanPromotionModule';
    }
    static use(mario, options) {
        return __awaiter(this, void 0, void 0, function* () {
            yield PromotionApiModule_1.PromotionApiModule.use(mario, options);
            yield mario.registerModule(UrbanPromotionModule, options);
        });
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this
                .mario()
                .registerService(UrbanPromotionModuleTypes_1.URBAN_PROMOTION_MODULE_TYPES.URBAN_PROMOTION_API, UrbanPromotionApi_1.UrbanPromotionApi);
            this
                .mario()
                .registerService(UrbanPromotionModuleTypes_1.URBAN_PROMOTION_MODULE_TYPES.URBAN_PROMOTION_STORAGE, UrbanPromotionStorage_1.UrbanPromotionStorage);
            const storage = this
                .mario()
                .getService(UrbanPromotionModuleTypes_1.URBAN_PROMOTION_MODULE_TYPES.URBAN_PROMOTION_STORAGE);
            if (!(yield storage.hasFooter())) {
                this.mario().logger().log(`UrbanPromotionModule: need set initial value`);
                try {
                    const api = this
                        .mario()
                        .getService(PromotionApiModuleTypes_1.PromotionApiModuleTypes.PROMOTION_API_SERVICE);
                    const elements = api.parse(options.initialFooter);
                    yield storage.setFooter(elements);
                }
                catch (e) {
                    this.mario().logger().error(e);
                }
            }
        });
    }
}
exports.UrbanPromotionModule = UrbanPromotionModule;


/***/ }),

/***/ "./app/bg/modules/promotion-module/UrbanPromotionModuleTypes.ts":
/*!**********************************************************************!*\
  !*** ./app/bg/modules/promotion-module/UrbanPromotionModuleTypes.ts ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.URBAN_PROMOTION_MODULE_TYPES = void 0;
const URBAN_PROMOTION_MODULE_TYPES = {
    URBAN_PROMOTION_API: Symbol.for('URBAN_PROMOTION_API'),
    URBAN_PROMOTION_STORAGE: Symbol.for('URBAN_PROMOTION_STORAGE'),
};
exports.URBAN_PROMOTION_MODULE_TYPES = URBAN_PROMOTION_MODULE_TYPES;


/***/ }),

/***/ "./app/bg/modules/promotion-module/services/UrbanPromotionApi.ts":
/*!***********************************************************************!*\
  !*** ./app/bg/modules/promotion-module/services/UrbanPromotionApi.ts ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UrbanPromotionApi = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const PromotionApiModuleTypes_1 = __webpack_require__(/*! @urbandevs/mario-promation-api/dist/PromotionApiModuleTypes */ "./node_modules/@urbandevs/mario-promation-api/dist/PromotionApiModuleTypes.js");
const PromotionService_1 = __webpack_require__(/*! @urbandevs/mario-promation-api/dist/PromotionService */ "./node_modules/@urbandevs/mario-promation-api/dist/PromotionService.js");
const BrowserEnum_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/BrowserEnum */ "./node_modules/@urbandevs/mario-core/dist/src/BrowserEnum.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const luxon_1 = __webpack_require__(/*! luxon */ "./node_modules/luxon/build/cjs-browser/luxon.js");
const UrbanPromotionModuleTypes_1 = __webpack_require__(/*! ../UrbanPromotionModuleTypes */ "./app/bg/modules/promotion-module/UrbanPromotionModuleTypes.ts");
const UrbanPromotionStorage_1 = __webpack_require__(/*! ../storage/UrbanPromotionStorage */ "./app/bg/modules/promotion-module/storage/UrbanPromotionStorage.ts");
let UrbanPromotionApi = class UrbanPromotionApi {
    constructor(api, browser, storage, logger) {
        this.api = api;
        this.browser = browser;
        this.storage = storage;
        this.logger = logger;
    }
    getFooter() {
        return __awaiter(this, void 0, void 0, function* () {
            let needSync = false;
            if (!(yield this.storage.hasSyncTime())) {
                this.logger.log(`UrbanPromotion: this is the first sync up`);
                needSync = true;
            }
            else {
                const lastSyncTime = yield this.storage.getSyncTime();
                const expirationTime = luxon_1.DateTime.fromSeconds(lastSyncTime).plus({ minutes: 30 });
                const now = luxon_1.DateTime.local();
                needSync = now > expirationTime;
                this.logger.log(`UrbanPromotion: last sync time: ${luxon_1.DateTime.fromSeconds(lastSyncTime)}`);
                this.logger.log(`UrbanPromotion: expiration time: ${expirationTime}`);
                this.logger.log(`UrbanPromotion: need sync promotions: ${needSync}`);
            }
            if (needSync) {
                try {
                    const config = yield this.api.fetch(this.getBrowser(), 'footer');
                    const elements = this.api.parse(config);
                    yield this.storage.setFooter(elements);
                    const seconds = luxon_1.DateTime.local().toSeconds();
                    yield this.storage.storeSyncTime(seconds);
                    return elements;
                }
                catch (e) {
                    this.logger.error(e);
                }
            }
            return this.storage.getFooter();
        });
    }
    getBrowser() {
        const map = {
            [BrowserEnum_1.BrowserEnum.CHROME_BROWSER]: 'chrome',
            [BrowserEnum_1.BrowserEnum.EDGE_BROWSER]: 'edge',
            [BrowserEnum_1.BrowserEnum.FIREFOX_BROWSER]: 'firefox',
        };
        return map[this.browser];
    }
};
UrbanPromotionApi = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(PromotionApiModuleTypes_1.PromotionApiModuleTypes.PROMOTION_API_SERVICE)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.BROWSER)),
    __param(2, inversify_1.inject(UrbanPromotionModuleTypes_1.URBAN_PROMOTION_MODULE_TYPES.URBAN_PROMOTION_STORAGE)),
    __param(3, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [PromotionService_1.PromotionService, String, UrbanPromotionStorage_1.UrbanPromotionStorage, Object])
], UrbanPromotionApi);
exports.UrbanPromotionApi = UrbanPromotionApi;


/***/ }),

/***/ "./app/bg/modules/promotion-module/storage/UrbanPromotionStorage.ts":
/*!**************************************************************************!*\
  !*** ./app/bg/modules/promotion-module/storage/UrbanPromotionStorage.ts ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UrbanPromotionStorage = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
let UrbanPromotionStorage = class UrbanPromotionStorage {
    constructor(storage) {
        this.storage = storage;
        this.FOOTER_KEY = 'PROMOTION_FOOTER';
        this.FOOTER_LAST_SYNC_TIME = 'PROMOTION_FOOTER_LAST_SYNC_TIME';
    }
    hasFooter() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.has(this.FOOTER_KEY);
        });
    }
    setFooter(elements) {
        return __awaiter(this, void 0, void 0, function* () {
            const json = JSON.stringify(elements);
            yield this.storage.set(this.FOOTER_KEY, json);
            return;
        });
    }
    getFooter() {
        return __awaiter(this, void 0, void 0, function* () {
            const json = yield this.storage.get(this.FOOTER_KEY);
            const elements = JSON.parse(json);
            return elements;
        });
    }
    hasSyncTime() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.has(this.FOOTER_LAST_SYNC_TIME);
        });
    }
    getSyncTime() {
        return __awaiter(this, void 0, void 0, function* () {
            const numb = yield this.storage.get(this.FOOTER_LAST_SYNC_TIME);
            return Number(numb);
        });
    }
    storeSyncTime(time) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storage.set(this.FOOTER_LAST_SYNC_TIME, time.toString());
        });
    }
};
UrbanPromotionStorage = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.STORAGE_SERVICE)),
    __metadata("design:paramtypes", [Object])
], UrbanPromotionStorage);
exports.UrbanPromotionStorage = UrbanPromotionStorage;


/***/ }),

/***/ "./app/bg/modules/ua-module/UAModule.ts":
/*!**********************************************!*\
  !*** ./app/bg/modules/ua-module/UAModule.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UAModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const UaModuleTypes_1 = __webpack_require__(/*! ./UaModuleTypes */ "./app/bg/modules/ua-module/UaModuleTypes.ts");
const Analytics_1 = __webpack_require__(/*! ./services/Analytics */ "./app/bg/modules/ua-module/services/Analytics.ts");
const TrackEventListener_1 = __webpack_require__(/*! ./listeners/internal/TrackEventListener */ "./app/bg/modules/ua-module/listeners/internal/TrackEventListener.ts");
class UAModule extends src_1.MarioModule {
    name() {
        return 'UAModule';
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this
                .mario()
                .registerService(UaModuleTypes_1.UAModuleTypes.ANALYTICS, Analytics_1.Analytics);
            this
                .mario()
                .internalDispatcher()
                .on(TrackEventListener_1.TrackEventListener);
            return;
        });
    }
    static use(mario, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return mario.registerModule(UAModule, options);
        });
    }
}
exports.UAModule = UAModule;


/***/ }),

/***/ "./app/bg/modules/ua-module/UaModuleTypes.ts":
/*!***************************************************!*\
  !*** ./app/bg/modules/ua-module/UaModuleTypes.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UAModuleTypes = void 0;
exports.UAModuleTypes = {
    ANALYTICS: Symbol.for('APP_UA_ANALYTICS'),
};


/***/ }),

/***/ "./app/bg/modules/ua-module/listeners/internal/TrackEventListener.ts":
/*!***************************************************************************!*\
  !*** ./app/bg/modules/ua-module/listeners/internal/TrackEventListener.ts ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrackEventListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const AnalyticsModuleEvents_1 = __webpack_require__(/*! ../../../analytics-module/AnalyticsModuleEvents */ "./app/bg/modules/analytics-module/AnalyticsModuleEvents.ts");
const Analytics_1 = __webpack_require__(/*! ../../services/Analytics */ "./app/bg/modules/ua-module/services/Analytics.ts");
const UaModuleTypes_1 = __webpack_require__(/*! ../../UaModuleTypes */ "./app/bg/modules/ua-module/UaModuleTypes.ts");
let TrackEventListener = class TrackEventListener {
    constructor(analytics) {
        this.analytics = analytics;
    }
    on() {
        return AnalyticsModuleEvents_1.AnalyticsModuleEvents.TRACK_EVENT;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const payload = event.data;
            yield this.analytics.track(payload);
        });
    }
};
TrackEventListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UaModuleTypes_1.UAModuleTypes.ANALYTICS)),
    __metadata("design:paramtypes", [Analytics_1.Analytics])
], TrackEventListener);
exports.TrackEventListener = TrackEventListener;


/***/ }),

/***/ "./app/bg/modules/ua-module/services/Analytics.ts":
/*!********************************************************!*\
  !*** ./app/bg/modules/ua-module/services/Analytics.ts ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Analytics = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const UrbanAnalyticsTypes_1 = __webpack_require__(/*! @urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsTypes */ "./node_modules/@urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsTypes.js");
const UrbanAnalyticsClient_1 = __webpack_require__(/*! @urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsClient */ "./node_modules/@urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsClient.js");
const AnalyticsModuleTypes_1 = __webpack_require__(/*! ../../analytics-module/AnalyticsModuleTypes */ "./app/bg/modules/analytics-module/AnalyticsModuleTypes.ts");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
let Analytics = class Analytics {
    constructor(ua, logger) {
        this.ua = ua;
        this.logger = logger;
    }
    track(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const list = {
                [AnalyticsModuleTypes_1.EventList.ACTIVE_LOCATION_NOT_AVAILABLE]: true,
                [AnalyticsModuleTypes_1.EventList.COULD_NOT_ACTIVATE_LOCATION]: true,
                [AnalyticsModuleTypes_1.EventList.COULD_NOT_ESTABLISH_CONNECTION_WITH_PROXY]: true,
                [AnalyticsModuleTypes_1.EventList.COULD_NOT_REGISTER_ANONYMOUS]: true,
                [AnalyticsModuleTypes_1.EventList.REPAIR_CONNECTION_STARTED]: true,
                [AnalyticsModuleTypes_1.EventList.REPAIR_CONNECTION_RESULT]: true,
                [AnalyticsModuleTypes_1.EventList.EXTENSION_UPDATED]: true,
                [AnalyticsModuleTypes_1.EventList.LOCATION_SELECTED]: true,
                [AnalyticsModuleTypes_1.EventList.LOCATION_STOPPED]: true,
                [AnalyticsModuleTypes_1.EventList.LOCATION_UI]: true,
                [AnalyticsModuleTypes_1.EventList.AUTO_SERVER_LOCATION]: false,
                [AnalyticsModuleTypes_1.EventList.CLICK]: true,
                [AnalyticsModuleTypes_1.EventList.AD_BLOCKER__ON]: true,
                [AnalyticsModuleTypes_1.EventList.AD_BLOCKER__OFF]: true,
                [AnalyticsModuleTypes_1.EventList.ANTI_MALWARE__ON]: true,
                [AnalyticsModuleTypes_1.EventList.ANTI_MALWARE__OFF]: true,
                [AnalyticsModuleTypes_1.EventList.POLICY_DECISION]: true,
                [AnalyticsModuleTypes_1.EventList.PAGE_SHOWN]: true,
                [AnalyticsModuleTypes_1.EventList.PAGE_CLOSED]: true,
                [AnalyticsModuleTypes_1.EventList.PROMOTION_LINK_CLICKED]: true,
                [AnalyticsModuleTypes_1.EventList.CAPTCHA_SHOWN]: true,
                [AnalyticsModuleTypes_1.EventList.CAPTCHA_PASSED]: true,
            };
            if (!list[event.event]) {
                this.logger.log(`[Urban Analytics] An event "${event.event}" is ignored`);
                return;
            }
            const urban = {
                action: event.event,
                details: event.details,
                manual: event.manual,
                packageId: event.packageId,
            };
            return this.ua.track(urban);
        });
    }
    enable() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.ua.enable();
        });
    }
    disable() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.ua.disable();
        });
    }
    isEnabled() {
        return this.ua.isEnabled();
    }
};
Analytics = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanAnalyticsTypes_1.UrbanAnalyticsTypes.CLIENT)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [UrbanAnalyticsClient_1.UrbanAnalyticsClient, Object])
], Analytics);
exports.Analytics = Analytics;


/***/ }),

/***/ "./app/popup/pages/main/LocationUI_Mapper.ts":
/*!***************************************************!*\
  !*** ./app/popup/pages/main/LocationUI_Mapper.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationUI_Mapper = void 0;
const LocationType_1 = __webpack_require__(/*! ../../../bg/modules/location-module/LocationType */ "./app/bg/modules/location-module/LocationType.ts");
class LocationUI_Mapper {
    static map(earth) {
        if (earth.isEmpty()) {
            return [];
        }
        return Array.from(earth).map((location) => LocationUI_Mapper.mapLocation(location));
    }
    static mapLocation(location) {
        return {
            code: location.code().value(),
            flag: `/popup/flags/svg/${location.code().value().toLowerCase()}.svg`,
            name: location.name().value(),
            isLocked: location.isType(LocationType_1.LocationType.INACCESSIBLE),
            provider: location.provider(),
            extraData: {
            // streamingServiceType: location.extraData<ProxyLocationExtraData>()?.streamingServiceType
            }
        };
    }
}
exports.LocationUI_Mapper = LocationUI_Mapper;


/***/ }),

/***/ "./app/popup/path.ts":
/*!***************************!*\
  !*** ./app/popup/path.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PATH = void 0;
const PATH = {
    AD_BLOCKER_CONSENT: '/ad-blocker-consent',
    ANTI_MALE_WARE_CONSENT: '/anti-male-ware-consent',
    ANNOUNCEMENT: '/announcement',
    BLANK: '/',
    INITIALIZING: '/initializing',
    MAIN: '/main',
    INTERRUPTION: '/interruption',
    RATE_US: '/rate-us',
    WELCOME_CONSENT: '/welcome-consent',
    FEATURES_CONSENT: '/features-consent',
    INVITE: '/invite',
    THANK_YOU: '/thank-you',
    CELEBRATING: '/celebrating',
    CONGRAT_TRIAL_ENDED: '/congrat-trial-ended',
    COUNTRY_RESTRICTED: '/country-restricted',
};
exports.PATH = PATH;


/***/ }),

/***/ "./node_modules/@bugsnag/browser/dist/bugsnag.js":
/*!*******************************************************!*\
  !*** ./node_modules/@bugsnag/browser/dist/bugsnag.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function(f){if(true){module.exports=f()}else { var g; }})(function(){var define,module,exports;
// minimal implementations of useful ES functionality
// all we really need for arrays is reduce – everything else is just sugar!
// Array#reduce
var reduce = function (arr, fn, accum) {
  var val = accum;

  for (var i = 0, len = arr.length; i < len; i++) {
    val = fn(val, arr[i], i, arr);
  }

  return val;
}; // Array#filter


var filter = function (arr, fn) {
  return reduce(arr, function (accum, item, i, arr) {
    return !fn(item, i, arr) ? accum : accum.concat(item);
  }, []);
}; // Array#map


var map = function (arr, fn) {
  return reduce(arr, function (accum, item, i, arr) {
    return accum.concat(fn(item, i, arr));
  }, []);
}; // Array#includes


var includes = function (arr, x) {
  return reduce(arr, function (accum, item, i, arr) {
    return accum === true || item === x;
  }, false);
};

var _hasDontEnumBug = !{
  toString: null
}.propertyIsEnumerable('toString');

var _dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor']; // Object#keys

var keys = function (obj) {
  // stripped down version of
  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/Keys
  var result = [];
  var prop;

  for (prop in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, prop)) result.push(prop);
  }

  if (!_hasDontEnumBug) return result;

  for (var i = 0, len = _dontEnums.length; i < len; i++) {
    if (Object.prototype.hasOwnProperty.call(obj, _dontEnums[i])) result.push(_dontEnums[i]);
  }

  return result;
}; // Array#isArray


var isArray = function (obj) {
  return Object.prototype.toString.call(obj) === '[object Array]';
};

var _pad = function (n) {
  return n < 10 ? "0" + n : n;
}; // Date#toISOString


var isoDate = function () {
  // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
  var d = new Date();
  return d.getUTCFullYear() + '-' + _pad(d.getUTCMonth() + 1) + '-' + _pad(d.getUTCDate()) + 'T' + _pad(d.getUTCHours()) + ':' + _pad(d.getUTCMinutes()) + ':' + _pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';
};

var _$esUtils_8 = {
  map: map,
  reduce: reduce,
  filter: filter,
  includes: includes,
  keys: keys,
  isArray: isArray,
  isoDate: isoDate
};

var _$validators_15 = {};
_$validators_15.intRange = function (min, max) {
  if (min === void 0) {
    min = 1;
  }

  if (max === void 0) {
    max = Infinity;
  }

  return function (value) {
    return typeof value === 'number' && parseInt('' + value, 10) === value && value >= min && value <= max;
  };
};

_$validators_15.stringWithLength = function (value) {
  return typeof value === 'string' && !!value.length;
};

var _$config_5 = {};
var __filter_5 = _$esUtils_8.filter,
    __reduce_5 = _$esUtils_8.reduce,
    __keys_5 = _$esUtils_8.keys,
    __isArray_5 = _$esUtils_8.isArray,
    __includes_5 = _$esUtils_8.includes;

var intRange = _$validators_15.intRange,
    stringWithLength = _$validators_15.stringWithLength;

_$config_5.schema = {
  apiKey: {
    defaultValue: function () {
      return null;
    },
    message: 'is required',
    validate: stringWithLength
  },
  appVersion: {
    defaultValue: function () {
      return null;
    },
    message: 'should be a string',
    validate: function (value) {
      return value === null || stringWithLength(value);
    }
  },
  appType: {
    defaultValue: function () {
      return null;
    },
    message: 'should be a string',
    validate: function (value) {
      return value === null || stringWithLength(value);
    }
  },
  autoNotify: {
    defaultValue: function () {
      return true;
    },
    message: 'should be true|false',
    validate: function (value) {
      return value === true || value === false;
    }
  },
  beforeSend: {
    defaultValue: function () {
      return [];
    },
    message: 'should be a function or array of functions',
    validate: function (value) {
      return typeof value === 'function' || __isArray_5(value) && __filter_5(value, function (f) {
        return typeof f === 'function';
      }).length === value.length;
    }
  },
  endpoints: {
    defaultValue: function () {
      return {
        notify: 'https://notify.bugsnag.com',
        sessions: 'https://sessions.bugsnag.com'
      };
    },
    message: 'should be an object containing endpoint URLs { notify, sessions }. sessions is optional if autoCaptureSessions=false',
    validate: function (val, obj) {
      return (// first, ensure it's an object
        val && typeof val === 'object' && // endpoints.notify must always be set
        stringWithLength(val.notify) && ( // endpoints.sessions must be set unless session tracking is explicitly off
        obj.autoCaptureSessions === false || stringWithLength(val.sessions)) && // ensure no keys other than notify/session are set on endpoints object
        __filter_5(__keys_5(val), function (k) {
          return !__includes_5(['notify', 'sessions'], k);
        }).length === 0
      );
    }
  },
  autoCaptureSessions: {
    defaultValue: function (val, opts) {
      return opts.endpoints === undefined || !!opts.endpoints && !!opts.endpoints.sessions;
    },
    message: 'should be true|false',
    validate: function (val) {
      return val === true || val === false;
    }
  },
  notifyReleaseStages: {
    defaultValue: function () {
      return null;
    },
    message: 'should be an array of strings',
    validate: function (value) {
      return value === null || __isArray_5(value) && __filter_5(value, function (f) {
        return typeof f === 'string';
      }).length === value.length;
    }
  },
  releaseStage: {
    defaultValue: function () {
      return 'production';
    },
    message: 'should be a string',
    validate: function (value) {
      return typeof value === 'string' && value.length;
    }
  },
  maxBreadcrumbs: {
    defaultValue: function () {
      return 20;
    },
    message: 'should be a number ≤40',
    validate: function (value) {
      return intRange(0, 40)(value);
    }
  },
  autoBreadcrumbs: {
    defaultValue: function () {
      return true;
    },
    message: 'should be true|false',
    validate: function (value) {
      return typeof value === 'boolean';
    }
  },
  user: {
    defaultValue: function () {
      return null;
    },
    message: '(object) user should be an object',
    validate: function (value) {
      return typeof value === 'object';
    }
  },
  metaData: {
    defaultValue: function () {
      return null;
    },
    message: 'should be an object',
    validate: function (value) {
      return typeof value === 'object';
    }
  },
  logger: {
    defaultValue: function () {
      return undefined;
    },
    message: 'should be null or an object with methods { debug, info, warn, error }',
    validate: function (value) {
      return !value || value && __reduce_5(['debug', 'info', 'warn', 'error'], function (accum, method) {
        return accum && typeof value[method] === 'function';
      }, true);
    }
  },
  filters: {
    defaultValue: function () {
      return ['password'];
    },
    message: 'should be an array of strings|regexes',
    validate: function (value) {
      return __isArray_5(value) && value.length === __filter_5(value, function (s) {
        return typeof s === 'string' || s && typeof s.test === 'function';
      }).length;
    }
  }
};

_$config_5.mergeDefaults = function (opts, schema) {
  if (!opts || !schema) throw new Error('opts and schema objects are required');
  return __reduce_5(__keys_5(schema), function (accum, key) {
    accum[key] = opts[key] !== undefined ? opts[key] : schema[key].defaultValue(opts[key], opts);
    return accum;
  }, {});
};

_$config_5.validate = function (opts, schema) {
  if (!opts || !schema) throw new Error('opts and schema objects are required');
  var errors = __reduce_5(__keys_5(schema), function (accum, key) {
    if (schema[key].validate(opts[key], opts)) return accum;
    return accum.concat({
      key: key,
      message: schema[key].message,
      value: opts[key]
    });
  }, []);
  return {
    valid: !errors.length,
    errors: errors
  };
};

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var schema = _$config_5.schema;

var __map_1 = _$esUtils_8.map;

var __stringWithLength_1 = _$validators_15.stringWithLength;

var _$config_1 = {
  releaseStage: {
    defaultValue: function () {
      if (/^localhost(:\d+)?$/.test(window.location.host)) return 'development';
      return 'production';
    },
    message: 'should be set',
    validate: __stringWithLength_1
  },
  logger: _extends({}, schema.logger, {
    defaultValue: function () {
      return (// set logger based on browser capability
        typeof console !== 'undefined' && typeof console.debug === 'function' ? getPrefixedConsole() : undefined
      );
    }
  })
};

var getPrefixedConsole = function () {
  var logger = {};
  var consoleLog = console['log'];
  __map_1(['debug', 'info', 'warn', 'error'], function (method) {
    var consoleMethod = console[method];
    logger[method] = typeof consoleMethod === 'function' ? consoleMethod.bind(console, '[bugsnag]') : consoleLog.bind(console, '[bugsnag]');
  });
  return logger;
};

var __isoDate_3 = _$esUtils_8.isoDate;

var BugsnagBreadcrumb =
/*#__PURE__*/
function () {
  function BugsnagBreadcrumb(name, metaData, type, timestamp) {
    if (name === void 0) {
      name = '[anonymous]';
    }

    if (metaData === void 0) {
      metaData = {};
    }

    if (type === void 0) {
      type = 'manual';
    }

    if (timestamp === void 0) {
      timestamp = __isoDate_3();
    }

    this.type = type;
    this.name = name;
    this.metaData = metaData;
    this.timestamp = timestamp;
  }

  var _proto = BugsnagBreadcrumb.prototype;

  _proto.toJSON = function toJSON() {
    return {
      type: this.type,
      name: this.name,
      timestamp: this.timestamp,
      metaData: this.metaData
    };
  };

  return BugsnagBreadcrumb;
}();

var _$BugsnagBreadcrumb_3 = BugsnagBreadcrumb;

// This is a heavily modified/simplified version of
//   https://github.com/othiym23/async-some
//
// We can't use that because:
//   a) it inflates the bundle size to over 10kB
//   b) it depends on a module that uses Object.keys()
//      (which we can't use due to ie8 support)
// run the asynchronous test function (fn) over each item in the array (arr)
// in series until:
//   - fn(item, cb) => calls cb(null, true)
//   - or the end of the array is reached
// the callback (cb) will be passed true if any of the items resulted in a true
// callback, otherwise false
var _$asyncSome_6 = function (arr, fn, cb) {
  var length = arr.length;
  var index = 0;

  var next = function () {
    if (index >= length) return cb(null, false);
    fn(arr[index], function (err, result) {
      if (err) return cb(err, false);
      if (result === true) return cb(null, true);
      index++;
      next();
    });
  };

  next();
};

var _$inferReleaseStage_10 = function (client) {
  return client.app && typeof client.app.releaseStage === 'string' ? client.app.releaseStage : client.config.releaseStage;
};

/**
 * Expose `isError`.
 */
var _$isError_21 = isError;
/**
 * Test whether `value` is error object.
 *
 * @param {*} value
 * @returns {boolean}
 */

function isError(value) {
  switch (Object.prototype.toString.call(value)) {
    case '[object Error]':
      return true;

    case '[object Exception]':
      return true;

    case '[object DOMException]':
      return true;

    default:
      return value instanceof Error;
  }
}

var _$iserror_11 = _$isError_21;

var _$runBeforeSend_14 = function (report, onError) {
  return function (fn, cb) {
    if (typeof fn !== 'function') return cb(null, false);

    try {
      // if function appears sync…
      if (fn.length !== 2) {
        var ret = fn(report); // check if it returned a "thenable" (promise)

        if (ret && typeof ret.then === 'function') {
          return ret.then( // resolve
          function (val) {
            return setTimeout(function () {
              return cb(null, shouldPreventSend(report, val));
            }, 0);
          }, // reject
          function (err) {
            setTimeout(function () {
              onError(err);
              return cb(null, false);
            });
          });
        }

        return cb(null, shouldPreventSend(report, ret));
      } // if function is async…


      fn(report, function (err, result) {
        if (err) {
          onError(err);
          return cb(null, false);
        }

        cb(null, shouldPreventSend(report, result));
      });
    } catch (e) {
      onError(e);
      cb(null, false);
    }
  };
};

var shouldPreventSend = function (report, value) {
  return report.isIgnored() || value === false;
};

var _$stackframe_23 = {};
(function (root, factory) {
  'use strict'; // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.

  /* istanbul ignore next */

  if (typeof define === 'function' && define.amd) {
    define('stackframe', [], factory);
  } else if (typeof _$stackframe_23 === 'object') {
    _$stackframe_23 = factory();
  } else {
    root.StackFrame = factory();
  }
})(this, function () {
  'use strict';

  function _isNumber(n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
  }

  function _capitalize(str) {
    return str.charAt(0).toUpperCase() + str.substring(1);
  }

  function _getter(p) {
    return function () {
      return this[p];
    };
  }

  var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];
  var numericProps = ['columnNumber', 'lineNumber'];
  var stringProps = ['fileName', 'functionName', 'source'];
  var arrayProps = ['args'];
  var props = booleanProps.concat(numericProps, stringProps, arrayProps);

  function StackFrame(obj) {
    if (obj instanceof Object) {
      for (var i = 0; i < props.length; i++) {
        if (obj.hasOwnProperty(props[i]) && obj[props[i]] !== undefined) {
          this['set' + _capitalize(props[i])](obj[props[i]]);
        }
      }
    }
  }

  StackFrame.prototype = {
    getArgs: function () {
      return this.args;
    },
    setArgs: function (v) {
      if (Object.prototype.toString.call(v) !== '[object Array]') {
        throw new TypeError('Args must be an Array');
      }

      this.args = v;
    },
    getEvalOrigin: function () {
      return this.evalOrigin;
    },
    setEvalOrigin: function (v) {
      if (v instanceof StackFrame) {
        this.evalOrigin = v;
      } else if (v instanceof Object) {
        this.evalOrigin = new StackFrame(v);
      } else {
        throw new TypeError('Eval Origin must be an Object or StackFrame');
      }
    },
    toString: function () {
      var functionName = this.getFunctionName() || '{anonymous}';
      var args = '(' + (this.getArgs() || []).join(',') + ')';
      var fileName = this.getFileName() ? '@' + this.getFileName() : '';
      var lineNumber = _isNumber(this.getLineNumber()) ? ':' + this.getLineNumber() : '';
      var columnNumber = _isNumber(this.getColumnNumber()) ? ':' + this.getColumnNumber() : '';
      return functionName + args + fileName + lineNumber + columnNumber;
    }
  };

  for (var i = 0; i < booleanProps.length; i++) {
    StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);

    StackFrame.prototype['set' + _capitalize(booleanProps[i])] = function (p) {
      return function (v) {
        this[p] = Boolean(v);
      };
    }(booleanProps[i]);
  }

  for (var j = 0; j < numericProps.length; j++) {
    StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);

    StackFrame.prototype['set' + _capitalize(numericProps[j])] = function (p) {
      return function (v) {
        if (!_isNumber(v)) {
          throw new TypeError(p + ' must be a Number');
        }

        this[p] = Number(v);
      };
    }(numericProps[j]);
  }

  for (var k = 0; k < stringProps.length; k++) {
    StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);

    StackFrame.prototype['set' + _capitalize(stringProps[k])] = function (p) {
      return function (v) {
        this[p] = String(v);
      };
    }(stringProps[k]);
  }

  return StackFrame;
});

var _$errorStackParser_20 = {};
(function (root, factory) {
  'use strict'; // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.

  /* istanbul ignore next */

  if (typeof define === 'function' && define.amd) {
    define('error-stack-parser', ['stackframe'], factory);
  } else if (typeof _$errorStackParser_20 === 'object') {
    _$errorStackParser_20 = factory(_$stackframe_23);
  } else {
    root.ErrorStackParser = factory(root.StackFrame);
  }
})(this, function ErrorStackParser(StackFrame) {
  'use strict';

  var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\S+\:\d+/;
  var CHROME_IE_STACK_REGEXP = /^\s*at .*(\S+\:\d+|\(native\))/m;
  var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\[native code\])?$/;
  return {
    /**
     * Given an Error object, extract the most information from it.
     *
     * @param {Error} error object
     * @return {Array} of StackFrames
     */
    parse: function ErrorStackParser$$parse(error) {
      if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {
        return this.parseOpera(error);
      } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {
        return this.parseV8OrIE(error);
      } else if (error.stack) {
        return this.parseFFOrSafari(error);
      } else {
        throw new Error('Cannot parse given Error object');
      }
    },
    // Separate line and column numbers from a string of the form: (URI:Line:Column)
    extractLocation: function ErrorStackParser$$extractLocation(urlLike) {
      // Fail-fast but return locations like "(native)"
      if (urlLike.indexOf(':') === -1) {
        return [urlLike];
      }

      var regExp = /(.+?)(?:\:(\d+))?(?:\:(\d+))?$/;
      var parts = regExp.exec(urlLike.replace(/[\(\)]/g, ''));
      return [parts[1], parts[2] || undefined, parts[3] || undefined];
    },
    parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {
      var filtered = error.stack.split('\n').filter(function (line) {
        return !!line.match(CHROME_IE_STACK_REGEXP);
      }, this);
      return filtered.map(function (line) {
        if (line.indexOf('(eval ') > -1) {
          // Throw away eval information until we implement stacktrace.js/stackframe#8
          line = line.replace(/eval code/g, 'eval').replace(/(\(eval at [^\()]*)|(\)\,.*$)/g, '');
        }

        var sanitizedLine = line.replace(/^\s+/, '').replace(/\(eval code/g, '('); // capture and preseve the parenthesized location "(/foo/my bar.js:12:87)" in
        // case it has spaces in it, as the string is split on \s+ later on

        var location = sanitizedLine.match(/ (\((.+):(\d+):(\d+)\)$)/); // remove the parenthesized location from the line, if it was matched

        sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;
        var tokens = sanitizedLine.split(/\s+/).slice(1); // if a location was matched, pass it to extractLocation() otherwise pop the last token

        var locationParts = this.extractLocation(location ? location[1] : tokens.pop());
        var functionName = tokens.join(' ') || undefined;
        var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];
        return new StackFrame({
          functionName: functionName,
          fileName: fileName,
          lineNumber: locationParts[1],
          columnNumber: locationParts[2],
          source: line
        });
      }, this);
    },
    parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {
      var filtered = error.stack.split('\n').filter(function (line) {
        return !line.match(SAFARI_NATIVE_CODE_REGEXP);
      }, this);
      return filtered.map(function (line) {
        // Throw away eval information until we implement stacktrace.js/stackframe#8
        if (line.indexOf(' > eval') > -1) {
          line = line.replace(/ line (\d+)(?: > eval line \d+)* > eval\:\d+\:\d+/g, ':$1');
        }

        if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {
          // Safari eval frames only have function names and nothing else
          return new StackFrame({
            functionName: line
          });
        } else {
          var functionNameRegex = /((.*".+"[^@]*)?[^@]*)(?:@)/;
          var matches = line.match(functionNameRegex);
          var functionName = matches && matches[1] ? matches[1] : undefined;
          var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));
          return new StackFrame({
            functionName: functionName,
            fileName: locationParts[0],
            lineNumber: locationParts[1],
            columnNumber: locationParts[2],
            source: line
          });
        }
      }, this);
    },
    parseOpera: function ErrorStackParser$$parseOpera(e) {
      if (!e.stacktrace || e.message.indexOf('\n') > -1 && e.message.split('\n').length > e.stacktrace.split('\n').length) {
        return this.parseOpera9(e);
      } else if (!e.stack) {
        return this.parseOpera10(e);
      } else {
        return this.parseOpera11(e);
      }
    },
    parseOpera9: function ErrorStackParser$$parseOpera9(e) {
      var lineRE = /Line (\d+).*script (?:in )?(\S+)/i;
      var lines = e.message.split('\n');
      var result = [];

      for (var i = 2, len = lines.length; i < len; i += 2) {
        var match = lineRE.exec(lines[i]);

        if (match) {
          result.push(new StackFrame({
            fileName: match[2],
            lineNumber: match[1],
            source: lines[i]
          }));
        }
      }

      return result;
    },
    parseOpera10: function ErrorStackParser$$parseOpera10(e) {
      var lineRE = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i;
      var lines = e.stacktrace.split('\n');
      var result = [];

      for (var i = 0, len = lines.length; i < len; i += 2) {
        var match = lineRE.exec(lines[i]);

        if (match) {
          result.push(new StackFrame({
            functionName: match[3] || undefined,
            fileName: match[2],
            lineNumber: match[1],
            source: lines[i]
          }));
        }
      }

      return result;
    },
    // Opera 10.65+ Error.stack very similar to FF/Safari
    parseOpera11: function ErrorStackParser$$parseOpera11(error) {
      var filtered = error.stack.split('\n').filter(function (line) {
        return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);
      }, this);
      return filtered.map(function (line) {
        var tokens = line.split('@');
        var locationParts = this.extractLocation(tokens.pop());
        var functionCall = tokens.shift() || '';
        var functionName = functionCall.replace(/<anonymous function(: (\w+))?>/, '$2').replace(/\([^\)]*\)/g, '') || undefined;
        var argsRaw;

        if (functionCall.match(/\(([^\)]*)\)/)) {
          argsRaw = functionCall.replace(/^[^\(]+\(([^\)]*)\)$/, '$1');
        }

        var args = argsRaw === undefined || argsRaw === '[arguments not available]' ? undefined : argsRaw.split(',');
        return new StackFrame({
          functionName: functionName,
          args: args,
          fileName: locationParts[0],
          lineNumber: locationParts[1],
          columnNumber: locationParts[2],
          source: line
        });
      }, this);
    }
  };
});

var _$errorStackParser_7 = _$errorStackParser_20;

// Given `err` which may be an error, does it have a stack property which is a string?
var _$hasStack_9 = function (err) {
  return !!err && (!!err.stack || !!err.stacktrace || !!err['opera#sourceloc']) && typeof (err.stack || err.stacktrace || err['opera#sourceloc']) === 'string' && err.stack !== err.name + ": " + err.message;
};

var _$jsRuntime_12 = "yes" ? 'browserjs' : undefined;

var _$stackGenerator_22 = {};
(function (root, factory) {
  'use strict'; // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.

  /* istanbul ignore next */

  if (typeof define === 'function' && define.amd) {
    define('stack-generator', ['stackframe'], factory);
  } else if (typeof _$stackGenerator_22 === 'object') {
    _$stackGenerator_22 = factory(_$stackframe_23);
  } else {
    root.StackGenerator = factory(root.StackFrame);
  }
})(this, function (StackFrame) {
  return {
    backtrace: function StackGenerator$$backtrace(opts) {
      var stack = [];
      var maxStackSize = 10;

      if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {
        maxStackSize = opts.maxStackSize;
      }

      var curr = arguments.callee;

      while (curr && stack.length < maxStackSize && curr['arguments']) {
        // Allow V8 optimizations
        var args = new Array(curr['arguments'].length);

        for (var i = 0; i < args.length; ++i) {
          args[i] = curr['arguments'][i];
        }

        if (/function(?:\s+([\w$]+))+\s*\(/.test(curr.toString())) {
          stack.push(new StackFrame({
            functionName: RegExp.$1 || undefined,
            args: args
          }));
        } else {
          stack.push(new StackFrame({
            args: args
          }));
        }

        try {
          curr = curr.caller;
        } catch (e) {
          break;
        }
      }

      return stack;
    }
  };
});

function ___extends_24() { ___extends_24 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ___extends_24.apply(this, arguments); }

/* removed: var _$errorStackParser_7 = require('./lib/error-stack-parser'); */;

/* removed: var _$stackGenerator_22 = require('stack-generator'); */;

/* removed: var _$hasStack_9 = require('./lib/has-stack'); */;

var __reduce_24 = _$esUtils_8.reduce,
    __filter_24 = _$esUtils_8.filter;

/* removed: var _$jsRuntime_12 = require('./lib/js-runtime'); */;

var BugsnagReport =
/*#__PURE__*/
function () {
  function BugsnagReport(errorClass, errorMessage, stacktrace, handledState, originalError) {
    if (stacktrace === void 0) {
      stacktrace = [];
    }

    if (handledState === void 0) {
      handledState = defaultHandledState();
    }

    // duck-typing ftw >_<
    this.__isBugsnagReport = true;
    this._ignored = false; // private (un)handled state

    this._handledState = handledState; // setable props

    this.app = undefined;
    this.apiKey = undefined;
    this.breadcrumbs = [];
    this.context = undefined;
    this.device = undefined;
    this.errorClass = stringOrFallback(errorClass, '[no error class]');
    this.errorMessage = stringOrFallback(errorMessage, '[no error message]');
    this.groupingHash = undefined;
    this.metaData = {};
    this.request = undefined;
    this.severity = this._handledState.severity;
    this.stacktrace = __reduce_24(stacktrace, function (accum, frame) {
      var f = formatStackframe(frame); // don't include a stackframe if none of its properties are defined

      try {
        if (JSON.stringify(f) === '{}') return accum;
        return accum.concat(f);
      } catch (e) {
        return accum;
      }
    }, []);
    this.user = undefined;
    this.session = undefined;
    this.originalError = originalError; // Flags.
    // Note these are not initialised unless they are used
    // to save unnecessary bytes in the browser bundle

    /* this.attemptImmediateDelivery, default: true */
  }

  var _proto = BugsnagReport.prototype;

  _proto.ignore = function ignore() {
    this._ignored = true;
  };

  _proto.isIgnored = function isIgnored() {
    return this._ignored;
  };

  _proto.updateMetaData = function updateMetaData(section) {
    var _updates;

    if (!section) return this;
    var updates; // updateMetaData("section", null) -> removes section

    if ((arguments.length <= 1 ? undefined : arguments[1]) === null) return this.removeMetaData(section); // updateMetaData("section", "property", null) -> removes property from section

    if ((arguments.length <= 2 ? undefined : arguments[2]) === null) return this.removeMetaData(section, arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]); // normalise the two supported input types into object form

    if (typeof (arguments.length <= 1 ? undefined : arguments[1]) === 'object') updates = arguments.length <= 1 ? undefined : arguments[1];
    if (typeof (arguments.length <= 1 ? undefined : arguments[1]) === 'string') updates = (_updates = {}, _updates[arguments.length <= 1 ? undefined : arguments[1]] = arguments.length <= 2 ? undefined : arguments[2], _updates); // exit if we don't have an updates object at this point

    if (!updates) return this; // ensure a section with this name exists

    if (!this.metaData[section]) this.metaData[section] = {}; // merge the updates with the existing section

    this.metaData[section] = ___extends_24({}, this.metaData[section], updates);
    return this;
  };

  _proto.removeMetaData = function removeMetaData(section, property) {
    if (typeof section !== 'string') return this; // remove an entire section

    if (!property) {
      delete this.metaData[section];
      return this;
    } // remove a single property from a section


    if (this.metaData[section]) {
      delete this.metaData[section][property];
      return this;
    }

    return this;
  };

  _proto.toJSON = function toJSON() {
    return {
      payloadVersion: '4',
      exceptions: [{
        errorClass: this.errorClass,
        message: this.errorMessage,
        stacktrace: this.stacktrace,
        type: _$jsRuntime_12
      }],
      severity: this.severity,
      unhandled: this._handledState.unhandled,
      severityReason: this._handledState.severityReason,
      app: this.app,
      device: this.device,
      breadcrumbs: this.breadcrumbs,
      context: this.context,
      user: this.user,
      metaData: this.metaData,
      groupingHash: this.groupingHash,
      request: this.request,
      session: this.session
    };
  };

  return BugsnagReport;
}(); // takes a stacktrace.js style stackframe (https://github.com/stacktracejs/stackframe)
// and returns a Bugsnag compatible stackframe (https://docs.bugsnag.com/api/error-reporting/#json-payload)


var formatStackframe = function (frame) {
  var f = {
    file: frame.fileName,
    method: normaliseFunctionName(frame.functionName),
    lineNumber: frame.lineNumber,
    columnNumber: frame.columnNumber,
    code: undefined,
    inProject: undefined // Some instances result in no file:
    // - calling notify() from chrome's terminal results in no file/method.
    // - non-error exception thrown from global code in FF
    // This adds one.

  };

  if (f.lineNumber > -1 && !f.file && !f.method) {
    f.file = 'global code';
  }

  return f;
};

var normaliseFunctionName = function (name) {
  return /^global code$/i.test(name) ? 'global code' : name;
};

var defaultHandledState = function () {
  return {
    unhandled: false,
    severity: 'warning',
    severityReason: {
      type: 'handledException'
    }
  };
};

var stringOrFallback = function (str, fallback) {
  return typeof str === 'string' && str ? str : fallback;
}; // Helpers


BugsnagReport.getStacktrace = function (error, errorFramesToSkip, generatedFramesToSkip) {
  if (errorFramesToSkip === void 0) {
    errorFramesToSkip = 0;
  }

  if (generatedFramesToSkip === void 0) {
    generatedFramesToSkip = 0;
  }

  if (_$hasStack_9(error)) return _$errorStackParser_7.parse(error).slice(errorFramesToSkip); // in IE11 a new Error() doesn't have a stacktrace until you throw it, so try that here

  try {
    throw error;
  } catch (e) {
    if (_$hasStack_9(e)) return _$errorStackParser_7.parse(error).slice(1 + generatedFramesToSkip); // error wasn't provided or didn't have a stacktrace so try to walk the callstack

    try {
      return __filter_24(_$stackGenerator_22.backtrace(), function (frame) {
        return (frame.functionName || '').indexOf('StackGenerator$$') === -1;
      }).slice(1 + generatedFramesToSkip);
    } catch (e) {
      return [];
    }
  }
};

BugsnagReport.ensureReport = function (reportOrError, errorFramesToSkip, generatedFramesToSkip) {
  if (errorFramesToSkip === void 0) {
    errorFramesToSkip = 0;
  }

  if (generatedFramesToSkip === void 0) {
    generatedFramesToSkip = 0;
  }

  // notify() can be called with a Report object. In this case no action is required
  if (reportOrError.__isBugsnagReport) return reportOrError;

  try {
    var stacktrace = BugsnagReport.getStacktrace(reportOrError, errorFramesToSkip, 1 + generatedFramesToSkip);
    return new BugsnagReport(reportOrError.name, reportOrError.message, stacktrace, undefined, reportOrError);
  } catch (e) {
    return new BugsnagReport(reportOrError.name, reportOrError.message, [], undefined, reportOrError);
  }
};

var _$BugsnagReport_24 = BugsnagReport;

var _$pad_18 = function pad(num, size) {
  var s = '000000000' + num;
  return s.substr(s.length - size);
};

/* removed: var _$pad_18 = require('./pad.js'); */;

var env = typeof window === 'object' ? window : self;
var globalCount = 0;

for (var prop in env) {
  if (Object.hasOwnProperty.call(env, prop)) globalCount++;
}

var mimeTypesLength = navigator.mimeTypes ? navigator.mimeTypes.length : 0;
var clientId = _$pad_18((mimeTypesLength + navigator.userAgent.length).toString(36) + globalCount.toString(36), 4);

var _$fingerprint_17 = function fingerprint() {
  return clientId;
};

/**
 * cuid.js
 * Collision-resistant UID generator for browsers and node.
 * Sequential for fast db lookups and recency sorting.
 * Safe for element IDs and server-side lookups.
 *
 * Extracted from CLCTR
 *
 * Copyright (c) Eric Elliott 2012
 * MIT License
 */
/* removed: var _$fingerprint_17 = require('./lib/fingerprint.js'); */;

/* removed: var _$pad_18 = require('./lib/pad.js'); */;

var c = 0,
    blockSize = 4,
    base = 36,
    discreteValues = Math.pow(base, blockSize);

function randomBlock() {
  return _$pad_18((Math.random() * discreteValues << 0).toString(base), blockSize);
}

function safeCounter() {
  c = c < discreteValues ? c : 0;
  c++; // this is not subliminal

  return c - 1;
}

function cuid() {
  // Starting with a lowercase letter makes
  // it HTML element ID friendly.
  var letter = 'c',
      // hard-coded allows for sequential access
  // timestamp
  // warning: this exposes the exact date and time
  // that the uid was created.
  timestamp = new Date().getTime().toString(base),
      // Prevent same-machine collisions.
  counter = _$pad_18(safeCounter().toString(base), blockSize),
      // A few chars to generate distinct ids for different
  // clients (so different computers are far less
  // likely to generate the same id)
  print = _$fingerprint_17(),
      // Grab some more chars from Math.random()
  random = randomBlock() + randomBlock();
  return letter + timestamp + counter + print + random;
}

cuid.fingerprint = _$fingerprint_17;
var _$cuid_16 = cuid;

var __isoDate_25 = _$esUtils_8.isoDate;

/* removed: var _$cuid_16 = require('@bugsnag/cuid'); */;

var Session =
/*#__PURE__*/
function () {
  function Session() {
    this.id = _$cuid_16();
    this.startedAt = __isoDate_25();
    this._handled = 0;
    this._unhandled = 0;
  }

  var _proto = Session.prototype;

  _proto.toJSON = function toJSON() {
    return {
      id: this.id,
      startedAt: this.startedAt,
      events: {
        handled: this._handled,
        unhandled: this._unhandled
      }
    };
  };

  _proto.trackError = function trackError(report) {
    this[report._handledState.unhandled ? '_unhandled' : '_handled'] += 1;
  };

  return Session;
}();

var _$Session_25 = Session;

function ___extends_4() { ___extends_4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ___extends_4.apply(this, arguments); }

/* removed: var _$config_5 = require('./config'); */;

/* removed: var _$BugsnagReport_24 = require('./report'); */;

/* removed: var _$BugsnagBreadcrumb_3 = require('./breadcrumb'); */;

/* removed: var _$Session_25 = require('./session'); */;

var __map_4 = _$esUtils_8.map,
    __includes_4 = _$esUtils_8.includes,
    __isArray_4 = _$esUtils_8.isArray;

/* removed: var _$inferReleaseStage_10 = require('./lib/infer-release-stage'); */;

/* removed: var _$iserror_11 = require('./lib/iserror'); */;

/* removed: var _$asyncSome_6 = require('./lib/async-some'); */;

/* removed: var _$runBeforeSend_14 = require('./lib/run-before-send'); */;

var LOG_USAGE_ERR_PREFIX = "Usage error.";
var REPORT_USAGE_ERR_PREFIX = "Bugsnag usage error.";

var BugsnagClient =
/*#__PURE__*/
function () {
  function BugsnagClient(notifier) {
    if (!notifier || !notifier.name || !notifier.version || !notifier.url) {
      throw new Error('`notifier` argument is required');
    } // notifier id


    this.notifier = notifier; // configure() should be called before notify()

    this._configured = false; // intialise opts and config

    this._opts = {};
    this.config = {}; // // i/o

    this._delivery = {
      sendSession: function () {},
      sendReport: function () {}
    };
    this._logger = {
      debug: function () {},
      info: function () {},
      warn: function () {},
      error: function () {} // plugins

    };
    this._plugins = {};
    this._session = null;
    this.breadcrumbs = []; // setable props

    this.app = {};
    this.context = undefined;
    this.device = undefined;
    this.metaData = undefined;
    this.request = undefined;
    this.user = {}; // expose internal constructors

    this.BugsnagClient = BugsnagClient;
    this.BugsnagReport = _$BugsnagReport_24;
    this.BugsnagBreadcrumb = _$BugsnagBreadcrumb_3;
    this.BugsnagSession = _$Session_25;
    var self = this;
    var notify = this.notify;

    this.notify = function () {
      return notify.apply(self, arguments);
    };
  }

  var _proto = BugsnagClient.prototype;

  _proto.setOptions = function setOptions(opts) {
    this._opts = ___extends_4({}, this._opts, opts);
  };

  _proto.configure = function configure(partialSchema) {
    if (partialSchema === void 0) {
      partialSchema = _$config_5.schema;
    }

    var conf = _$config_5.mergeDefaults(this._opts, partialSchema);
    var validity = _$config_5.validate(conf, partialSchema);
    if (!validity.valid === true) throw new Error(generateConfigErrorMessage(validity.errors)); // update and elevate some special options if they were passed in at this point

    if (typeof conf.beforeSend === 'function') conf.beforeSend = [conf.beforeSend];
    if (conf.appVersion) this.app.version = conf.appVersion;
    if (conf.appType) this.app.type = conf.appType;
    if (conf.metaData) this.metaData = conf.metaData;
    if (conf.user) this.user = conf.user;
    if (conf.logger) this.logger(conf.logger); // merge with existing config

    this.config = ___extends_4({}, this.config, conf);
    this._configured = true;
    return this;
  };

  _proto.use = function use(plugin) {
    if (!this._configured) throw new Error('client not configured');
    if (plugin.configSchema) this.configure(plugin.configSchema);

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var result = plugin.init.apply(plugin, [this].concat(args)); // JS objects are not the safest way to store arbitrarily keyed values,
    // so bookend the key with some characters that prevent tampering with
    // stuff like __proto__ etc. (only store the result if the plugin had a
    // name)

    if (plugin.name) this._plugins["~" + plugin.name + "~"] = result;
    return this;
  };

  _proto.getPlugin = function getPlugin(name) {
    return this._plugins["~" + name + "~"];
  };

  _proto.delivery = function delivery(d) {
    this._delivery = d(this);
    return this;
  };

  _proto.logger = function logger(l, sid) {
    this._logger = l;
    return this;
  };

  _proto.sessionDelegate = function sessionDelegate(s) {
    this._sessionDelegate = s;
    return this;
  };

  _proto.startSession = function startSession() {
    if (!this._sessionDelegate) {
      this._logger.warn('No session implementation is installed');

      return this;
    }

    return this._sessionDelegate.startSession(this);
  };

  _proto.leaveBreadcrumb = function leaveBreadcrumb(name, metaData, type, timestamp) {
    if (!this._configured) throw new Error('client not configured'); // coerce bad values so that the defaults get set

    name = name || undefined;
    type = typeof type === 'string' ? type : undefined;
    timestamp = typeof timestamp === 'string' ? timestamp : undefined;
    metaData = typeof metaData === 'object' && metaData !== null ? metaData : undefined; // if no name and no metaData, usefulness of this crumb is questionable at best so discard

    if (typeof name !== 'string' && !metaData) return;
    var crumb = new _$BugsnagBreadcrumb_3(name, metaData, type, timestamp); // push the valid crumb onto the queue and maintain the length

    this.breadcrumbs.push(crumb);

    if (this.breadcrumbs.length > this.config.maxBreadcrumbs) {
      this.breadcrumbs = this.breadcrumbs.slice(this.breadcrumbs.length - this.config.maxBreadcrumbs);
    }

    return this;
  };

  _proto.notify = function notify(error, opts, cb) {
    var _this = this;

    if (opts === void 0) {
      opts = {};
    }

    if (cb === void 0) {
      cb = function () {};
    }

    if (!this._configured) throw new Error('client not configured'); // releaseStage can be set via config.releaseStage or client.app.releaseStage

    var releaseStage = _$inferReleaseStage_10(this); // ensure we have an error (or a reasonable object representation of an error)

    var _normaliseError = normaliseError(error, opts, this._logger),
        err = _normaliseError.err,
        errorFramesToSkip = _normaliseError.errorFramesToSkip,
        _opts = _normaliseError._opts;

    if (_opts) opts = _opts; // ensure opts is an object

    if (typeof opts !== 'object' || opts === null) opts = {}; // create a report from the error, if it isn't one already

    var report = _$BugsnagReport_24.ensureReport(err, errorFramesToSkip, 2);
    report.app = ___extends_4({}, {
      releaseStage: releaseStage
    }, report.app, this.app);
    report.context = report.context || opts.context || this.context || undefined;
    report.device = ___extends_4({}, report.device, this.device, opts.device);
    report.request = ___extends_4({}, report.request, this.request, opts.request);
    report.user = ___extends_4({}, report.user, this.user, opts.user);
    report.metaData = ___extends_4({}, report.metaData, this.metaData, opts.metaData);
    report.breadcrumbs = this.breadcrumbs.slice(0);

    if (this._session) {
      this._session.trackError(report);

      report.session = this._session;
    } // set severity if supplied


    if (opts.severity !== undefined) {
      report.severity = opts.severity;
      report._handledState.severityReason = {
        type: 'userSpecifiedSeverity'
      };
    } // exit early if the reports should not be sent on the current releaseStage


    if (__isArray_4(this.config.notifyReleaseStages) && !__includes_4(this.config.notifyReleaseStages, releaseStage)) {
      this._logger.warn("Report not sent due to releaseStage/notifyReleaseStages configuration");

      return cb(null, report);
    }

    var originalSeverity = report.severity;
    var beforeSend = [].concat(opts.beforeSend).concat(this.config.beforeSend);

    var onBeforeSendErr = function (err) {
      _this._logger.error("Error occurred in beforeSend callback, continuing anyway\u2026");

      _this._logger.error(err);
    };

    _$asyncSome_6(beforeSend, _$runBeforeSend_14(report, onBeforeSendErr), function (err, preventSend) {
      if (err) onBeforeSendErr(err);

      if (preventSend) {
        _this._logger.debug("Report not sent due to beforeSend callback");

        return cb(null, report);
      } // only leave a crumb for the error if actually got sent


      if (_this.config.autoBreadcrumbs) {
        _this.leaveBreadcrumb(report.errorClass, {
          errorClass: report.errorClass,
          errorMessage: report.errorMessage,
          severity: report.severity
        }, 'error');
      }

      if (originalSeverity !== report.severity) {
        report._handledState.severityReason = {
          type: 'userCallbackSetSeverity'
        };
      }

      _this._delivery.sendReport({
        apiKey: report.apiKey || _this.config.apiKey,
        notifier: _this.notifier,
        events: [report]
      }, function (err) {
        return cb(err, report);
      });
    });
  };

  return BugsnagClient;
}();

var normaliseError = function (error, opts, logger) {
  var synthesizedErrorFramesToSkip = 3;

  var createAndLogUsageError = function (reason) {
    var msg = generateNotifyUsageMessage(reason);
    logger.warn(LOG_USAGE_ERR_PREFIX + " " + msg);
    return new Error(REPORT_USAGE_ERR_PREFIX + " " + msg);
  };

  var err;
  var errorFramesToSkip = 0;

  var _opts;

  switch (typeof error) {
    case 'string':
      if (typeof opts === 'string') {
        // ≤v3 used to have a notify('ErrorName', 'Error message') interface
        // report usage/deprecation errors if this function is called like that
        err = createAndLogUsageError('string/string');
        _opts = {
          metaData: {
            notifier: {
              notifyArgs: [error, opts]
            }
          }
        };
      } else {
        err = new Error(String(error));
        errorFramesToSkip = synthesizedErrorFramesToSkip;
      }

      break;

    case 'number':
    case 'boolean':
      err = new Error(String(error));
      break;

    case 'function':
      err = createAndLogUsageError('function');
      break;

    case 'object':
      if (error !== null && (_$iserror_11(error) || error.__isBugsnagReport)) {
        err = error;
      } else if (error !== null && hasNecessaryFields(error)) {
        err = new Error(error.message || error.errorMessage);
        err.name = error.name || error.errorClass;
        errorFramesToSkip = synthesizedErrorFramesToSkip;
      } else {
        err = createAndLogUsageError(error === null ? 'null' : 'unsupported object');
      }

      break;

    default:
      err = createAndLogUsageError('nothing');
  }

  return {
    err: err,
    errorFramesToSkip: errorFramesToSkip,
    _opts: _opts
  };
};

var hasNecessaryFields = function (error) {
  return (typeof error.name === 'string' || typeof error.errorClass === 'string') && (typeof error.message === 'string' || typeof error.errorMessage === 'string');
};

var generateConfigErrorMessage = function (errors) {
  return "Bugsnag configuration error\n" + __map_4(errors, function (err) {
    return "\"" + err.key + "\" " + err.message + " \n    got " + stringify(err.value);
  }).join('\n\n');
};

var generateNotifyUsageMessage = function (actual) {
  return "notify() expected error/opts parameters, got " + actual;
};

var stringify = function (val) {
  return typeof val === 'object' ? JSON.stringify(val) : String(val);
};

var _$BugsnagClient_4 = BugsnagClient;

var _$safeJsonStringify_19 = function (data, replacer, space, opts) {
  var filterKeys = opts && opts.filterKeys ? opts.filterKeys : [];
  var filterPaths = opts && opts.filterPaths ? opts.filterPaths : [];
  return JSON.stringify(prepareObjForSerialization(data, filterKeys, filterPaths), replacer, space);
};

var MAX_DEPTH = 20;
var MAX_EDGES = 25000;
var MIN_PRESERVED_DEPTH = 8;
var REPLACEMENT_NODE = '...';

function __isError_19(o) {
  return o instanceof Error || /^\[object (Error|(Dom)?Exception)\]$/.test(Object.prototype.toString.call(o));
}

function throwsMessage(err) {
  return '[Throws: ' + (err ? err.message : '?') + ']';
}

function find(haystack, needle) {
  for (var i = 0, len = haystack.length; i < len; i++) {
    if (haystack[i] === needle) return true;
  }

  return false;
} // returns true if the string `path` starts with any of the provided `paths`


function isDescendent(paths, path) {
  for (var i = 0, len = paths.length; i < len; i++) {
    if (path.indexOf(paths[i]) === 0) return true;
  }

  return false;
}

function shouldFilter(patterns, key) {
  for (var i = 0, len = patterns.length; i < len; i++) {
    if (typeof patterns[i] === 'string' && patterns[i] === key) return true;
    if (patterns[i] && typeof patterns[i].test === 'function' && patterns[i].test(key)) return true;
  }

  return false;
}

function __isArray_19(obj) {
  return Object.prototype.toString.call(obj) === '[object Array]';
}

function safelyGetProp(obj, prop) {
  try {
    return obj[prop];
  } catch (err) {
    return throwsMessage(err);
  }
}

function prepareObjForSerialization(obj, filterKeys, filterPaths) {
  var seen = []; // store references to objects we have seen before

  var edges = 0;

  function visit(obj, path) {
    function edgesExceeded() {
      return path.length > MIN_PRESERVED_DEPTH && edges > MAX_EDGES;
    }

    edges++;
    if (path.length > MAX_DEPTH) return REPLACEMENT_NODE;
    if (edgesExceeded()) return REPLACEMENT_NODE;
    if (obj === null || typeof obj !== 'object') return obj;
    if (find(seen, obj)) return '[Circular]';
    seen.push(obj);

    if (typeof obj.toJSON === 'function') {
      try {
        // we're not going to count this as an edge because it
        // replaces the value of the currently visited object
        edges--;
        var fResult = visit(obj.toJSON(), path);
        seen.pop();
        return fResult;
      } catch (err) {
        return throwsMessage(err);
      }
    }

    var er = __isError_19(obj);

    if (er) {
      edges--;
      var eResult = visit({
        name: obj.name,
        message: obj.message
      }, path);
      seen.pop();
      return eResult;
    }

    if (__isArray_19(obj)) {
      var aResult = [];

      for (var i = 0, len = obj.length; i < len; i++) {
        if (edgesExceeded()) {
          aResult.push(REPLACEMENT_NODE);
          break;
        }

        aResult.push(visit(obj[i], path.concat('[]')));
      }

      seen.pop();
      return aResult;
    }

    var result = {};

    try {
      for (var prop in obj) {
        if (!Object.prototype.hasOwnProperty.call(obj, prop)) continue;

        if (isDescendent(filterPaths, path.join('.')) && shouldFilter(filterKeys, prop)) {
          result[prop] = '[Filtered]';
          continue;
        }

        if (edgesExceeded()) {
          result[prop] = REPLACEMENT_NODE;
          break;
        }

        result[prop] = visit(safelyGetProp(obj, prop), path.concat(prop));
      }
    } catch (e) {}

    seen.pop();
    return result;
  }

  return visit(obj, []);
}

var _$jsonPayload_13 = {};
/* removed: var _$safeJsonStringify_19 = require('@bugsnag/safe-json-stringify'); */;

var REPORT_FILTER_PATHS = ['events.[].app', 'events.[].metaData', 'events.[].user', 'events.[].breadcrumbs', 'events.[].request', 'events.[].device'];
var SESSION_FILTER_PATHS = ['device', 'app', 'user'];

_$jsonPayload_13.report = function (report, filterKeys) {
  var payload = _$safeJsonStringify_19(report, null, null, {
    filterPaths: REPORT_FILTER_PATHS,
    filterKeys: filterKeys
  });

  if (payload.length > 10e5) {
    delete report.events[0].metaData;
    report.events[0].metaData = {
      notifier: "WARNING!\nSerialized payload was " + payload.length / 10e5 + "MB (limit = 1MB)\nmetaData was removed"
    };
    payload = _$safeJsonStringify_19(report, null, null, {
      filterPaths: REPORT_FILTER_PATHS,
      filterKeys: filterKeys
    });
    if (payload.length > 10e5) throw new Error('payload exceeded 1MB limit');
  }

  return payload;
};

_$jsonPayload_13.session = function (report, filterKeys) {
  var payload = _$safeJsonStringify_19(report, null, null, {
    filterPaths: SESSION_FILTER_PATHS,
    filterKeys: filterKeys
  });
  if (payload.length > 10e5) throw new Error('payload exceeded 1MB limit');
  return payload;
};

var _$delivery_26 = {};
/* removed: var _$jsonPayload_13 = require('@bugsnag/core/lib/json-payload'); */;

var __isoDate_26 = _$esUtils_8.isoDate;

_$delivery_26 = function (client, win) {
  if (win === void 0) {
    win = window;
  }

  return {
    sendReport: function (report, cb) {
      if (cb === void 0) {
        cb = function () {};
      }

      var url = getApiUrl(client.config, 'notify', '4', win);
      var req = new win.XDomainRequest();

      req.onload = function () {
        cb(null);
      };

      req.open('POST', url);
      setTimeout(function () {
        try {
          req.send(_$jsonPayload_13.report(report, client.config.filters));
        } catch (e) {
          client._logger.error(e);

          cb(e);
        }
      }, 0);
    },
    sendSession: function (session, cb) {
      if (cb === void 0) {
        cb = function () {};
      }

      var url = getApiUrl(client.config, 'sessions', '1', win);
      var req = new win.XDomainRequest();

      req.onload = function () {
        cb(null);
      };

      req.open('POST', url);
      setTimeout(function () {
        try {
          req.send(_$jsonPayload_13.session(session, client.config.filters));
        } catch (e) {
          client._logger.error(e);

          cb(e);
        }
      }, 0);
    }
  };
};

var getApiUrl = function (config, endpoint, version, win) {
  return matchPageProtocol(config.endpoints[endpoint], win.location.protocol) + "?apiKey=" + encodeURIComponent(config.apiKey) + "&payloadVersion=" + version + "&sentAt=" + encodeURIComponent(__isoDate_26());
};

var matchPageProtocol = _$delivery_26._matchPageProtocol = function (endpoint, pageProtocol) {
  return pageProtocol === 'http:' ? endpoint.replace(/^https:/, 'http:') : endpoint;
};

/* removed: var _$jsonPayload_13 = require('@bugsnag/core/lib/json-payload'); */;

var __isoDate_27 = _$esUtils_8.isoDate;

var _$delivery_27 = function (client, win) {
  if (win === void 0) {
    win = window;
  }

  return {
    sendReport: function (report, cb) {
      if (cb === void 0) {
        cb = function () {};
      }

      try {
        var url = client.config.endpoints.notify;
        var req = new win.XMLHttpRequest();

        req.onreadystatechange = function () {
          if (req.readyState === win.XMLHttpRequest.DONE) cb(null);
        };

        req.open('POST', url);
        req.setRequestHeader('Content-Type', 'application/json');
        req.setRequestHeader('Bugsnag-Api-Key', report.apiKey || client.config.apiKey);
        req.setRequestHeader('Bugsnag-Payload-Version', '4');
        req.setRequestHeader('Bugsnag-Sent-At', __isoDate_27());
        req.send(_$jsonPayload_13.report(report, client.config.filters));
      } catch (e) {
        client._logger.error(e);
      }
    },
    sendSession: function (session, cb) {
      if (cb === void 0) {
        cb = function () {};
      }

      try {
        var url = client.config.endpoints.sessions;
        var req = new win.XMLHttpRequest();

        req.onreadystatechange = function () {
          if (req.readyState === win.XMLHttpRequest.DONE) cb(null);
        };

        req.open('POST', url);
        req.setRequestHeader('Content-Type', 'application/json');
        req.setRequestHeader('Bugsnag-Api-Key', client.config.apiKey);
        req.setRequestHeader('Bugsnag-Payload-Version', '1');
        req.setRequestHeader('Bugsnag-Sent-At', __isoDate_27());
        req.send(_$jsonPayload_13.session(session, client.config.filters));
      } catch (e) {
        client._logger.error(e);
      }
    }
  };
};

/*
 * Sets the default context to be the current URL
 */
var _$context_28 = {
  init: function (client, win) {
    if (win === void 0) {
      win = window;
    }

    client.config.beforeSend.unshift(function (report) {
      if (report.context) return;
      report.context = win.location.pathname;
    });
  }
};

function ___extends_29() { ___extends_29 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ___extends_29.apply(this, arguments); }

var __isoDate_29 = _$esUtils_8.isoDate;
/*
 * Automatically detects browser device details
 */


var _$device_29 = {
  init: function (client, nav) {
    if (nav === void 0) {
      nav = navigator;
    }

    var device = {
      locale: nav.browserLanguage || nav.systemLanguage || nav.userLanguage || nav.language,
      userAgent: nav.userAgent // merge with anything already set on the client

    };
    client.device = ___extends_29({}, device, client.device); // add time just as the report is sent

    client.config.beforeSend.unshift(function (report) {
      report.device = ___extends_29({}, report.device, {
        time: __isoDate_29()
      });
    });
  }
};

function ___extends_30() { ___extends_30 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ___extends_30.apply(this, arguments); }

/*
 * Sets the report request: { url } to be the current href
 */
var _$request_30 = {
  init: function (client, win) {
    if (win === void 0) {
      win = window;
    }

    client.config.beforeSend.unshift(function (report) {
      if (report.request && report.request.url) return;
      report.request = ___extends_30({}, report.request, {
        url: win.location.href
      });
    });
  }
};

function ___extends_31() { ___extends_31 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ___extends_31.apply(this, arguments); }

var __isArray_31 = _$esUtils_8.isArray,
    __includes_31 = _$esUtils_8.includes;

/* removed: var _$inferReleaseStage_10 = require('@bugsnag/core/lib/infer-release-stage'); */;

var _$session_31 = {
  init: function (client) {
    return client.sessionDelegate(sessionDelegate);
  }
};
var sessionDelegate = {
  startSession: function (client) {
    var sessionClient = client;
    sessionClient._session = new client.BugsnagSession();
    var releaseStage = _$inferReleaseStage_10(sessionClient); // exit early if the reports should not be sent on the current releaseStage

    if (__isArray_31(sessionClient.config.notifyReleaseStages) && !__includes_31(sessionClient.config.notifyReleaseStages, releaseStage)) {
      sessionClient._logger.warn("Session not sent due to releaseStage/notifyReleaseStages configuration");

      return sessionClient;
    }

    if (!sessionClient.config.endpoints.sessions) {
      sessionClient._logger.warn("Session not sent due to missing endpoints.sessions configuration");

      return sessionClient;
    }

    sessionClient._delivery.sendSession({
      notifier: sessionClient.notifier,
      device: sessionClient.device,
      app: ___extends_31({}, {
        releaseStage: releaseStage
      }, sessionClient.app),
      sessions: [{
        id: sessionClient._session.id,
        startedAt: sessionClient._session.startedAt,
        user: sessionClient.user
      }]
    });

    return sessionClient;
  }
};

function ___extends_32() { ___extends_32 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ___extends_32.apply(this, arguments); }

/*
 * Prevent collection of user IPs
 */
var _$clientIp_32 = {
  init: function (client) {
    if (client.config.collectUserIp) return;
    client.config.beforeSend.push(function (report) {
      // If user.id is explicitly undefined, it will be missing from the payload. It needs
      // removing so that the following line replaces it
      if (report.user && typeof report.user.id === 'undefined') delete report.user.id;
      report.user = ___extends_32({
        id: '[NOT COLLECTED]'
      }, report.user);
      report.request = ___extends_32({
        clientIp: '[NOT COLLECTED]'
      }, report.request);
    });
  },
  configSchema: {
    collectUserIp: {
      defaultValue: function () {
        return true;
      },
      message: 'should be true|false',
      validate: function (value) {
        return value === true || value === false;
      }
    }
  }
};

var _$consoleBreadcrumbs_33 = {};
var __map_33 = _$esUtils_8.map,
    __reduce_33 = _$esUtils_8.reduce,
    __filter_33 = _$esUtils_8.filter;
/*
 * Leaves breadcrumbs when console log methods are called
 */


_$consoleBreadcrumbs_33.init = function (client) {
  var isDev = /^dev(elopment)?$/.test(client.config.releaseStage);
  var explicitlyDisabled = client.config.consoleBreadcrumbsEnabled === false;
  var implicitlyDisabled = (client.config.autoBreadcrumbs === false || isDev) && client.config.consoleBreadcrumbsEnabled !== true;
  if (explicitlyDisabled || implicitlyDisabled) return;
  __map_33(CONSOLE_LOG_METHODS, function (method) {
    var original = console[method];

    console[method] = function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      client.leaveBreadcrumb('Console output', __reduce_33(args, function (accum, arg, i) {
        // do the best/simplest stringification of each argument
        var stringified = '[Unknown value]'; // this may fail if the input is:
        // - an object whose [[Prototype]] is null (no toString)
        // - an object with a broken toString or @@toPrimitive implementation

        try {
          stringified = String(arg);
        } catch (e) {} // if it stringifies to [object Object] attempt to JSON stringify


        if (stringified === '[object Object]') {
          // catch stringify errors and fallback to [object Object]
          try {
            stringified = JSON.stringify(arg);
          } catch (e) {}
        }

        accum["[" + i + "]"] = stringified;
        return accum;
      }, {
        severity: method.indexOf('group') === 0 ? 'log' : method
      }), 'log');
      original.apply(console, args);
    };

    console[method]._restore = function () {
      console[method] = original;
    };
  });
};

_$consoleBreadcrumbs_33.configSchema = {
  consoleBreadcrumbsEnabled: {
    defaultValue: function () {
      return undefined;
    },
    validate: function (value) {
      return value === true || value === false || value === undefined;
    },
    message: 'should be true|false'
  }
};

if (false) {}

var CONSOLE_LOG_METHODS = __filter_33(['log', 'debug', 'info', 'warn', 'error'], function (method) {
  return typeof console !== 'undefined' && typeof console[method] === 'function';
});

var __map_34 = _$esUtils_8.map,
    __reduce_34 = _$esUtils_8.reduce,
    __filter_34 = _$esUtils_8.filter;

var MAX_LINE_LENGTH = 200;
var MAX_SCRIPT_LENGTH = 500000;
var _$inlineScriptContent_34 = {
  init: function (client, doc, win) {
    if (doc === void 0) {
      doc = document;
    }

    if (win === void 0) {
      win = window;
    }

    if (!client.config.trackInlineScripts) return;
    var originalLocation = win.location.href;
    var html = '';
    var DOMContentLoaded = false;

    var getHtml = function () {
      return doc.documentElement.outerHTML;
    }; // get whatever HTML exists at this point in time


    html = getHtml();
    var prev = doc.onreadystatechange; // then update it when the DOM content has loaded

    doc.onreadystatechange = function () {
      // IE8 compatible alternative to document#DOMContentLoaded
      if (doc.readyState === 'interactive') {
        html = getHtml();
        DOMContentLoaded = true;
      }

      try {
        prev.apply(this, arguments);
      } catch (e) {}
    };

    var _lastScript = null;

    var updateLastScript = function (script) {
      _lastScript = script;
    };

    var getCurrentScript = function () {
      var script = doc.currentScript || _lastScript;

      if (!script && !DOMContentLoaded) {
        var scripts = doc.scripts || doc.getElementsByTagName('script');
        script = scripts[scripts.length - 1];
      }

      return script;
    };

    var addSurroundingCode = function (lineNumber) {
      // get whatever html has rendered at this point
      if (!DOMContentLoaded || !html) html = getHtml(); // simulate the raw html

      var htmlLines = ['<!-- DOC START -->'].concat(html.split('\n'));
      var zeroBasedLine = lineNumber - 1;
      var start = Math.max(zeroBasedLine - 3, 0);
      var end = Math.min(zeroBasedLine + 3, htmlLines.length);
      return __reduce_34(htmlLines.slice(start, end), function (accum, line, i) {
        accum[start + 1 + i] = line.length <= MAX_LINE_LENGTH ? line : line.substr(0, MAX_LINE_LENGTH);
        return accum;
      }, {});
    };

    client.config.beforeSend.unshift(function (report) {
      // remove any of our own frames that may be part the stack this
      // happens before the inline script check as it happens for all errors
      report.stacktrace = __filter_34(report.stacktrace, function (f) {
        return !/__trace__$/.test(f.method);
      });
      var frame = report.stacktrace[0]; // if frame.file exists and is not the original location of the page, this can't be an inline script

      if (frame && frame.file && frame.file.replace(/#.*$/, '') !== originalLocation.replace(/#.*$/, '')) return; // grab the last script known to have run

      var currentScript = getCurrentScript();

      if (currentScript) {
        var content = currentScript.innerHTML;
        report.updateMetaData('script', 'content', content.length <= MAX_SCRIPT_LENGTH ? content : content.substr(0, MAX_SCRIPT_LENGTH));
      } // only attempt to grab some surrounding code if we have a line number


      if (!frame || !frame.lineNumber) return;
      frame.code = addSurroundingCode(frame.lineNumber);
    }); // Proxy all the timer functions whose callback is their 0th argument.
    // Keep a reference to the original setTimeout because we need it later

    var _map = __map_34(['setTimeout', 'setInterval', 'setImmediate', 'requestAnimationFrame'], function (fn) {
      return __proxy(win, fn, function (original) {
        return __traceOriginalScript(original, function (args) {
          return {
            get: function () {
              return args[0];
            },
            replace: function (fn) {
              args[0] = fn;
            }
          };
        });
      });
    }),
        _setTimeout = _map[0]; // Proxy all the host objects whose prototypes have an addEventListener function


    __map_34(['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource', 'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController', 'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue', 'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestUpload'], function (o) {
      if (!win[o] || !win[o].prototype || !win[o].prototype.hasOwnProperty || !win[o].prototype.hasOwnProperty('addEventListener')) return;

      __proxy(win[o].prototype, 'addEventListener', function (original) {
        return __traceOriginalScript(original, eventTargetCallbackAccessor);
      });

      __proxy(win[o].prototype, 'removeEventListener', function (original) {
        return __traceOriginalScript(original, eventTargetCallbackAccessor, true);
      });
    });

    function __traceOriginalScript(fn, callbackAccessor, alsoCallOriginal) {
      if (alsoCallOriginal === void 0) {
        alsoCallOriginal = false;
      }

      return function () {
        // this is required for removeEventListener to remove anything added with
        // addEventListener before the functions started being wrapped by Bugsnag
        var args = Array.prototype.slice.call(arguments);

        try {
          var cba = callbackAccessor(args);
          var cb = cba.get();
          if (alsoCallOriginal) fn.apply(this, args);
          if (typeof cb !== 'function') return fn.apply(this, args);

          if (cb.__trace__) {
            cba.replace(cb.__trace__);
          } else {
            var script = getCurrentScript(); // this function mustn't be annonymous due to a bug in the stack
            // generation logic, meaning it gets tripped up
            // see: https://github.com/stacktracejs/stack-generator/issues/6

            cb.__trace__ = function __trace__() {
              // set the script that called this function
              updateLastScript(script); // immediately unset the currentScript synchronously below, however
              // if this cb throws an error the line after will not get run so schedule
              // an almost-immediate aysnc update too

              _setTimeout(function () {
                updateLastScript(null);
              }, 0);

              var ret = cb.apply(this, arguments);
              updateLastScript(null);
              return ret;
            };

            cb.__trace__.__trace__ = cb.__trace__;
            cba.replace(cb.__trace__);
          }
        } catch (e) {} // swallow these errors on Selenium:
        // Permission denied to access property '__trace__'
        // WebDriverException: Message: Permission denied to access property "handleEvent"
        // IE8 doesn't let you call .apply() on setTimeout/setInterval


        if (fn.apply) return fn.apply(this, args);

        switch (args.length) {
          case 1:
            return fn(args[0]);

          case 2:
            return fn(args[0], args[1]);

          default:
            return fn();
        }
      };
    }
  },
  configSchema: {
    trackInlineScripts: {
      validate: function (value) {
        return value === true || value === false;
      },
      defaultValue: function () {
        return true;
      },
      message: 'should be true|false'
    }
  }
};

function __proxy(host, name, replacer) {
  var original = host[name];
  if (!original) return original;
  var replacement = replacer(original);
  host[name] = replacement;
  return original;
}

function eventTargetCallbackAccessor(args) {
  var isEventHandlerObj = !!args[1] && typeof args[1].handleEvent === 'function';
  return {
    get: function () {
      return isEventHandlerObj ? args[1].handleEvent : args[1];
    },
    replace: function (fn) {
      if (isEventHandlerObj) {
        args[1].handleEvent = fn;
      } else {
        args[1] = fn;
      }
    }
  };
}

/*
 * Leaves breadcrumbs when the user interacts with the DOM
 */
var _$interactionBreadcrumbs_35 = {
  init: function (client, win) {
    if (win === void 0) {
      win = window;
    }

    if (!('addEventListener' in win)) return;
    var explicitlyDisabled = client.config.interactionBreadcrumbsEnabled === false;
    var implicitlyDisabled = client.config.autoBreadcrumbs === false && client.config.interactionBreadcrumbsEnabled !== true;
    if (explicitlyDisabled || implicitlyDisabled) return;
    win.addEventListener('click', function (event) {
      var targetText, targetSelector;

      try {
        targetText = getNodeText(event.target);
        targetSelector = getNodeSelector(event.target, win);
      } catch (e) {
        targetText = '[hidden]';
        targetSelector = '[hidden]';

        client._logger.error('Cross domain error when tracking click event. See docs: https://tinyurl.com/yy3rn63z');
      }

      client.leaveBreadcrumb('UI click', {
        targetText: targetText,
        targetSelector: targetSelector
      }, 'user');
    }, true);
  },
  configSchema: {
    interactionBreadcrumbsEnabled: {
      defaultValue: function () {
        return undefined;
      },
      validate: function (value) {
        return value === true || value === false || value === undefined;
      },
      message: 'should be true|false'
    }
  } // extract text content from a element

};

var getNodeText = function (el) {
  var text = el.textContent || el.innerText || '';
  if (!text && (el.type === 'submit' || el.type === 'button')) text = el.value;
  text = text.replace(/^\s+|\s+$/g, ''); // trim whitespace

  return truncate(text, 140);
}; // Create a label from tagname, id and css class of the element


function getNodeSelector(el, win) {
  var parts = [el.tagName];
  if (el.id) parts.push('#' + el.id);
  if (el.className && el.className.length) parts.push("." + el.className.split(' ').join('.')); // Can't get much more advanced with the current browser

  if (!win.document.querySelectorAll || !Array.prototype.indexOf) return parts.join('');

  try {
    if (win.document.querySelectorAll(parts.join('')).length === 1) return parts.join('');
  } catch (e) {
    // Sometimes the query selector can be invalid just return it as-is
    return parts.join('');
  } // try to get a more specific selector if this one matches more than one element


  if (el.parentNode.childNodes.length > 1) {
    var index = Array.prototype.indexOf.call(el.parentNode.childNodes, el) + 1;
    parts.push(":nth-child(" + index + ")");
  }

  if (win.document.querySelectorAll(parts.join('')).length === 1) return parts.join(''); // try prepending the parent node selector

  if (el.parentNode) return getNodeSelector(el.parentNode, win) + " > " + parts.join('');
  return parts.join('');
}

function truncate(value, length) {
  var ommision = '(...)';
  if (value && value.length <= length) return value;
  return value.slice(0, length - ommision.length) + ommision;
}

var _$navigationBreadcrumbs_36 = {};
/*
 * Leaves breadcrumbs when navigation methods are called or events are emitted
 */
_$navigationBreadcrumbs_36.init = function (client, win) {
  if (win === void 0) {
    win = window;
  }

  if (!('addEventListener' in win)) return;
  var explicitlyDisabled = client.config.navigationBreadcrumbsEnabled === false;
  var implicitlyDisabled = client.config.autoBreadcrumbs === false && client.config.navigationBreadcrumbsEnabled !== true;
  if (explicitlyDisabled || implicitlyDisabled) return; // returns a function that will drop a breadcrumb with a given name

  var drop = function (name) {
    return function () {
      return client.leaveBreadcrumb(name, {}, 'navigation');
    };
  }; // simple drops – just names, no meta


  win.addEventListener('pagehide', drop('Page hidden'), true);
  win.addEventListener('pageshow', drop('Page shown'), true);
  win.addEventListener('load', drop('Page loaded'), true);
  win.document.addEventListener('DOMContentLoaded', drop('DOMContentLoaded'), true); // some browsers like to emit popstate when the page loads, so only add the popstate listener after that

  win.addEventListener('load', function () {
    return win.addEventListener('popstate', drop('Navigated back'), true);
  }); // hashchange has some metaData that we care about

  win.addEventListener('hashchange', function (event) {
    var metaData = event.oldURL ? {
      from: relativeLocation(event.oldURL, win),
      to: relativeLocation(event.newURL, win),
      state: getCurrentState(win)
    } : {
      to: relativeLocation(win.location.href, win)
    };
    client.leaveBreadcrumb('Hash changed', metaData, 'navigation');
  }, true); // the only way to know about replaceState/pushState is to wrap them… >_<

  if (win.history.replaceState) wrapHistoryFn(client, win.history, 'replaceState', win);
  if (win.history.pushState) wrapHistoryFn(client, win.history, 'pushState', win);
  client.leaveBreadcrumb('Bugsnag loaded', {}, 'navigation');
};

_$navigationBreadcrumbs_36.configSchema = {
  navigationBreadcrumbsEnabled: {
    defaultValue: function () {
      return undefined;
    },
    validate: function (value) {
      return value === true || value === false || value === undefined;
    },
    message: 'should be true|false'
  }
};

if (false) {} // takes a full url like http://foo.com:1234/pages/01.html?yes=no#section-2 and returns
// just the path and hash parts, e.g. /pages/01.html?yes=no#section-2


var relativeLocation = function (url, win) {
  var a = win.document.createElement('A');
  a.href = url;
  return "" + a.pathname + a.search + a.hash;
};

var stateChangeToMetaData = function (win, state, title, url) {
  var currentPath = relativeLocation(win.location.href, win);
  return {
    title: title,
    state: state,
    prevState: getCurrentState(win),
    to: url || currentPath,
    from: currentPath
  };
};

var wrapHistoryFn = function (client, target, fn, win) {
  var orig = target[fn];

  target[fn] = function (state, title, url) {
    client.leaveBreadcrumb("History " + fn, stateChangeToMetaData(win, state, title, url), 'navigation'); // if throttle plugin is in use, refresh the event sent count

    if (typeof client.refresh === 'function') client.refresh(); // if the client is operating in auto session-mode, a new route should trigger a new session

    if (client.config.autoCaptureSessions) client.startSession(); // Internet Explorer will convert `undefined` to a string when passed, causing an unintended redirect
    // to '/undefined'. therefore we only pass the url if it's not undefined.

    orig.apply(target, [state, title].concat(url !== undefined ? url : []));
  };

  if (false) {}
};

var getCurrentState = function (win) {
  try {
    return win.history.state;
  } catch (e) {}
};

var _$networkBreadcrumbs_37 = {};
var BREADCRUMB_TYPE = 'request'; // keys to safely store metadata on the request object

var REQUEST_SETUP_KEY = 'BS~~S';
var REQUEST_URL_KEY = 'BS~~U';
var REQUEST_METHOD_KEY = 'BS~~M';

var __includes_37 = _$esUtils_8.includes;

var restoreFunctions = [];
var client;
var win;
var getIgnoredUrls;

var defaultIgnoredUrls = function () {
  return [client.config.endpoints.notify, client.config.endpoints.sessions];
};
/*
 * Leaves breadcrumbs when network requests occur
 */


_$networkBreadcrumbs_37.name = 'networkBreadcrumbs';

_$networkBreadcrumbs_37.init = function (_client, _getIgnoredUrls, _win) {
  if (_getIgnoredUrls === void 0) {
    _getIgnoredUrls = defaultIgnoredUrls;
  }

  if (_win === void 0) {
    _win = window;
  }

  var explicitlyDisabled = _client.config.networkBreadcrumbsEnabled === false;
  var implicitlyDisabled = _client.config.autoBreadcrumbs === false && _client.config.networkBreadcrumbsEnabled !== true;
  if (explicitlyDisabled || implicitlyDisabled) return;
  client = _client;
  win = _win;
  getIgnoredUrls = _getIgnoredUrls;
  monkeyPatchXMLHttpRequest();
  monkeyPatchFetch();
};

_$networkBreadcrumbs_37.configSchema = {
  networkBreadcrumbsEnabled: {
    defaultValue: function () {
      return undefined;
    },
    validate: function (value) {
      return value === true || value === false || value === undefined;
    },
    message: 'should be true|false'
  }
};

if (false) {} // XMLHttpRequest monkey patch


var monkeyPatchXMLHttpRequest = function () {
  if (!('addEventListener' in win.XMLHttpRequest.prototype)) return;
  var nativeOpen = win.XMLHttpRequest.prototype.open; // override native open()

  win.XMLHttpRequest.prototype.open = function open(method, url) {
    // store url and HTTP method for later
    this[REQUEST_URL_KEY] = url;
    this[REQUEST_METHOD_KEY] = method; // if we have already setup listeners, it means open() was called twice, we need to remove
    // the listeners and recreate them

    if (this[REQUEST_SETUP_KEY]) {
      this.removeEventListener('load', handleXHRLoad);
      this.removeEventListener('error', handleXHRError);
    } // attach load event listener


    this.addEventListener('load', handleXHRLoad); // attach error event listener

    this.addEventListener('error', handleXHRError);
    this[REQUEST_SETUP_KEY] = true;
    nativeOpen.apply(this, arguments);
  };

  if (false) {}
};

function handleXHRLoad() {
  if (__includes_37(getIgnoredUrls(), this[REQUEST_URL_KEY])) {
    // don't leave a network breadcrumb from bugsnag notify calls
    return;
  }

  var metaData = {
    status: this.status,
    request: this[REQUEST_METHOD_KEY] + " " + this[REQUEST_URL_KEY]
  };

  if (this.status >= 400) {
    // contacted server but got an error response
    client.leaveBreadcrumb('XMLHttpRequest failed', metaData, BREADCRUMB_TYPE);
  } else {
    client.leaveBreadcrumb('XMLHttpRequest succeeded', metaData, BREADCRUMB_TYPE);
  }
}

function handleXHRError() {
  if (__includes_37(getIgnoredUrls, this[REQUEST_URL_KEY])) {
    // don't leave a network breadcrumb from bugsnag notify calls
    return;
  } // failed to contact server


  client.leaveBreadcrumb('XMLHttpRequest error', {
    request: this[REQUEST_METHOD_KEY] + " " + this[REQUEST_URL_KEY]
  }, BREADCRUMB_TYPE);
} // window.fetch monkey patch


var monkeyPatchFetch = function () {
  // only patch it if it exists and if it is not a polyfill (patching a polyfilled
  // fetch() results in duplicate breadcrumbs for the same request because the
  // implementation uses XMLHttpRequest which is also patched)
  if (!('fetch' in win) || win.fetch.polyfill) return;
  var oldFetch = win.fetch;

  win.fetch = function fetch() {
    var _arguments = arguments;
    var urlOrRequest = arguments[0];
    var options = arguments[1];
    var method;
    var url = null;

    if (urlOrRequest && typeof urlOrRequest === 'object') {
      url = urlOrRequest.url;

      if (options && 'method' in options) {
        method = options.method;
      } else if (urlOrRequest && 'method' in urlOrRequest) {
        method = urlOrRequest.method;
      }
    } else {
      url = urlOrRequest;

      if (options && 'method' in options) {
        method = options.method;
      }
    }

    if (method === undefined) {
      method = 'GET';
    }

    return new Promise(function (resolve, reject) {
      // pass through to native fetch
      oldFetch.apply(void 0, _arguments).then(function (response) {
        handleFetchSuccess(response, method, url);
        resolve(response);
      })["catch"](function (error) {
        handleFetchError(method, url);
        reject(error);
      });
    });
  };

  if (false) {}
};

var handleFetchSuccess = function (response, method, url) {
  var metaData = {
    status: response.status,
    request: method + " " + url
  };

  if (response.status >= 400) {
    // when the request comes back with a 4xx or 5xx status it does not reject the fetch promise,
    client.leaveBreadcrumb('fetch() failed', metaData, BREADCRUMB_TYPE);
  } else {
    client.leaveBreadcrumb('fetch() succeeded', metaData, BREADCRUMB_TYPE);
  }
};

var handleFetchError = function (method, url) {
  client.leaveBreadcrumb('fetch() error', {
    request: method + " " + url
  }, BREADCRUMB_TYPE);
};

var __intRange_38 = _$validators_15.intRange;
/*
 * Throttles and dedupes error reports
 */


var _$throttle_38 = {
  init: function (client) {
    // track sent events for each init of the plugin
    var n = 0; // add beforeSend hook

    client.config.beforeSend.push(function (report) {
      // have max events been sent already?
      if (n >= client.config.maxEvents) return report.ignore();
      n++;
    });

    client.refresh = function () {
      n = 0;
    };
  },
  configSchema: {
    maxEvents: {
      defaultValue: function () {
        return 10;
      },
      message: 'should be a positive integer ≤100',
      validate: function (val) {
        return __intRange_38(1, 100)(val);
      }
    }
  }
};

var _$stripQueryString_39 = {};
function ___extends_39() { ___extends_39 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ___extends_39.apply(this, arguments); }

/*
 * Remove query strings (and fragments) from stacktraces
 */
var __map_39 = _$esUtils_8.map;

_$stripQueryString_39 = {
  init: function (client) {
    client.config.beforeSend.push(function (report) {
      report.stacktrace = __map_39(report.stacktrace, function (frame) {
        return ___extends_39({}, frame, {
          file: strip(frame.file)
        });
      });
    });
  }
};

var strip = _$stripQueryString_39._strip = function (str) {
  return typeof str === 'string' ? str.replace(/\?.*$/, '').replace(/#.*$/, '') : str;
};

/*
 * Automatically notifies Bugsnag when window.onerror is called
 */
var _$onerror_40 = {
  init: function (client, win) {
    if (win === void 0) {
      win = window;
    }

    function onerror(messageOrEvent, url, lineNo, charNo, error) {
      // Ignore errors with no info due to CORS settings
      if (lineNo === 0 && /Script error\.?/.test(messageOrEvent)) {
        client._logger.warn('Ignoring cross-domain or eval script error. See docs: https://tinyurl.com/yy3rn63z');
      } else {
        // any error sent to window.onerror is unhandled and has severity=error
        var handledState = {
          severity: 'error',
          unhandled: true,
          severityReason: {
            type: 'unhandledException'
          }
        };
        var report; // window.onerror can be called in a number of ways. This big if-else is how we
        // figure out which arguments were supplied, and what kind of values it received.

        if (error) {
          // if the last parameter (error) was supplied, this is a modern browser's
          // way of saying "this value was thrown and not caught"
          if (error.name && error.message) {
            // if it looks like an error, construct a report object using its stack
            report = new client.BugsnagReport(error.name, error.message, decorateStack(client.BugsnagReport.getStacktrace(error), url, lineNo, charNo), handledState, error);
          } else {
            // otherwise, for non error values that were thrown, stringify it for
            // use as the error message and get/generate a stacktrace
            report = new client.BugsnagReport('window.onerror', String(error), decorateStack(client.BugsnagReport.getStacktrace(error, 1), url, lineNo, charNo), handledState, error); // include the raw input as metadata

            report.updateMetaData('window onerror', {
              error: error
            });
          }
        } else if ( // This complex case detects "error" events that are typically synthesised
        // by jquery's trigger method (although can be created in other ways). In
        // order to detect this:
        // - the first argument (message) must exist and be an object (most likely it's a jQuery event)
        // - the second argument (url) must either not exist or be something other than a string (if it
        //    exists and is not a string, it'll be the extraParameters argument from jQuery's trigger()
        //    function)
        // - the third, fourth and fifth arguments must not exist (lineNo, charNo and error)
        typeof messageOrEvent === 'object' && messageOrEvent !== null && (!url || typeof url !== 'string') && !lineNo && !charNo && !error) {
          // The jQuery event may have a "type" property, if so use it as part of the error message
          var name = messageOrEvent.type ? "Event: " + messageOrEvent.type : 'window.onerror'; // attempt to find a message from one of the conventional properties, but
          // default to empty string (the report will fill it with a placeholder)

          var message = messageOrEvent.message || messageOrEvent.detail || '';
          report = new client.BugsnagReport(name, message, client.BugsnagReport.getStacktrace(new Error(), 1).slice(1), handledState, messageOrEvent); // include the raw input as metadata – it might contain more info than we extracted

          report.updateMetaData('window onerror', {
            event: messageOrEvent,
            extraParameters: url
          });
        } else {
          // Lastly, if there was no "error" parameter this event was probably from an old
          // browser that doesn't support that. Instead we need to generate a stacktrace.
          report = new client.BugsnagReport('window.onerror', String(messageOrEvent), decorateStack(client.BugsnagReport.getStacktrace(error, 1), url, lineNo, charNo), handledState, messageOrEvent); // include the raw input as metadata – it might contain more info than we extracted

          report.updateMetaData('window onerror', {
            event: messageOrEvent
          });
        }

        client.notify(report);
      }

      if (typeof prevOnError === 'function') prevOnError.apply(this, arguments);
    }

    var prevOnError = win.onerror;
    win.onerror = onerror;
  } // Sometimes the stacktrace has less information than was passed to window.onerror.
  // This function will augment the first stackframe with any useful info that was
  // received as arguments to the onerror callback.

};

var decorateStack = function (stack, url, lineNo, charNo) {
  var culprit = stack[0];
  if (!culprit) return stack;
  if (!culprit.fileName && typeof url === 'string') culprit.setFileName(url);
  if (!culprit.lineNumber && isActualNumber(lineNo)) culprit.setLineNumber(lineNo);

  if (!culprit.columnNumber) {
    if (isActualNumber(charNo)) {
      culprit.setColumnNumber(charNo);
    } else if (window.event && isActualNumber(window.event.errorCharacter)) {
      culprit.setColumnNumber(window.event.errorCharacter);
    }
  }

  return stack;
};

var isActualNumber = function (n) {
  return typeof n === 'number' && String.call(n) !== 'NaN';
};

var _$unhandledRejection_41 = {};
/* removed: var _$hasStack_9 = require('@bugsnag/core/lib/has-stack'); */;

var __reduce_41 = _$esUtils_8.reduce;

/* removed: var _$errorStackParser_7 = require('@bugsnag/core/lib/error-stack-parser'); */;

/* removed: var _$iserror_11 = require('@bugsnag/core/lib/iserror'); */;
/*
 * Automatically notifies Bugsnag when window.onunhandledrejection is called
 */


var _listener;

_$unhandledRejection_41.init = function (client, win) {
  if (win === void 0) {
    win = window;
  }

  var listener = function (event) {
    var error = event.reason;
    var isBluebird = false; // accessing properties on event.detail can throw errors (see #394)

    try {
      if (event.detail && event.detail.reason) {
        error = event.detail.reason;
        isBluebird = true;
      }
    } catch (e) {}

    var handledState = {
      severity: 'error',
      unhandled: true,
      severityReason: {
        type: 'unhandledPromiseRejection'
      }
    };
    var report;

    if (error && _$hasStack_9(error)) {
      // if it quacks like an Error…
      report = new client.BugsnagReport(error.name, error.message, _$errorStackParser_7.parse(error), handledState, error);

      if (isBluebird) {
        report.stacktrace = __reduce_41(report.stacktrace, fixBluebirdStacktrace(error), []);
      }
    } else {
      // if it doesn't…
      var msg = 'Rejection reason was not an Error. See "Promise" tab for more detail.';
      report = new client.BugsnagReport(error && error.name ? error.name : 'UnhandledRejection', error && error.message ? error.message : msg, [], handledState, error); // stuff the rejection reason into metaData, it could be useful

      report.updateMetaData('promise', 'rejection reason', serializableReason(error));
    }

    client.notify(report);
  };

  if ('addEventListener' in win) {
    win.addEventListener('unhandledrejection', listener);
  } else {
    win.onunhandledrejection = function (reason, promise) {
      listener({
        detail: {
          reason: reason,
          promise: promise
        }
      });
    };
  }

  _listener = listener;
};

if (false) {}

var serializableReason = function (err) {
  if (err === null || err === undefined) {
    return 'undefined (or null)';
  } else if (_$iserror_11(err)) {
    var _ref;

    return _ref = {}, _ref[Object.prototype.toString.call(err)] = {
      name: err.name,
      message: err.message,
      code: err.code,
      stack: err.stack
    }, _ref;
  } else {
    return err;
  }
}; // The stack parser on bluebird stacks in FF get a suprious first frame:
//
// Error: derp
//   b@http://localhost:5000/bluebird.html:22:24
//   a@http://localhost:5000/bluebird.html:18:9
//   @http://localhost:5000/bluebird.html:14:9
//
// results in
//   […]
//     0: Object { file: "Error: derp", method: undefined, lineNumber: undefined, … }
//     1: Object { file: "http://localhost:5000/bluebird.html", method: "b", lineNumber: 22, … }
//     2: Object { file: "http://localhost:5000/bluebird.html", method: "a", lineNumber: 18, … }
//     3: Object { file: "http://localhost:5000/bluebird.html", lineNumber: 14, columnNumber: 9, … }
//
// so the following reduce/accumulator function removes such frames
//
// Bluebird pads method names with spaces so trim that too…
// https://github.com/petkaantonov/bluebird/blob/b7f21399816d02f979fe434585334ce901dcaf44/src/debuggability.js#L568-L571


var fixBluebirdStacktrace = function (error) {
  return function (accum, frame) {
    if (frame.file === error.toString()) return accum;

    if (frame.method) {
      frame.method = frame.method.replace(/^\s+/, '');
    }

    return accum.concat(frame);
  };
};

var _$notifier_2 = {};
function ___extends_2() { ___extends_2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ___extends_2.apply(this, arguments); }

var name = 'Bugsnag JavaScript';
var version = '6.5.2';
var url = 'https://github.com/bugsnag/bugsnag-js';

/* removed: var _$BugsnagClient_4 = require('@bugsnag/core/client'); */;

/* removed: var _$BugsnagReport_24 = require('@bugsnag/core/report'); */;

/* removed: var _$Session_25 = require('@bugsnag/core/session'); */;

/* removed: var _$BugsnagBreadcrumb_3 = require('@bugsnag/core/breadcrumb'); */; // extend the base config schema with some browser-specific options


var __schema_2 = ___extends_2({}, _$config_5.schema, _$config_1);

/* removed: var _$onerror_40 = require('@bugsnag/plugin-window-onerror'); */;

/* removed: var _$unhandledRejection_41 = require('@bugsnag/plugin-window-unhandled-rejection'); */;

/* removed: var _$device_29 = require('@bugsnag/plugin-browser-device'); */;

/* removed: var _$context_28 = require('@bugsnag/plugin-browser-context'); */;

/* removed: var _$request_30 = require('@bugsnag/plugin-browser-request'); */;

/* removed: var _$throttle_38 = require('@bugsnag/plugin-simple-throttle'); */;

/* removed: var _$consoleBreadcrumbs_33 = require('@bugsnag/plugin-console-breadcrumbs'); */;

/* removed: var _$networkBreadcrumbs_37 = require('@bugsnag/plugin-network-breadcrumbs'); */;

/* removed: var _$navigationBreadcrumbs_36 = require('@bugsnag/plugin-navigation-breadcrumbs'); */;

/* removed: var _$interactionBreadcrumbs_35 = require('@bugsnag/plugin-interaction-breadcrumbs'); */;

/* removed: var _$inlineScriptContent_34 = require('@bugsnag/plugin-inline-script-content'); */;

/* removed: var _$session_31 = require('@bugsnag/plugin-browser-session'); */;

/* removed: var _$clientIp_32 = require('@bugsnag/plugin-client-ip'); */;

/* removed: var _$stripQueryString_39 = require('@bugsnag/plugin-strip-query-string'); */; // delivery mechanisms


/* removed: var _$delivery_26 = require('@bugsnag/delivery-x-domain-request'); */;

/* removed: var _$delivery_27 = require('@bugsnag/delivery-xml-http-request'); */;

_$notifier_2 = function (opts) {
  // handle very simple use case where user supplies just the api key as a string
  if (typeof opts === 'string') opts = {
    apiKey: opts // support renamed/deprecated options

  };
  var warningMessage = '';

  if (opts.endpoints && opts.endpoints.notify && !opts.endpoints.sessions) {
    warningMessage += 'notify endpoint is set but sessions endpoint is not. No sessions will be sent.';
  }

  var bugsnag = new _$BugsnagClient_4({
    name: name,
    version: version,
    url: url
  });
  bugsnag.setOptions(opts); // set delivery based on browser capability (IE 8+9 have an XDomainRequest object)

  bugsnag.delivery(window.XDomainRequest ? _$delivery_26 : _$delivery_27); // configure with user supplied options
  // errors can be thrown here that prevent the lib from being in a useable state

  bugsnag.configure(__schema_2);
  if (warningMessage) bugsnag._logger.warn(warningMessage); // always-on browser-specific plugins

  bugsnag.use(_$device_29);
  bugsnag.use(_$context_28);
  bugsnag.use(_$request_30);
  bugsnag.use(_$throttle_38);
  bugsnag.use(_$session_31);
  bugsnag.use(_$clientIp_32);
  bugsnag.use(_$stripQueryString_39); // optional browser-specific plugins

  if (bugsnag.config.autoNotify !== false) {
    bugsnag.use(_$onerror_40);
    bugsnag.use(_$unhandledRejection_41);
  }

  bugsnag.use(_$navigationBreadcrumbs_36);
  bugsnag.use(_$interactionBreadcrumbs_35);
  bugsnag.use(_$networkBreadcrumbs_37);
  bugsnag.use(_$consoleBreadcrumbs_33); // this one added last to avoid wrapping functionality before bugsnag uses it

  bugsnag.use(_$inlineScriptContent_34);

  bugsnag._logger.debug("Loaded!");

  return bugsnag.config.autoCaptureSessions ? bugsnag.startSession() : bugsnag;
}; // Angular's DI system needs this interface to match what is exposed
// in the type definition file (types/bugsnag.d.ts)


_$notifier_2.Bugsnag = {
  Client: _$BugsnagClient_4,
  Report: _$BugsnagReport_24,
  Session: _$Session_25,
  Breadcrumb: _$BugsnagBreadcrumb_3 // Export a "default" property for compatibility with ESM imports

};
_$notifier_2['default'] = _$notifier_2;

return _$notifier_2;

});
//# sourceMappingURL=bugsnag.js.map


/***/ }),

/***/ "./node_modules/@bugsnag/js/browser/notifier.js":
/*!******************************************************!*\
  !*** ./node_modules/@bugsnag/js/browser/notifier.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! @bugsnag/browser */ "./node_modules/@bugsnag/browser/dist/bugsnag.js")


/***/ }),

/***/ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerModule.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerModule.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AdBlockerModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const AdBlockerTypes_1 = __webpack_require__(/*! ./AdBlockerTypes */ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerTypes.js");
const AdBlockerService_1 = __webpack_require__(/*! ./AdBlockerService */ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerService.js");
const ProxyActivated_1 = __webpack_require__(/*! ./listeners/internal/ProxyActivated */ "./node_modules/@urbandevs/mario-ad-blocker/dist/listeners/internal/ProxyActivated.js");
const ProxyDeactivated_1 = __webpack_require__(/*! ./listeners/internal/ProxyDeactivated */ "./node_modules/@urbandevs/mario-ad-blocker/dist/listeners/internal/ProxyDeactivated.js");
class AdBlockerModule extends src_1.MarioModule {
    name() {
        return 'AdBlockerModule';
    }
    static use(mario, options) {
        return mario.registerModule(AdBlockerModule, options);
    }
    register(options) {
        this.mario().container().bind(AdBlockerTypes_1.AdBlockerTypes.AD_BLOCKER_OPTION_DATA_COLLECTION).toConstantValue(options.dataCollection);
        this.mario().registerService(AdBlockerTypes_1.AdBlockerTypes.AD_BLOCKER_SERVICE, AdBlockerService_1.AdBlockerService);
        const adBlocker = this.mario().getService(AdBlockerTypes_1.AdBlockerTypes.AD_BLOCKER_SERVICE);
        options.dataCollection ? adBlocker.enableDataCollection() : adBlocker.disableDataCollection();
        if (options.subscribeOnProxyEvents) {
            this.mario().internalDispatcher().on(ProxyActivated_1.ProxyActivated);
            this.mario().internalDispatcher().on(ProxyDeactivated_1.ProxyDeactivated);
        }
        return;
    }
}
exports.AdBlockerModule = AdBlockerModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerService.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerService.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdBlockerService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const AdType_1 = __webpack_require__(/*! ./AdType */ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdType.js");
const AdStatus_1 = __webpack_require__(/*! ./AdStatus */ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdStatus.js");
const globalAny = global;
let AdBlockerService = class AdBlockerService {
    constructor(logger, tabService) {
        this.logger = logger;
        this.tabService = tabService;
    }
    updateConfig() {
        this.logger.log(`AdBlocker: update config`);
        globalAny.window.UpdatePanelOSConfig();
    }
    activateAdBlocker() {
        this.logger.log(`AdBlocker: activate`);
        globalAny.window.ActivatePanelOS();
    }
    deactivateAdBloker() {
        this.logger.log(`AdBlocker: deactivate`);
        globalAny.window.DeactivatePanelOS();
    }
    getAdBlockerStatus() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                globalAny.window.GetAdBlockerStatus((status) => resolve(status), (error) => reject(error));
            });
        });
    }
    isFacebookAdBlockerEnabled() {
        return __awaiter(this, void 0, void 0, function* () {
            const status = yield this.getAdBlockerStatus();
            return status.FACEBOOK === AdStatus_1.AdStatus.ENABLED;
        });
    }
    isDisplayAdBlockerEnabled() {
        return __awaiter(this, void 0, void 0, function* () {
            const status = yield this.getAdBlockerStatus();
            return status.DISPLAY === AdStatus_1.AdStatus.ENABLED;
        });
    }
    isTwitterAdBlockerEnabled() {
        return __awaiter(this, void 0, void 0, function* () {
            const status = yield this.getAdBlockerStatus();
            return status.TWITTER === AdStatus_1.AdStatus.ENABLED;
        });
    }
    isFacebookAdBlockerDisabled() {
        return __awaiter(this, void 0, void 0, function* () {
            const status = yield this.getAdBlockerStatus();
            return status.FACEBOOK === AdStatus_1.AdStatus.DISABLED;
        });
    }
    isDisplayAdBlockerDisabled() {
        return __awaiter(this, void 0, void 0, function* () {
            const status = yield this.getAdBlockerStatus();
            return status.DISPLAY === AdStatus_1.AdStatus.DISABLED;
        });
    }
    isTwitterAdBlockerDisabled() {
        return __awaiter(this, void 0, void 0, function* () {
            const status = yield this.getAdBlockerStatus();
            return status.TWITTER === AdStatus_1.AdStatus.DISABLED;
        });
    }
    enableAdBlocker(adTypes) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                globalAny.window.EnableAdBlocker((status) => resolve(status), (error) => reject(error), adTypes);
            });
        });
    }
    disableAdBlocker(adTypes) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                globalAny.window.DisableAdBlocker((status) => resolve(status), (error) => reject(error), adTypes);
            });
        });
    }
    enableFacebookAdBlocker() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.enableAdBlocker([AdType_1.AdType.FACEBOOK]);
        });
    }
    enableDisplayAdBlocker() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.enableAdBlocker([AdType_1.AdType.DISPLAY]);
        });
    }
    enableTwitterAdBlocker() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.enableAdBlocker([AdType_1.AdType.TWITTER]);
        });
    }
    disableFacebookAdBlocker() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.disableAdBlocker([AdType_1.AdType.FACEBOOK]);
        });
    }
    disableDisplayAdBlocker() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.disableAdBlocker([AdType_1.AdType.DISPLAY]);
        });
    }
    disableTwitterAdBlocker() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.disableAdBlocker([AdType_1.AdType.TWITTER]);
        });
    }
    getAdBlockerCounters(tabId) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                globalAny.window.GetAdBlockerCounters((counter) => resolve(counter), (error) => reject(error), tabId);
            });
        });
    }
    getAdBlockerCountersForActiveTab() {
        return __awaiter(this, void 0, void 0, function* () {
            const tabs = yield this.tabService.query({ active: true, currentWindow: true });
            if (tabs.length === 0) {
                return {
                    currentPageTotal: 0,
                    currentSessionTotal: 0,
                };
            }
            const currentTab = tabs[0];
            return this.getAdBlockerCounters(currentTab.id);
        });
    }
    enableDataCollection() {
        this.logger.log(`AdBlocker: enable data collection`);
        return new Promise((resolve, reject) => {
            globalAny.window.EnableDataCollection(() => resolve(), (error) => reject(error));
        });
    }
    disableDataCollection() {
        this.logger.log(`AdBlocker: disable data collection`);
        return new Promise((resolve, reject) => {
            globalAny.window.DisableDataCollection(() => resolve(), (error) => reject(error));
        });
    }
    isDataCollectionEnabled() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                globalAny.window.GetDataCollectionStatus((status) => resolve(status), (error) => reject(error));
            });
        });
    }
    getExcludeList(listType) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                globalAny.window.GetExcludeList((items) => resolve(items), (error) => reject(error), listType);
            });
        });
    }
    hasItemInExcludeList(listType, item) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                globalAny.window.HasItemInExcludeList((has) => resolve(has), (error) => reject(error), listType, item);
            });
        });
    }
    addIntoExcludeList(listType, item) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                globalAny.window.AddIntoExcludeList(() => resolve(), (error) => reject(error), listType, item);
            });
        });
    }
    removeFromExcludeList(listType, item) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                globalAny.window.RemoveFromExcludeList(() => resolve(), (error) => reject(error), listType, item);
            });
        });
    }
    addCurrentDomainIntoExcludeList() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                globalAny.window.AddCurrentDomainIntoExcludeList((item) => resolve(item), (error) => reject(error));
            });
        });
    }
    addCurrentPageIntoExcludeList() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                globalAny.window.AddCurrentPageIntoExcludeList((item) => resolve(item), (error) => reject(error));
            });
        });
    }
};
AdBlockerService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.TAB_SERVICE)),
    __metadata("design:paramtypes", [Object, Object])
], AdBlockerService);
exports.AdBlockerService = AdBlockerService;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerTypes.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerTypes.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AdBlockerTypes = void 0;
const AdBlockerTypes = {
    AD_BLOCKER_OPTION_DATA_COLLECTION: Symbol.for('AD_BLOCKER_OPTION_DATA_COLLECTION'),
    AD_BLOCKER_SERVICE: Symbol.for('AD_BLOCKER_SERVICE'),
};
exports.AdBlockerTypes = AdBlockerTypes;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdStatus.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-ad-blocker/dist/AdStatus.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AdStatus = void 0;
var AdStatus;
(function (AdStatus) {
    AdStatus["ENABLED"] = "enabled";
    AdStatus["DISABLED"] = "disabled";
})(AdStatus = exports.AdStatus || (exports.AdStatus = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdType.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-ad-blocker/dist/AdType.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AdType = void 0;
var AdType;
(function (AdType) {
    AdType["DISPLAY"] = "DISPLAY";
    AdType["FACEBOOK"] = "FACEBOOK";
    AdType["TWITTER"] = "TWITTER";
})(AdType = exports.AdType || (exports.AdType = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-ad-blocker/dist/listeners/internal/ProxyActivated.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-ad-blocker/dist/listeners/internal/ProxyActivated.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyActivated = void 0;
const ProxyEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Proxy/Bg/ProxyEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Proxy/Bg/ProxyEvents.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const AdBlockerTypes_1 = __webpack_require__(/*! ../../AdBlockerTypes */ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerTypes.js");
const AdBlockerService_1 = __webpack_require__(/*! ../../AdBlockerService */ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerService.js");
let ProxyActivated = class ProxyActivated {
    constructor(service) {
        this.service = service;
    }
    on() {
        return ProxyEvents_1.ProxyEvents.PROXY_AFTER_CONNECT;
    }
    handle(event) {
        this.service.updateConfig();
        return;
    }
};
ProxyActivated = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(AdBlockerTypes_1.AdBlockerTypes.AD_BLOCKER_SERVICE)),
    __metadata("design:paramtypes", [AdBlockerService_1.AdBlockerService])
], ProxyActivated);
exports.ProxyActivated = ProxyActivated;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-ad-blocker/dist/listeners/internal/ProxyDeactivated.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-ad-blocker/dist/listeners/internal/ProxyDeactivated.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyDeactivated = void 0;
const ProxyEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Proxy/Bg/ProxyEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Proxy/Bg/ProxyEvents.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const AdBlockerTypes_1 = __webpack_require__(/*! ../../AdBlockerTypes */ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerTypes.js");
const AdBlockerService_1 = __webpack_require__(/*! ../../AdBlockerService */ "./node_modules/@urbandevs/mario-ad-blocker/dist/AdBlockerService.js");
let ProxyDeactivated = class ProxyDeactivated {
    constructor(service) {
        this.service = service;
    }
    on() {
        return ProxyEvents_1.ProxyEvents.DIRECT_AFTER_CONNECT;
    }
    handle(event) {
        this.service.updateConfig();
        return;
    }
};
ProxyDeactivated = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(AdBlockerTypes_1.AdBlockerTypes.AD_BLOCKER_SERVICE)),
    __metadata("design:paramtypes", [AdBlockerService_1.AdBlockerService])
], ProxyDeactivated);
exports.ProxyDeactivated = ProxyDeactivated;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-bugsnag/dist/BugsnagModule.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-bugsnag/dist/BugsnagModule.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BugsnagModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const BugsnagService_1 = __webpack_require__(/*! ./BugsnagService */ "./node_modules/@urbandevs/mario-bugsnag/dist/BugsnagService.js");
const BugsnagTypes_1 = __webpack_require__(/*! ./BugsnagTypes */ "./node_modules/@urbandevs/mario-bugsnag/dist/BugsnagTypes.js");
class BugsnagModule extends src_1.MarioModule {
    name() {
        return 'BugsnagModule';
    }
    static use(mario, options) {
        return mario.registerModule(BugsnagModule, options);
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this.mario().logger().log(`BugsnagModule: Version ${options.appVersion}`);
            this.mario().logger().log(`BugsnagModule: ReleaseStage ${options.releaseStage}`);
            this.mario().registerService(BugsnagTypes_1.BugsnagTypes.BUGSNAG_SERVICE, BugsnagService_1.BugsnagService);
            this.mario().getService(BugsnagTypes_1.BugsnagTypes.BUGSNAG_SERVICE).init(options);
        });
    }
}
exports.BugsnagModule = BugsnagModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-bugsnag/dist/BugsnagService.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-bugsnag/dist/BugsnagService.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BugsnagService = void 0;
const js_1 = __webpack_require__(/*! @bugsnag/js */ "./node_modules/@bugsnag/js/browser/notifier.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/ */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
let BugsnagService = class BugsnagService {
    constructor(logger) {
        this.logger = logger;
        this.history = '';
        this.enabled = true;
    }
    init(options = {}) {
        this.options = options;
        if (typeof options.enabled !== 'undefined') {
            this.enabled = options.enabled;
        }
        this.client = js_1.default({
            apiKey: options.apiKey,
            appVersion: options.appVersion,
            beforeSend: (report) => {
                report.stacktrace = report.stacktrace.map((frame) => {
                    frame.file = frame.file.replace(/(chrome-extension:|moz-extension:|edge-extension:)/g, 'chrome_extension:');
                    return frame;
                });
                report.updateMetaData('background', {
                    history: this.history,
                });
                if (!this.enabled) {
                    report.ignore();
                }
            },
            releaseStage: options.releaseStage,
        });
        this.logger.onLog(this.onLog.bind(this));
        this.logger.onEvent(this.onEvent.bind(this));
        this.logger.onWarn(this.onWarn.bind(this));
        this.logger.onError(this.onError.bind(this));
        this.logStatus();
    }
    enable() {
        this.enabled = true;
        this.logStatus();
    }
    disable() {
        this.enabled = false;
        this.logStatus();
    }
    notify(error) {
        this.client.notify(error);
    }
    leaveBreadcrumb(name, metaData, type, timestamp) {
        this.client.leaveBreadcrumb(name, metaData, type, timestamp);
    }
    updateUser(user) {
        this.client.user = user;
    }
    getClient() {
        return this.client;
    }
    logStatus() {
        this.logger.log(`BugsnagModule: ${this.enabled ? 'Enabled' : 'Disabled'}`);
    }
    onLog(message, args, output) {
        const needLeaveBreadcrumb = this.options.filterLog ? this.options.filterLog(message, args) : true;
        if (needLeaveBreadcrumb) {
            this.addToHistory(output);
            this.leaveBreadcrumb(message, args);
        }
    }
    onEvent(message, event, output) {
        const needLeaveBreadcrumb = this.options.filterEvents ? this.options.filterEvents(event) : true;
        if (needLeaveBreadcrumb) {
            this.addToHistory(output);
            const metaData = { param: JSON.stringify(event.data) };
            this.leaveBreadcrumb(message, metaData);
        }
    }
    onWarn(message, args, output) {
        this.addToHistory(output);
        this.notify(message);
    }
    onError(e) {
        this.notify(e);
    }
    addToHistory(text) {
        this.history = `${text.trim()}\n${this.history}`;
        const MAX_ALLOWED_CHARS = 480000;
        if (this.history.length > MAX_ALLOWED_CHARS) {
            this.history = this.history.substr(0, MAX_ALLOWED_CHARS);
        }
    }
};
BugsnagService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [Object])
], BugsnagService);
exports.BugsnagService = BugsnagService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-bugsnag/dist/BugsnagTypes.js":
/*!********************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-bugsnag/dist/BugsnagTypes.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BugsnagTypes = void 0;
const BugsnagTypes = {
    BUGSNAG_CLIENT: Symbol.for('BUGSNAG_CLIENT'),
    BUGSNAG_SERVICE: Symbol.for('BUGSNAG_SERVICE'),
};
exports.BugsnagTypes = BugsnagTypes;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/BrowserEnum.js":
/*!********************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/BrowserEnum.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var BrowserEnum;
(function (BrowserEnum) {
    BrowserEnum["CHROME_BROWSER"] = "CHROME_BROWSER";
    BrowserEnum["FIREFOX_BROWSER"] = "FIREFOX_BROWSER";
    BrowserEnum["EDGE_BROWSER"] = "EDGE_BROWSER";
    BrowserEnum["SAFARI_BROWSER"] = "SAFARI_BROWSER";
    BrowserEnum["OPERA_BROWSER"] = "OPERA_BROWSER";
    BrowserEnum["CHROMIUM_BROWSER"] = "CHROMIUM_BROWSER";
})(BrowserEnum = exports.BrowserEnum || (exports.BrowserEnum = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Core/Exceptions/CoreException.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Core/Exceptions/CoreException.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
class CoreException extends Error {
}
exports.CoreException = CoreException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Core/Exceptions/CoreServiceIsNotRegisteredException.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Core/Exceptions/CoreServiceIsNotRegisteredException.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const CoreException_1 = __webpack_require__(/*! ./CoreException */ "./node_modules/@urbandevs/mario-core/dist/src/Core/Exceptions/CoreException.js");
class CoreServiceIsNotRegisteredException extends CoreException_1.CoreException {
}
exports.CoreServiceIsNotRegisteredException = CoreServiceIsNotRegisteredException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Core/Extension.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Core/Extension.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const BrowserEnum_1 = __webpack_require__(/*! ../BrowserEnum */ "./node_modules/@urbandevs/mario-core/dist/src/BrowserEnum.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ../MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
let Extension = class Extension {
    constructor(browserEnum) {
        this.browserEnum = browserEnum;
        this.isOnInstalledFired = false;
        this.listeners = [];
        chrome.runtime.onInstalled.addListener((details) => {
            this.isOnInstalledFired = true;
            this.installedDetails = details;
            this.handleOnInstall();
        });
    }
    onInstall(callback) {
        this.listeners.push({ callback });
        if (this.isOnInstalledFired) {
            this.handleOnInstall();
        }
    }
    setUninstallURL(url, callback) {
        chrome.runtime.setUninstallURL(url, callback);
    }
    manifest() {
        return chrome.runtime.getManifest();
    }
    browser() {
        return this.browserEnum;
    }
    handleOnInstall() {
        for (const listener of this.listeners) {
            listener.callback(this.installedDetails);
        }
        this.listeners = [];
    }
};
Extension = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.BROWSER)),
    __metadata("design:paramtypes", [String])
], Extension);
exports.Extension = Extension;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Core/MarioEvent.js":
/*!************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Core/MarioEvent.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const guid_typescript_1 = __webpack_require__(/*! guid-typescript */ "./node_modules/guid-typescript/dist/guid.js");
class MarioEvent {
    constructor(event, data, id) {
        this.event = event;
        this.data = data;
        this.id = id ? id : guid_typescript_1.Guid.create().toString();
    }
}
exports.MarioEvent = MarioEvent;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Core/MarioModule.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Core/MarioModule.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
class MarioModule {
    constructor(_core) {
        this._core = _core;
    }
    mario() {
        return this._core;
    }
}
exports.MarioModule = MarioModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js":
/*!********************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const MARIO_TYPES = {
    ALARM_SERVICE: Symbol.for('ALARM_SERVICE'),
    BROWSER: Symbol.for('BROWSER'),
    BROWSER_ACTION: Symbol.for('BROWSER_ACTION'),
    CACHE_SERVICE: Symbol.for('CACHE_SERVICE'),
    CONTAINER: Symbol.for('CONTAINER'),
    INTERNAL_DISPATCHER: Symbol.for('INTERNAL_DISPATCHER'),
    LOCAL_STORAGE_SERVICE: Symbol.for('LOCAL_STORAGE_SERVICE'),
    LOGGER_SERVICE: Symbol.for('LOGGER_SERVICE'),
    STORAGE_SERVICE: Symbol.for('STORAGE_SERVICE'),
    TAB_SERVICE: Symbol.for('TAB_SERVICE'),
    NAVIGATION_SERVICE: Symbol.for('NAVIGATION_SERVICE'),
    WEB_REQUEST_SERVICE: Symbol.for('WEB_REQUEST_SERVICE'),
    PROXY_SERVICE: Symbol.for('PROXY_SERVICE'),
    EXTENSION_SERVICE: Symbol.for('EXTENSION_SERVICE'),
    EXTERNAL_DISPATCHER: Symbol.for('EXTERNAL_DISPATCHER'),
    OMNIBOX_SERVICE: Symbol.for('OMNIBOX_SERVICE'),
    WINDOW_POST: Symbol.for('WINDOW_POST'),
    MANAGEMENT: Symbol.for('MANAGEMENT'),
    PORT_DISPATCHER: Symbol.for('PORT_DISPATCHER'),
};
exports.MARIO_TYPES = MARIO_TYPES;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Mario.js":
/*!**************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Mario.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(/*! reflect-metadata */ "./node_modules/reflect-metadata/Reflect.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const InternalDispatcher_1 = __webpack_require__(/*! ./Packages/InternalDispatcher/Bg/InternalDispatcher */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/InternalDispatcher/Bg/InternalDispatcher.js");
const LoggerService_1 = __webpack_require__(/*! ./Packages/Logger/Bg/LoggerService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Logger/Bg/LoggerService.js");
const TabService_1 = __webpack_require__(/*! ./Packages/Tab/Bg/TabService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabService.js");
const CoreServiceIsNotRegisteredException_1 = __webpack_require__(/*! ./Core/Exceptions/CoreServiceIsNotRegisteredException */ "./node_modules/@urbandevs/mario-core/dist/src/Core/Exceptions/CoreServiceIsNotRegisteredException.js");
const Extension_1 = __webpack_require__(/*! ./Core/Extension */ "./node_modules/@urbandevs/mario-core/dist/src/Core/Extension.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ./MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
const ExternalDispatcher_1 = __webpack_require__(/*! ./Packages/ExternalDispatcher/Bg/ExternalDispatcher */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/ExternalDispatcher/Bg/ExternalDispatcher.js");
const PortDispatcher_1 = __webpack_require__(/*! ./Packages/PortDispatcher/Bg/PortDispatcher */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/PortDispatcher/Bg/PortDispatcher.js");
class Mario {
    constructor(browser, options = {}) {
        this.isInitialized = false;
        this._container = options.container ? options.container : new inversify_1.Container();
        this._container.bind(MARIO_TYPES_1.MARIO_TYPES.BROWSER).toConstantValue(browser);
        this._container.bind(MARIO_TYPES_1.MARIO_TYPES.CONTAINER).toConstantValue(this._container);
        const loggerService = options.logger ? options.logger : LoggerService_1.LoggerService;
        const internalDispatcherService = options.internalDispatcher ? options.internalDispatcher : InternalDispatcher_1.InternalDispatcher;
        const externalDispatcherService = options.externalDispatcher ? options.externalDispatcher : ExternalDispatcher_1.ExternalDispatcher;
        const tabService = options.tab ? options.tab : TabService_1.TabService;
        this.registerService(MARIO_TYPES_1.MARIO_TYPES.LOGGER_SERVICE, loggerService);
        options.loggerEnabled ? this.logger().enable() : this.logger().disable();
        this.logger().log(`Core: this build is for "${browser.toString()}"`);
        this.registerService(MARIO_TYPES_1.MARIO_TYPES.EXTENSION_SERVICE, Extension_1.Extension);
        this.extension();
        this.registerService(MARIO_TYPES_1.MARIO_TYPES.INTERNAL_DISPATCHER, internalDispatcherService);
        this.registerService(MARIO_TYPES_1.MARIO_TYPES.EXTERNAL_DISPATCHER, externalDispatcherService);
        this.registerService(MARIO_TYPES_1.MARIO_TYPES.PORT_DISPATCHER, PortDispatcher_1.PortDispatcher);
        this.registerService(MARIO_TYPES_1.MARIO_TYPES.TAB_SERVICE, tabService);
        this.getService(MARIO_TYPES_1.MARIO_TYPES.PORT_DISPATCHER);
        const globalAny = global;
        globalAny.window.mario = this;
        this.coreInitialized();
    }
    registerModule(useClass, options) {
        return __awaiter(this, void 0, void 0, function* () {
            const module = new useClass(this);
            this.logger().log(`Core: registering a module "${module.name()}"`);
            try {
                yield module.register(options);
                this.logger().log(`Core: the module "${module.name()}" is registered`);
            }
            catch (e) {
                this.logger().error(e);
            }
        });
    }
    registerService(name, useClass) {
        if (this.isCoreInitialized()) {
            this.logger().log(`Core: registered a service "${name.toString()}"`);
        }
        if (!this.hasService(name)) {
            this._container.bind(name).to(useClass).inSingletonScope();
        }
    }
    getService(name) {
        if (!this.hasService(name)) {
            const message = `Can't get service: service '${name.toString()}' is not registered`;
            if (this.isCoreInitialized()) {
                this.logger().warn(message);
            }
            throw new CoreServiceIsNotRegisteredException_1.CoreServiceIsNotRegisteredException(message);
        }
        return this._container.get(name);
    }
    hasService(name) {
        return this._container.isBound(name);
    }
    internalDispatcher() {
        return this.getService(MARIO_TYPES_1.MARIO_TYPES.INTERNAL_DISPATCHER);
    }
    externalDispatcher() {
        return this.getService(MARIO_TYPES_1.MARIO_TYPES.EXTERNAL_DISPATCHER);
    }
    portDispatcher() {
        return this.getService(MARIO_TYPES_1.MARIO_TYPES.PORT_DISPATCHER);
    }
    logger() {
        return this.getService(MARIO_TYPES_1.MARIO_TYPES.LOGGER_SERVICE);
    }
    container() {
        return this._container;
    }
    tabService() {
        return this.getService(MARIO_TYPES_1.MARIO_TYPES.TAB_SERVICE);
    }
    extension() {
        return this.getService(MARIO_TYPES_1.MARIO_TYPES.EXTENSION_SERVICE);
    }
    coreInitialized() {
        this.isInitialized = true;
    }
    isCoreInitialized() {
        return this.isInitialized;
    }
}
exports.Mario = Mario;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Alarm/Bg/AlarmEvents.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Alarm/Bg/AlarmEvents.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var AlarmEvents;
(function (AlarmEvents) {
    // Fired when an alarm has elapsed. Useful for event pages.
    AlarmEvents["ALARM_ELAPSED"] = "ALARM_ELAPSED";
})(AlarmEvents = exports.AlarmEvents || (exports.AlarmEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Alarm/Bg/AlarmService.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Alarm/Bg/AlarmService.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ../../../MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
const index_1 = __webpack_require__(/*! ../../../index */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const AlarmEvents_1 = __webpack_require__(/*! ./AlarmEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Alarm/Bg/AlarmEvents.js");
let AlarmService = class AlarmService {
    constructor(logger, internalDispatcher) {
        this.logger = logger;
        this.internalDispatcher = internalDispatcher;
        chrome.alarms.onAlarm.addListener((alarm) => {
            const event = new index_1.MarioEvent(AlarmEvents_1.AlarmEvents.ALARM_ELAPSED, alarm);
            this.internalDispatcher.emit(event).then();
        });
    }
    /**
     * @inheritDoc
     */
    create(alarmInfo, name) {
        try {
            this.logger.log(`AlarmService: create an alarm "${name}"`);
            chrome.alarms.create(name, alarmInfo);
        }
        catch (e) {
            this.logger.warn(`AlarmService: could not create an alarm with name "${name}"`);
            throw e;
        }
    }
    /**
     * @inheritDoc
     */
    get(name) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.alarms.get(name, (alarm) => resolve(alarm));
                }
                catch (e) {
                    this.logger.warn(`AlarmService: could get an alarm with name "${name}"`);
                    reject(e);
                }
            });
        });
    }
    /**
     * @inheritDoc
     */
    getAll() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.alarms.getAll((alarms) => resolve(alarms));
                }
                catch (e) {
                    this.logger.warn(`AlarmService: could get all alarms`);
                    reject(e);
                }
            });
        });
    }
    /**
     * @inheritDoc
     */
    clear(name) {
        return __awaiter(this, void 0, void 0, function* () {
            this.logger.log(`AlarmService: clear an alarm "${name}"`);
            return new Promise((resolve, reject) => {
                try {
                    chrome.alarms.clear(name, (wasCleared) => resolve(wasCleared));
                }
                catch (e) {
                    this.logger.warn(`AlarmService: could clear an alarm with name "${name}"`);
                    reject(e);
                }
            });
        });
    }
    /**
     * @inheritDoc
     */
    clearAll() {
        return __awaiter(this, void 0, void 0, function* () {
            this.logger.log(`AlarmService: clear all alarms "${name}"`);
            return new Promise((resolve, reject) => {
                try {
                    chrome.alarms.clearAll((wasCleared) => resolve(wasCleared));
                }
                catch (e) {
                    this.logger.warn(`AlarmService: could clear all alarms`);
                    reject(e);
                }
            });
        });
    }
};
AlarmService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(1, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [Object, Object])
], AlarmService);
exports.AlarmService = AlarmService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/BrowserAction/Bg/BrowserActionEvents.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/BrowserAction/Bg/BrowserActionEvents.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var BrowserActionEvents;
(function (BrowserActionEvents) {
    // Fired when a browser action icon is clicked. Does not fire if the browser action has a popup.
    BrowserActionEvents["BROWSER_ACTION_CLICKED"] = "BROWSER_ACTION_CLICKED";
})(BrowserActionEvents = exports.BrowserActionEvents || (exports.BrowserActionEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/BrowserAction/Bg/BrowserActionService.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/BrowserAction/Bg/BrowserActionService.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ../../../MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
const __1 = __webpack_require__(/*! ../../.. */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const BrowserActionEvents_1 = __webpack_require__(/*! ./BrowserActionEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/BrowserAction/Bg/BrowserActionEvents.js");
let BrowserActionService = class BrowserActionService {
    constructor(logger, internalDispatcher) {
        this.logger = logger;
        this.internalDispatcher = internalDispatcher;
        chrome.browserAction.onClicked.addListener((tab) => {
            const event = new __1.MarioEvent(BrowserActionEvents_1.BrowserActionEvents.BROWSER_ACTION_CLICKED, tab);
            this.internalDispatcher.emit(event).then();
        });
    }
    /**
     * @inheritDoc
     */
    setTitle(details) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.browserAction.setTitle(details, () => resolve());
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    /**
     * @inheritDoc
     */
    getTitle(tabId) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.browserAction.getTitle(tabId, () => resolve());
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    /**
     * @inheritDoc
     */
    setIcon(details) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.browserAction.setIcon(details, () => resolve());
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    /**
     * @inheritDoc
     */
    setPopup(details) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.browserAction.setPopup(details, () => resolve());
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    /**
     * @inheritDoc
     */
    getPopup(tabId) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.browserAction.getPopup(tabId, () => resolve());
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    /**
     * @inheritDoc
     */
    setBadgeText(details) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.browserAction.setBadgeText(details, () => resolve());
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    /**
     * @inheritDoc
     */
    getBadgeText(tabId) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.browserAction.getBadgeText(tabId, () => resolve());
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    /**
     * @inheritDoc
     */
    setBadgeBackgroundColor(details) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.browserAction.setBadgeBackgroundColor(details, () => resolve());
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    /**
     * @inheritDoc
     */
    getBadgeBackgroundColor(details) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.browserAction.getBadgeBackgroundColor(details, (colors) => resolve(colors));
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    /**
     * @inheritDoc
     */
    enable(tabId) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.browserAction.enable(tabId, () => resolve());
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    /**
     * @inheritDoc
     */
    disable(tabId) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.browserAction.disable(tabId, () => resolve());
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
};
BrowserActionService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(1, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [Object, Object])
], BrowserActionService);
exports.BrowserActionService = BrowserActionService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Cache/Bg/CacheEvents.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Cache/Bg/CacheEvents.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CacheEvents;
(function (CacheEvents) {
    CacheEvents["BEFORE_CLEAR_CACHE"] = "BEFORE_CLEAR_CACHE";
    CacheEvents["AFTER_CLEAR_CACHE"] = "AFTER_CLEAR_CACHE";
})(CacheEvents = exports.CacheEvents || (exports.CacheEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Cache/Bg/CacheService.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Cache/Bg/CacheService.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const MarioEvent_1 = __webpack_require__(/*! ../../../Core/MarioEvent */ "./node_modules/@urbandevs/mario-core/dist/src/Core/MarioEvent.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ../../../MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
const CacheEvents_1 = __webpack_require__(/*! ./CacheEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Cache/Bg/CacheEvents.js");
let CacheService = class CacheService {
    constructor(logger, dispatcher) {
        this.logger = logger;
        this.dispatcher = dispatcher;
    }
    clear() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.dispatcher.emit(new MarioEvent_1.MarioEvent(CacheEvents_1.CacheEvents.BEFORE_CLEAR_CACHE));
            yield this.cacheRemoveAll();
            yield this.dispatcher.emit(new MarioEvent_1.MarioEvent(CacheEvents_1.CacheEvents.AFTER_CLEAR_CACHE));
        });
    }
    cacheRemoveAll() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.browsingData.removeCache({}, () => {
                        resolve();
                    });
                }
                catch (e) {
                    this.logger.error(e);
                    reject();
                }
            });
        });
    }
};
CacheService.EVENT_BEFORE_CLEAR_CACHE = 'beforeClearCache';
CacheService.EVENT_AFTER_CLEAR_CACHE = 'afterClearCache';
CacheService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(1, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [Object, Object])
], CacheService);
exports.CacheService = CacheService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/ContentDispatcher/Bg/ContentDispatcherService.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/ContentDispatcher/Bg/ContentDispatcherService.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
class ContentDispatcherService {
    constructor() {
        this.listeners = {};
        this.listenersIndex = {};
        this.counter = 0;
        chrome.runtime.onMessage.addListener((message) => {
            if (!this.isEventMessage(message)) {
                return;
            }
            if (!this.hasEventListeners(message.event)) {
                console.log(`ContentDispatcherService: no listeners for an event ${message.event}`);
                return;
            }
            const promises = [];
            const listeners = this.listeners[message.event];
            for (const key of Object.keys(listeners)) {
                const listener = listeners[key];
                const promise = listener(message);
                promises.push(promise);
            }
            Promise.all(promises).then();
            return false;
        });
    }
    emit(event, callback) {
        chrome.runtime.sendMessage(event, callback);
    }
    on(event, handler) {
        const id = ++this.counter;
        if (!this.hasEventListeners(event)) {
            this.listeners[event] = {};
        }
        this.listeners[event][id] = handler;
        this.listenersIndex[id] = event;
        return id;
    }
    hasEventListeners(event) {
        return typeof this.listeners[event] !== 'undefined';
    }
    removeListener(listenerId) {
        if (this.hasListener(listenerId)) {
            const event = this.listenersIndex[listenerId];
            delete this.listeners[event][listenerId];
            delete this.listenersIndex[listenerId];
        }
    }
    hasListener(listenerId) {
        return this.listenersIndex.hasOwnProperty(listenerId);
    }
    getListener(listenerId) {
        if (!this.hasListener(listenerId)) {
            // todo
            throw new Error('boom');
        }
        const event = this.listenersIndex[listenerId];
        return this.listeners[event][listenerId];
    }
    isEventMessage(message) {
        return (typeof message === 'object') && (typeof message.event === 'string');
    }
}
exports.ContentDispatcherService = ContentDispatcherService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/ExternalDispatcher/Bg/Exceptions/ExternalDispatcherException.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/ExternalDispatcher/Bg/Exceptions/ExternalDispatcherException.js ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
class ExternalDispatcherException extends Error {
}
exports.ExternalDispatcherException = ExternalDispatcherException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/ExternalDispatcher/Bg/Exceptions/ExternalDispatcherListenerIsNotFoundException.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/ExternalDispatcher/Bg/Exceptions/ExternalDispatcherListenerIsNotFoundException.js ***!
  \************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const ExternalDispatcherException_1 = __webpack_require__(/*! ./ExternalDispatcherException */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/ExternalDispatcher/Bg/Exceptions/ExternalDispatcherException.js");
class ExternalDispatcherListenerIsNotFoundException extends ExternalDispatcherException_1.ExternalDispatcherException {
}
exports.ExternalDispatcherListenerIsNotFoundException = ExternalDispatcherListenerIsNotFoundException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/ExternalDispatcher/Bg/ExternalDispatcher.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/ExternalDispatcher/Bg/ExternalDispatcher.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ../../../MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
const ExternalDispatcherEvents_1 = __webpack_require__(/*! ./ExternalDispatcherEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/ExternalDispatcher/Bg/ExternalDispatcherEvents.js");
const ExternalDispatcherListenerIsNotFoundException_1 = __webpack_require__(/*! ./Exceptions/ExternalDispatcherListenerIsNotFoundException */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/ExternalDispatcher/Bg/Exceptions/ExternalDispatcherListenerIsNotFoundException.js");
let ExternalDispatcher = class ExternalDispatcher {
    constructor(container, loggerService, tabService) {
        this.container = container;
        this.loggerService = loggerService;
        this.tabService = tabService;
        this.listeners = {};
        this.listenersIndex = {};
        this.counter = 0;
        this.beforeEmitListeners = [];
        chrome.runtime.onMessage.addListener((message, sender, response) => {
            this.internalEmit(ExternalDispatcherEvents_1.ExternalDispatcherEvents.ON_ANY_MESSAGE, message, sender, response);
            if (this.isEventMessage(message)) {
                const scope = message.event;
                this.loggerService.event('ExternalDispatcher: got', message);
                this.internalEmit(scope, message, sender, response);
            }
            return true;
        });
    }
    emit(tabId, event) {
        this.loggerService.event('ExternalDispatcher: emit', event);
        try {
            this.beforeEmitListeners.forEach((listener) => listener(tabId, event));
        }
        catch (e) {
            this.loggerService.error(e);
        }
        this.tabService.sendMessage(tabId, event);
    }
    on(useClass) {
        const handler = this.bind(useClass);
        this.loggerService.log(`ExternalDispatcher: register an event listener "${handler.on()}"`);
        return this.addEventListener(handler.on(), handler);
    }
    onBeforeEmit(listener) {
        this.beforeEmitListeners.push(listener);
        return;
    }
    removeListener(listenerId) {
        if (!this.hasListeners(listenerId)) {
            throw new ExternalDispatcherListenerIsNotFoundException_1.ExternalDispatcherListenerIsNotFoundException(`Listener with id "${listenerId}" is not found`);
        }
        this.loggerService.log(`ExternalDispatcher: remove an event listener "${listenerId}"`);
        const scope = this.listenersIndex[listenerId];
        delete this.listeners[scope][listenerId];
        delete this.listenersIndex[listenerId];
    }
    getListener(listenerId) {
        if (!this.hasListeners(listenerId)) {
            throw new ExternalDispatcherListenerIsNotFoundException_1.ExternalDispatcherListenerIsNotFoundException(`Listener with id "${listenerId}" is not found`);
        }
        const scope = this.listenersIndex[listenerId];
        return this.listeners[scope][listenerId];
    }
    hasListeners(listenerId) {
        return typeof this.listenersIndex[listenerId] !== 'undefined';
    }
    getEventListeners(event) {
        return this.hasEventListeners(event) ? this.listeners[event] : [];
    }
    hasEventListeners(event) {
        return typeof this.listeners[event] !== 'undefined';
    }
    isEventMessage(message) {
        return (typeof message === 'object') && (typeof message.event === 'string');
    }
    internalEmit(scope, message, sender, sendResponse) {
        if (!this.hasEventListeners(scope)) {
            return;
        }
        const promises = [];
        const listeners = this.listeners[scope];
        for (const key of Object.keys(listeners)) {
            const listener = listeners[key];
            const promise = listener.handle.apply(listener, [message, sender, sendResponse]);
            promises.push(promise);
        }
        Promise.all(promises).then();
    }
    addEventListener(scope, handler) {
        if (typeof this.listeners[scope] === 'undefined') {
            this.listeners[scope] = {};
        }
        const id = ++this.counter;
        this.listeners[scope][id] = handler;
        this.listenersIndex[id] = scope;
        return id;
    }
    bind(useClass) {
        this.container.bind(useClass).toSelf().inSingletonScope();
        return this.container.get(useClass);
    }
};
ExternalDispatcher = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.CONTAINER)),
    __param(1, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(2, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.TAB_SERVICE)),
    __metadata("design:paramtypes", [Object, Object, Object])
], ExternalDispatcher);
exports.ExternalDispatcher = ExternalDispatcher;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/ExternalDispatcher/Bg/ExternalDispatcherEvents.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/ExternalDispatcher/Bg/ExternalDispatcherEvents.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ExternalDispatcherEvents;
(function (ExternalDispatcherEvents) {
    ExternalDispatcherEvents["ON_ANY_MESSAGE"] = "ON_ANY_MESSAGE";
})(ExternalDispatcherEvents = exports.ExternalDispatcherEvents || (exports.ExternalDispatcherEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/InternalDispatcher/Bg/Exceptions/InternalDispatcherException.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/InternalDispatcher/Bg/Exceptions/InternalDispatcherException.js ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
class InternalDispatcherException extends Error {
}
exports.InternalDispatcherException = InternalDispatcherException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/InternalDispatcher/Bg/Exceptions/InternalDispatcherListenerIsNotRegisteredException.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/InternalDispatcher/Bg/Exceptions/InternalDispatcherListenerIsNotRegisteredException.js ***!
  \*****************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const InternalDispatcherException_1 = __webpack_require__(/*! ./InternalDispatcherException */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/InternalDispatcher/Bg/Exceptions/InternalDispatcherException.js");
class InternalDispatcherListenerIsNotRegisteredException extends InternalDispatcherException_1.InternalDispatcherException {
}
exports.InternalDispatcherListenerIsNotRegisteredException = InternalDispatcherListenerIsNotRegisteredException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/InternalDispatcher/Bg/InternalDispatcher.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/InternalDispatcher/Bg/InternalDispatcher.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ../../../MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
const InternalDispatcherListenerIsNotRegisteredException_1 = __webpack_require__(/*! ./Exceptions/InternalDispatcherListenerIsNotRegisteredException */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/InternalDispatcher/Bg/Exceptions/InternalDispatcherListenerIsNotRegisteredException.js");
let InternalDispatcher = class InternalDispatcher {
    constructor(container, loggerService) {
        this.container = container;
        this.loggerService = loggerService;
        this.counter = 0;
        this.listeners = {};
        this.listenersIndex = {};
        this.onBeforeEmitListeners = [];
    }
    emit(event) {
        return __awaiter(this, void 0, void 0, function* () {
            this.loggerService.event(`InternalDispatcher`, event);
            try {
                this.onBeforeEmitListeners.forEach((listener) => listener(event));
            }
            catch (e) {
                this.loggerService.error(e);
            }
            const listeners = this.getEventListeners(event.event);
            const promises = [];
            for (const key in listeners) {
                const listener = listeners[key];
                const promise = listener.handle.apply(listener, [event]);
                promises.push(promise);
            }
            yield Promise.all(promises);
        });
    }
    on(useClass) {
        this.container.bind(useClass).toSelf().inSingletonScope();
        const handler = this.container.get(useClass);
        const eventName = handler.on();
        this.loggerService.log(`InternalDispatcher: register a listener on event "${eventName}"`);
        if (typeof this.listeners[eventName] === 'undefined') {
            this.listeners[eventName] = [];
        }
        const id = ++this.counter;
        this.listenersIndex[id] = eventName;
        this.listeners[eventName][id] = handler;
        return id;
    }
    onBeforeEmit(listener) {
        this.onBeforeEmitListeners.push(listener);
    }
    hasEventListeners(eventName) {
        return this.listeners.hasOwnProperty(eventName) && this.listeners[eventName].length > 0;
    }
    getEventListeners(eventName) {
        if (this.hasEventListeners(eventName)) {
            const listeners = this.listeners[eventName];
            return listeners.filter((value) => !!value.handle);
        }
        return [];
    }
    getListener(id) {
        if (!this.hasListener(id)) {
            throw new InternalDispatcherListenerIsNotRegisteredException_1.InternalDispatcherListenerIsNotRegisteredException(`a listener with id "${id}" is not registered`);
        }
        const eventName = this.listenersIndex[id];
        return this.listeners[eventName][id];
    }
    removeListener(id) {
        if (!this.hasListener(id)) {
            throw new InternalDispatcherListenerIsNotRegisteredException_1.InternalDispatcherListenerIsNotRegisteredException(`a listener with id "${id}" is not registered`);
        }
        const eventName = this.listenersIndex[id];
        delete this.listenersIndex[id];
        delete this.listeners[eventName][id];
    }
    hasListener(listenerId) {
        return this.listenersIndex.hasOwnProperty(listenerId);
    }
};
InternalDispatcher = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.CONTAINER)),
    __param(1, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [Object, Object])
], InternalDispatcher);
exports.InternalDispatcher = InternalDispatcher;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Logger/Bg/LoggerService.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Logger/Bg/LoggerService.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var LoggerService_1;
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const stringify = __webpack_require__(/*! json-stringify-safe */ "./node_modules/json-stringify-safe/stringify.js");
let LoggerService = LoggerService_1 = class LoggerService {
    constructor() {
        this.onLogListeners = [];
        this.onEventListeners = [];
        this.onErrorListeners = [];
        this.onWarnListeners = [];
        this.onFilterLogListeners = [];
        this.enabled = true;
    }
    log(message, args) {
        const output = this.time();
        output[0] += `%c[INFO] %c${message}`;
        output.push(this.color(LoggerService_1.LIGHT_BLUE_COLOR) + this.fontWeight(600));
        output.push(this.color(LoggerService_1.BLACK_COLOR));
        let argsOutput = '';
        if (typeof args !== 'undefined') {
            argsOutput = stringify(args, null, 2);
        }
        const cleanOutput = this.prepareOutput(output[0], argsOutput);
        const showOutput = !this.filterInfo(cleanOutput);
        if (showOutput) {
            if (this.enabled) {
                console.log.apply(console, output);
            }
            if (this.enabled && argsOutput) {
                console.log(argsOutput);
            }
        }
        this.handleOnLogListeners(message, args, cleanOutput);
    }
    event(message, event) {
        const output = this.time();
        output[0] += `%c[EVENT ${event.event}] %c${message}`;
        output.push(this.color(LoggerService_1.LIGHT_GREEN_COLOR) + this.fontWeight(600));
        output.push(this.color(LoggerService_1.BLACK_COLOR));
        if (this.enabled) {
            console.log.apply(console, output);
        }
        const argsOutput = stringify(event.data, null, 2);
        if (this.enabled) {
            console.log(argsOutput);
        }
        this.handleOnEventListeners(message, event, this.prepareOutput(output[0], argsOutput));
    }
    warn(message, args) {
        const output = this.time();
        output[0] += `%c[WARN] %c${message}`;
        output.push(this.color(LoggerService_1.RED_COLOR) + this.fontWeight(600));
        output.push(this.color(LoggerService_1.BLACK_COLOR));
        if (this.enabled) {
            console.log.apply(console, output);
        }
        let argsOutput = '';
        if (this.enabled && typeof args !== 'undefined') {
            console.log(args);
            argsOutput = stringify(args, null, 2);
        }
        this.handleOnWarnListeners(message, args, this.prepareOutput(output[0], argsOutput));
    }
    error(e) {
        const output = this.time();
        output[0] += `%c[ERROR] %c${e.message}`;
        output.push(this.color(LoggerService_1.RED_COLOR) + this.fontWeight(600));
        output.push(this.color(LoggerService_1.BLACK_COLOR));
        if (this.enabled) {
            console.log.apply(console, output);
            if (e.stack) {
                console.error(e.stack);
            }
        }
        this.handleOnErrorListeners(e);
    }
    onLog(callback) {
        this.onLogListeners.push(callback);
    }
    onEvent(callback) {
        this.onEventListeners.push(callback);
    }
    onWarn(callback) {
        this.onWarnListeners.push(callback);
    }
    onError(callback) {
        this.onErrorListeners.push(callback);
    }
    onFilterLog(callback) {
        this.onFilterLogListeners.push(callback);
    }
    disable() {
        this.enabled = false;
    }
    enable() {
        this.enabled = true;
    }
    handleOnLogListeners(message, args, output) {
        for (const listener of this.onLogListeners) {
            listener(message, args, output);
        }
    }
    handleOnWarnListeners(message, args, output) {
        for (const listener of this.onWarnListeners) {
            listener(message, args, output);
        }
    }
    handleOnEventListeners(message, event, output) {
        for (const listener of this.onEventListeners) {
            listener(message, event, output);
        }
    }
    handleOnErrorListeners(e, output) {
        for (const listener of this.onErrorListeners) {
            listener(e, output);
        }
    }
    filterInfo(cleanOutput) {
        for (const listener of this.onFilterLogListeners) {
            const filterMe = listener(cleanOutput);
            if (filterMe) {
                return true;
            }
        }
        return false;
    }
    time() {
        const date = new Date();
        let time = `%c[`;
        time += `tz:${date.getTimezoneOffset()} `;
        time += `${this.pad(date.getDate().toString(), 2)}/`;
        time += `${this.pad(date.getMonth().toString(), 2)}/`;
        time += `${date.getFullYear()} `;
        time += `${this.pad(date.getHours().toString(), 2)}:`;
        time += `${this.pad(date.getMinutes().toString(), 2)}:`;
        time += `${this.pad(date.getSeconds().toString(), 2)} `;
        time += `${this.pad(date.getMilliseconds().toString(), 4)}`;
        time += `]%c `;
        return [
            time,
            this.fontWeight(600),
            this.color(LoggerService_1.BLACK_COLOR),
        ];
    }
    color(color) {
        return `color: ${color};`;
    }
    fontWeight(value) {
        return `font-weight: ${value};`;
    }
    pad(str, width, z) {
        const char = z || '0';
        return str.length >= width ? str : new Array(width - str.length + 1).join(char) + str;
    }
    prepareOutput(output, args) {
        return `${output.replace(/%c/g, '')}\n${args}`;
    }
};
LoggerService.BLACK_COLOR = '#000';
LoggerService.RED_COLOR = '#f40f3f';
LoggerService.LIGHT_GREEN_COLOR = '#1e9f3e';
LoggerService.LIGHT_BLUE_COLOR = '#4285f4';
LoggerService = LoggerService_1 = __decorate([
    inversify_1.injectable()
], LoggerService);
exports.LoggerService = LoggerService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Management/Bg/ManagementEvents.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Management/Bg/ManagementEvents.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ManagementEvents;
(function (ManagementEvents) {
    ManagementEvents["INSTALL"] = "MANAGEMENT_ON_INSTALL";
    ManagementEvents["UNINSTALL"] = "MANAGEMENT_ON_UNINSTALL";
    ManagementEvents["ENABLED"] = "MANAGEMENT_ON_ENABLED";
    ManagementEvents["DISABLED"] = "MANAGEMENT_ON_DISABLED";
})(ManagementEvents = exports.ManagementEvents || (exports.ManagementEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Management/Bg/ManagementService.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Management/Bg/ManagementService.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ../../../MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
const BrowserEnum_1 = __webpack_require__(/*! ../../../BrowserEnum */ "./node_modules/@urbandevs/mario-core/dist/src/BrowserEnum.js");
const ManagementChromeService_1 = __webpack_require__(/*! ./chrome/ManagementChromeService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Management/Bg/chrome/ManagementChromeService.js");
const ManagementFirefoxService_1 = __webpack_require__(/*! ./firefox/ManagementFirefoxService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Management/Bg/firefox/ManagementFirefoxService.js");
let ManagementService = class ManagementService {
    constructor(browser, container) {
        this.browser = browser;
        this.container = container;
        const implementations = {};
        implementations[BrowserEnum_1.BrowserEnum.CHROME_BROWSER] = ManagementChromeService_1.ManagementChromeService;
        implementations[BrowserEnum_1.BrowserEnum.FIREFOX_BROWSER] = ManagementFirefoxService_1.ManagementFirefoxService;
        const key = implementations.hasOwnProperty(this.browser) ? browser : BrowserEnum_1.BrowserEnum.CHROME_BROWSER;
        const tempName = 'temp_name';
        const useClass = implementations[key];
        this.container.bind(tempName).to(useClass).inSingletonScope();
        this.service = this.container.get(tempName);
        this.container.unbind(tempName);
    }
    get(id) {
        return this.service.get(id);
    }
    getAll() {
        return this.service.getAll();
    }
    setEnabled(id, enabled) {
        return this.service.setEnabled(id, enabled);
    }
};
ManagementService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.BROWSER)),
    __param(1, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.CONTAINER)),
    __metadata("design:paramtypes", [String, Object])
], ManagementService);
exports.ManagementService = ManagementService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Management/Bg/chrome/ManagementChromeService.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Management/Bg/chrome/ManagementChromeService.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ../../../../MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
const ManagementEvents_1 = __webpack_require__(/*! ./../ManagementEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Management/Bg/ManagementEvents.js");
const __1 = __webpack_require__(/*! ../../../.. */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
let ManagementChromeService = class ManagementChromeService {
    constructor(internalDispatcher) {
        this.internalDispatcher = internalDispatcher;
        chrome.management.onInstalled.addListener((info) => {
            const event = new __1.MarioEvent(ManagementEvents_1.ManagementEvents.INSTALL, info);
            this.internalDispatcher.emit(event).then();
        });
        chrome.management.onUninstalled.addListener((id) => {
            const event = new __1.MarioEvent(ManagementEvents_1.ManagementEvents.UNINSTALL, id);
            this.internalDispatcher.emit(event).then();
        });
        chrome.management.onEnabled.addListener((info) => {
            const event = new __1.MarioEvent(ManagementEvents_1.ManagementEvents.ENABLED, info);
            this.internalDispatcher.emit(event).then();
        });
        chrome.management.onDisabled.addListener((info) => {
            const event = new __1.MarioEvent(ManagementEvents_1.ManagementEvents.DISABLED, info);
            this.internalDispatcher.emit(event).then();
        });
    }
    get(id) {
        return new Promise((resolve, reject) => {
            try {
                chrome.management.get(id, (extensionInfo) => resolve(extensionInfo));
            }
            catch (e) {
                reject(e);
            }
        });
    }
    getAll() {
        return new Promise((resolve, reject) => {
            try {
                chrome.management.getAll((extensionsInfo) => resolve(extensionsInfo));
            }
            catch (e) {
                reject(e);
            }
        });
    }
    setEnabled(id, enabled) {
        return new Promise((resolve, reject) => {
            try {
                chrome.management.setEnabled(id, enabled, () => resolve());
            }
            catch (e) {
                reject(e);
            }
        });
    }
};
ManagementChromeService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [Object])
], ManagementChromeService);
exports.ManagementChromeService = ManagementChromeService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Management/Bg/firefox/ManagementFirefoxService.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Management/Bg/firefox/ManagementFirefoxService.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ../../../../MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
const __1 = __webpack_require__(/*! ../../../.. */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const ManagementEvents_1 = __webpack_require__(/*! ../ManagementEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Management/Bg/ManagementEvents.js");
let ManagementFirefoxService = class ManagementFirefoxService {
    constructor(internalDispatcher) {
        this.internalDispatcher = internalDispatcher;
        browser.management.onInstalled.addListener((info) => {
            const event = new __1.MarioEvent(ManagementEvents_1.ManagementEvents.INSTALL, info);
            this.internalDispatcher.emit(event).then();
        });
        browser.management.onUninstalled.addListener((id) => {
            const event = new __1.MarioEvent(ManagementEvents_1.ManagementEvents.UNINSTALL, id);
            this.internalDispatcher.emit(event).then();
        });
        browser.management.onDisabled.addListener((info) => {
            const event = new __1.MarioEvent(ManagementEvents_1.ManagementEvents.DISABLED, info);
            this.internalDispatcher.emit(event).then();
        });
        browser.management.onEnabled.addListener((info) => {
            const event = new __1.MarioEvent(ManagementEvents_1.ManagementEvents.ENABLED, info);
            this.internalDispatcher.emit(event).then();
        });
    }
    get(id) {
        return __awaiter(this, void 0, void 0, function* () {
            const extension = yield browser.management.get(id);
            return extension;
        });
    }
    getAll() {
        return __awaiter(this, void 0, void 0, function* () {
            const extensions = yield browser.management.getAll();
            return extensions;
        });
    }
    setEnabled(id, enabled) {
        return __awaiter(this, void 0, void 0, function* () {
            return browser.management.setEnabled(id, enabled);
        });
    }
};
ManagementFirefoxService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [Object])
], ManagementFirefoxService);
exports.ManagementFirefoxService = ManagementFirefoxService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Navigation/Bg/NavigationService.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Navigation/Bg/NavigationService.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const index_1 = __webpack_require__(/*! ../../../index */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ../../../MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
const NavigationServiceEvents_1 = __webpack_require__(/*! ./NavigationServiceEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Navigation/Bg/NavigationServiceEvents.js");
let NavigationService = class NavigationService {
    constructor(dispatcherService) {
        this.dispatcherService = dispatcherService;
        this.isListenOnBeforeNavigate = false;
        this.isListenOnCommitted = false;
        this.isListenOnDOMContentLoaded = false;
        this.isListenOnCompleted = false;
        this.isListenOnErrorOccurred = false;
        this.isListenOnCreatedNavigationTarget = false;
        this.isListenOnReferenceFragmentUpdated = false;
        this.isListenOnTabReplaced = false;
        this.isListenOnHistoryStateUpdated = false;
    }
    listenOnBeforeNavigate() {
        if (!this.isListenOnBeforeNavigate) {
            this.isListenOnBeforeNavigate = true;
            chrome.webNavigation.onBeforeNavigate.addListener((details) => {
                const event = new index_1.MarioEvent(NavigationServiceEvents_1.NavigationServiceEvents.NAVIGATION_ON_BEFORE_NAVIGATE, { details });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    listenOnCommitted() {
        if (!this.isListenOnCommitted) {
            this.isListenOnCommitted = true;
            chrome.webNavigation.onCommitted.addListener((details) => {
                const event = new index_1.MarioEvent(NavigationServiceEvents_1.NavigationServiceEvents.NAVIGATION_ON_COMMITTED, { details });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    listenOnDOMContentLoaded() {
        if (!this.isListenOnDOMContentLoaded) {
            this.isListenOnDOMContentLoaded = true;
            chrome.webNavigation.onDOMContentLoaded.addListener((details) => {
                const event = new index_1.MarioEvent(NavigationServiceEvents_1.NavigationServiceEvents.NAVIGATION_ON_DOM_CONTENT_LOADED, { details });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    listenOnCompleted() {
        if (!this.isListenOnCompleted) {
            this.isListenOnCompleted = true;
            chrome.webNavigation.onCompleted.addListener((details) => {
                const event = new index_1.MarioEvent(NavigationServiceEvents_1.NavigationServiceEvents.NAVIGATION_ON_COMPLETED, { details });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    listenOnErrorOccurred() {
        if (!this.isListenOnErrorOccurred) {
            this.isListenOnErrorOccurred = true;
            chrome.webNavigation.onErrorOccurred.addListener((details) => {
                const event = new index_1.MarioEvent(NavigationServiceEvents_1.NavigationServiceEvents.NAVIGATION_ON_ERROR_OCCURRED, { details });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    listenOnCreatedNavigationTarget() {
        if (!this.isListenOnCreatedNavigationTarget) {
            this.isListenOnCreatedNavigationTarget = true;
            chrome.webNavigation.onCreatedNavigationTarget.addListener((details) => {
                const event = new index_1.MarioEvent(NavigationServiceEvents_1.NavigationServiceEvents.NAVIGATION_ON_CREATED_NAVIGATION_TARGET, { details });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    listenOnReferenceFragmentUpdated() {
        if (!this.isListenOnReferenceFragmentUpdated) {
            this.isListenOnReferenceFragmentUpdated = true;
            chrome.webNavigation.onReferenceFragmentUpdated.addListener((details) => {
                const event = new index_1.MarioEvent(NavigationServiceEvents_1.NavigationServiceEvents.NAVIGATION_ON_REFERENCE_FRAGMNENT_UPDATED, { details });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    listenOnTabReplaced() {
        if (!this.isListenOnTabReplaced) {
            this.isListenOnTabReplaced = true;
            chrome.webNavigation.onTabReplaced.addListener((details) => {
                const event = new index_1.MarioEvent(NavigationServiceEvents_1.NavigationServiceEvents.NAVIGATION_ON_TAB_REPLACED, { details });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    listenOnHistoryStateUpdated() {
        if (!this.isListenOnHistoryStateUpdated) {
            this.isListenOnHistoryStateUpdated = true;
            chrome.webNavigation.onHistoryStateUpdated.addListener((details) => {
                const event = new index_1.MarioEvent(NavigationServiceEvents_1.NavigationServiceEvents.NAVIGATION_ON_HISTORY_STATE_UPDATED, { details });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    /**
    * Retrieves information about the given frame
    * @param properties
    * @returns {Promise<Frame>}
    */
    getFrame(properties) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.webNavigation.getFrame(properties, (frame) => resolve(frame));
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    /**
    * Retrieves information about all frames of a given tab.
    * @param properties
    * @returns {Promise<Frame>}
    */
    getAllFrames(properties) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.webNavigation.getAllFrames(properties, (frames) => resolve(frames));
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
};
NavigationService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [Object])
], NavigationService);
exports.NavigationService = NavigationService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Navigation/Bg/NavigationServiceEvents.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Navigation/Bg/NavigationServiceEvents.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var NavigationServiceEvents;
(function (NavigationServiceEvents) {
    NavigationServiceEvents["NAVIGATION_ON_BEFORE_NAVIGATE"] = "NAVIGATION_ON_BEFORE_NAVIGATE";
    NavigationServiceEvents["NAVIGATION_ON_COMMITTED"] = "NAVIGATION_ON_COMMITTED";
    NavigationServiceEvents["NAVIGATION_ON_DOM_CONTENT_LOADED"] = "NAVIGATION_ON_DOM_CONTENT_LOADED";
    NavigationServiceEvents["NAVIGATION_ON_COMPLETED"] = "NAVIGATION_ON_COMPLETED";
    NavigationServiceEvents["NAVIGATION_ON_ERROR_OCCURRED"] = "NAVIGATION_ON_ERROR_OCCURRED";
    NavigationServiceEvents["NAVIGATION_ON_CREATED_NAVIGATION_TARGET"] = "NAVIGATION_ON_CREATED_NAVIGATION_TARGET";
    NavigationServiceEvents["NAVIGATION_ON_REFERENCE_FRAGMNENT_UPDATED"] = "NAVIGATION_ON_REFERENCE_FRAGMNENT_UPDATED";
    NavigationServiceEvents["NAVIGATION_ON_TAB_REPLACED"] = "NAVIGATION_ON_TAB_REMOVED";
    NavigationServiceEvents["NAVIGATION_ON_HISTORY_STATE_UPDATED"] = "NAVIGATION_ON_HISTORY_STATE_UPDATED";
})(NavigationServiceEvents = exports.NavigationServiceEvents || (exports.NavigationServiceEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/PortDispatcher/Bg/PortDispatcher.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/PortDispatcher/Bg/PortDispatcher.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const __1 = __webpack_require__(/*! ../../.. */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ../../../MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
const PortDispatcherEvents_1 = __webpack_require__(/*! ../PortDispatcherEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/PortDispatcher/PortDispatcherEvents.js");
let PortDispatcher = class PortDispatcher {
    constructor(container, logger, dispatcher) {
        this.container = container;
        this.logger = logger;
        this.dispatcher = dispatcher;
        this.ports = {};
        this.listeners = {};
        this.onBeforeEmitListeners = [];
        chrome.runtime.onConnect.addListener((port) => {
            this.ports[port.name] = port;
            this.logger.log(`Port "${port.name}" is created`);
            port.onMessage.addListener((message) => {
                message.port = port.name;
                this.internalEmit(PortDispatcherEvents_1.PortDispatcherEvents.ON_ANY_MESSAGE, message);
                if (this.isEventMessage(message)) {
                    const eventName = message.event;
                    this.internalEmit(eventName, message);
                }
            });
            port.onDisconnect.addListener(() => {
                this.logger.log(`Port "${port.name}" is disconnected`);
                delete this.ports[port.name];
                const portDisconnectedEvent = new __1.MarioEvent(PortDispatcherEvents_1.PortDispatcherEvents.PORT_DISCONNECTED, { name: port.name });
                this.dispatcher.emit(portDisconnectedEvent).then();
            });
            const portConnectedEvent = new __1.MarioEvent(PortDispatcherEvents_1.PortDispatcherEvents.PORT_CONNECTED, { name: port.name });
            this.dispatcher.emit(portConnectedEvent).then();
        });
    }
    on(useClass) {
        this.container.bind(useClass).toSelf().inSingletonScope();
        const handler = this.container.get(useClass);
        const eventName = handler.on();
        if (typeof this.listeners[eventName] === 'undefined') {
            this.listeners[eventName] = [];
        }
        this.listeners[eventName].push(handler);
        this.logger.log(`PortDispatcher: register a listener on event "${eventName}"`);
    }
    onBeforeEmit(listener) {
        this.onBeforeEmitListeners.push(listener);
    }
    emit(event, portNameOrBroadcast, skipInterception) {
        let targetPorts = [];
        if (portNameOrBroadcast) {
            const portName = portNameOrBroadcast;
            if (this.hasNotPort(portName)) {
                throw Error(`PortDispatcher: a named port "${portName}" is not found`);
            }
            const port = this.getPort(portName);
            targetPorts.push(port);
        }
        else {
            targetPorts = Object.keys(this.ports).map((v) => this.ports[v]);
        }
        const intercept = !skipInterception;
        if (intercept) {
            this.onBeforeEmitListeners.forEach((listener) => {
                try {
                    listener(event);
                }
                catch (e) {
                    this.logger.error(e);
                }
            });
        }
        targetPorts.forEach((port) => port.postMessage(event));
    }
    hasPort(portName) {
        return !!this.ports[portName];
    }
    hasNotPort(portName) {
        return !this.hasPort(portName);
    }
    disconnectPort(portName) {
        if (this.hasNotPort(portName)) {
            this.logger.log(`Port "${portName}" cannot be disconnected because it's not registered`);
        }
        const port = this.ports[portName];
        port.disconnect();
    }
    hasEventListeners(eventName) {
        return this.listeners[eventName] && this.listeners[eventName].length > 0;
    }
    isEventMessage(message) {
        return (typeof message === 'object') && (typeof message.event === 'string');
    }
    getPort(portName) {
        return this.ports[portName];
    }
    internalEmit(eventName, event) {
        if (!this.hasEventListeners(eventName)) {
            return;
        }
        this.listeners[eventName].forEach((listener) => {
            try {
                listener.handle(event).then();
            }
            catch (e) {
                this.logger.error(e);
            }
        });
    }
};
PortDispatcher = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.CONTAINER)),
    __param(1, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(2, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [Object, Object, Object])
], PortDispatcher);
exports.PortDispatcher = PortDispatcher;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/PortDispatcher/PortDispatcherEvents.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/PortDispatcher/PortDispatcherEvents.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var PortDispatcherEvents;
(function (PortDispatcherEvents) {
    PortDispatcherEvents["PORT_CONNECTED"] = "PORT_CONNECTED";
    PortDispatcherEvents["PORT_DISCONNECTED"] = "PORT_DISCONNECTED";
    PortDispatcherEvents["ON_ANY_MESSAGE"] = "ON_ANY_MESSAGE";
})(PortDispatcherEvents = exports.PortDispatcherEvents || (exports.PortDispatcherEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Proxy/Bg/ProxyEvents.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Proxy/Bg/ProxyEvents.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ProxyEvents;
(function (ProxyEvents) {
    // Notifies about proxy errors.
    ProxyEvents["PROXY_ERROR"] = "PROXY_ERROR";
    ProxyEvents["PROXY_BEFORE_CONNECT"] = "PROXY_BEFORE_CONNECT";
    ProxyEvents["PROXY_AFTER_CONNECT"] = "PROXY_AFTER_CONNECT";
    ProxyEvents["DIRECT_BEFORE_CONNECT"] = "DIRECT_BEFORE_CONNECT";
    ProxyEvents["DIRECT_AFTER_CONNECT"] = "DIRECT_AFTER_CONNECT";
})(ProxyEvents = exports.ProxyEvents || (exports.ProxyEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Proxy/Bg/ProxyService.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Proxy/Bg/ProxyService.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const BrowserEnum_1 = __webpack_require__(/*! ../../../BrowserEnum */ "./node_modules/@urbandevs/mario-core/dist/src/BrowserEnum.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ../../../MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
const ProxyServiceChrome_1 = __webpack_require__(/*! ./chrome/ProxyServiceChrome */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Proxy/Bg/chrome/ProxyServiceChrome.js");
const ProxyServiceFirefox_1 = __webpack_require__(/*! ./firefox/ProxyServiceFirefox */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Proxy/Bg/firefox/ProxyServiceFirefox.js");
const __1 = __webpack_require__(/*! ../../.. */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const ProxyEvents_1 = __webpack_require__(/*! ./ProxyEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Proxy/Bg/ProxyEvents.js");
let ProxyService = class ProxyService {
    constructor(browser, container, logger, internalDispatcher) {
        this.browser = browser;
        this.container = container;
        this.logger = logger;
        this.internalDispatcher = internalDispatcher;
        const implementations = {};
        implementations[BrowserEnum_1.BrowserEnum.CHROME_BROWSER] = ProxyServiceChrome_1.ProxyServiceChrome;
        implementations[BrowserEnum_1.BrowserEnum.FIREFOX_BROWSER] = ProxyServiceFirefox_1.ProxyServiceFirefox;
        const key = implementations.hasOwnProperty(this.browser) ? browser : BrowserEnum_1.BrowserEnum.CHROME_BROWSER;
        const INTERNAL_PROXY_SERVICE = 'INTERNAL_PROXY_SERVICE';
        this.container.bind(INTERNAL_PROXY_SERVICE).to(implementations[key]).inSingletonScope();
        this.proxyService = this.container.get(INTERNAL_PROXY_SERVICE);
        this.container.unbind(INTERNAL_PROXY_SERVICE);
    }
    hasCurrent() {
        return this.proxyService.hasCurrent();
    }
    current() {
        return this.proxyService.current();
    }
    connect(proxyServer, bypassList, eventPropagation = true) {
        return __awaiter(this, void 0, void 0, function* () {
            if (eventPropagation) {
                const beforeEvent = new __1.MarioEvent(ProxyEvents_1.ProxyEvents.PROXY_BEFORE_CONNECT, { proxyServer, bypassList });
                yield this.internalDispatcher.emit(beforeEvent);
            }
            this.logger.log(`ProxyService: connect to a proxy`, { proxyServer, bypassList });
            yield this.proxyService.connect(proxyServer, bypassList, eventPropagation);
            if (eventPropagation) {
                const afterEvent = new __1.MarioEvent(ProxyEvents_1.ProxyEvents.PROXY_AFTER_CONNECT, { proxyServer, bypassList });
                yield this.internalDispatcher.emit(afterEvent);
            }
        });
    }
    direct(eventPropagation = true) {
        return __awaiter(this, void 0, void 0, function* () {
            if (eventPropagation) {
                const beforeEvent = new __1.MarioEvent(ProxyEvents_1.ProxyEvents.DIRECT_BEFORE_CONNECT);
                yield this.internalDispatcher.emit(beforeEvent);
            }
            this.logger.log(`ProxyService: use direct mode`);
            yield this.proxyService.direct();
            if (eventPropagation) {
                const afterEvent = new __1.MarioEvent(ProxyEvents_1.ProxyEvents.DIRECT_AFTER_CONNECT);
                yield this.internalDispatcher.emit(afterEvent);
            }
        });
    }
    onAuthRequired(callback, filter = { urls: ['<all_urls>'] }, optExtraInfoSpec = ['blocking'], cancelRequestIfProxyIsNotCurrent = false) {
        return this.proxyService.onAuthRequired(callback, filter, optExtraInfoSpec, cancelRequestIfProxyIsNotCurrent);
    }
    removeAuthRequiredListener() {
        return this.proxyService.removeAuthRequiredListener();
    }
};
ProxyService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.BROWSER)),
    __param(1, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.CONTAINER)),
    __param(2, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(3, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [String, Object, Object, Object])
], ProxyService);
exports.ProxyService = ProxyService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Proxy/Bg/chrome/ProxyServiceChrome.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Proxy/Bg/chrome/ProxyServiceChrome.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ../../../../MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
const __1 = __webpack_require__(/*! ../../../.. */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const ProxyEvents_1 = __webpack_require__(/*! ../ProxyEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Proxy/Bg/ProxyEvents.js");
let ProxyServiceChrome = class ProxyServiceChrome {
    constructor(internalDispatcher) {
        this.internalDispatcher = internalDispatcher;
        chrome.proxy.onProxyError.addListener((e) => {
            this.internalDispatcher.emit(new __1.MarioEvent(ProxyEvents_1.ProxyEvents.PROXY_ERROR, e)).then();
        });
    }
    current() {
        return this._current;
    }
    hasCurrent() {
        return Boolean(this._current);
    }
    connect(proxyServer, bypassList) {
        const config = {
            mode: 'fixed_servers',
            rules: {
                bypassList,
                singleProxy: proxyServer,
            },
        };
        return new Promise((resolve, reject) => {
            try {
                chrome.proxy.settings.set({ value: config, scope: 'regular' }, () => {
                    this._current = proxyServer;
                    resolve();
                });
            }
            catch (e) {
                reject(e);
            }
        });
    }
    direct() {
        return new Promise((resolve, reject) => {
            const config = { mode: 'direct' };
            try {
                chrome.proxy.settings.set({ value: config, scope: 'regular' }, () => {
                    this._current = null;
                    resolve();
                });
            }
            catch (e) {
                reject(e);
            }
        });
    }
    onAuthRequired(callback, filter = { urls: ['<all_urls>'] }, optExtraInfoSpec = ['blocking'], cancelRequestIfProxyIsNotCurrent = false) {
        this.onAuthRequiredListener = (details) => {
            if (!details.isProxy) {
                return;
            }
            if (cancelRequestIfProxyIsNotCurrent && this.hasCurrent() && details.challenger &&
                (this._current.host !== details.challenger.host || this._current.port !== details.challenger.port)) {
                return { cancel: true };
            }
            return { authCredentials: callback() };
        };
        chrome.webRequest.onAuthRequired.addListener(this.onAuthRequiredListener, filter, optExtraInfoSpec);
    }
    removeAuthRequiredListener() {
        if (this.onAuthRequiredListener) {
            chrome.webRequest.onAuthRequired.removeListener(this.onAuthRequiredListener);
        }
    }
};
ProxyServiceChrome = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [Object])
], ProxyServiceChrome);
exports.ProxyServiceChrome = ProxyServiceChrome;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Proxy/Bg/firefox/ProxyServiceFirefox.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Proxy/Bg/firefox/ProxyServiceFirefox.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ../../../../MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
const __1 = __webpack_require__(/*! ../../../.. */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const ProxyEvents_1 = __webpack_require__(/*! ../ProxyEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Proxy/Bg/ProxyEvents.js");
let ProxyServiceFirefox = class ProxyServiceFirefox {
    constructor(internalDispatcher) {
        this.internalDispatcher = internalDispatcher;
        this._current = null;
        this.userProxy = false;
        browser.proxy.onError.addListener((e) => {
            this.internalDispatcher.emit(new __1.MarioEvent(ProxyEvents_1.ProxyEvents.PROXY_ERROR, e)).then();
        });
    }
    current() {
        return this._current;
    }
    hasCurrent() {
        return Boolean(this._current);
    }
    connect(proxyServer, bypassList) {
        return __awaiter(this, void 0, void 0, function* () {
            this.userProxy = true;
            this._current = proxyServer;
            if (!this.listener) {
                this.listener = (requestInfo) => {
                    if (!this.userProxy) {
                        return {
                            type: 'direct',
                        };
                    }
                    const url = new URL(requestInfo.url);
                    if (bypassList.indexOf(url.hostname) !== -1) {
                        return {
                            type: 'direct',
                        };
                    }
                    else {
                        return {
                            type: this._current.scheme,
                            host: this._current.host,
                            port: this._current.port,
                        };
                    }
                };
                return new Promise((resolve, reject) => {
                    try {
                        browser.proxy.onRequest.addListener(this.listener, { urls: ['<all_urls>'] });
                        resolve();
                    }
                    catch (e) {
                        reject(e);
                    }
                });
            }
        });
    }
    direct() {
        return __awaiter(this, void 0, void 0, function* () {
            this.userProxy = false;
            this._current = null;
        });
    }
    onAuthRequired(callback, filter = { urls: ['<all_urls>'] }, optExtraInfoSpec = ['blocking'], cancelRequestIfProxyIsNotCurrent = false) {
        this.onAuthRequiredListener = (details) => {
            if (!details.isProxy) {
                return;
            }
            if (cancelRequestIfProxyIsNotCurrent && this.hasCurrent() && details.proxyInfo &&
                (this._current.host !== details.proxyInfo.host || this._current.port !== details.proxyInfo.port)) {
                return { cancel: true };
            }
            return { authCredentials: callback() };
        };
        browser.webRequest.onAuthRequired.addListener(this.onAuthRequiredListener, filter, optExtraInfoSpec);
    }
    removeAuthRequiredListener() {
        if (this.onAuthRequiredListener) {
            browser.webRequest.onAuthRequired.removeListener(this.onAuthRequiredListener);
        }
    }
};
ProxyServiceFirefox = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [Object])
], ProxyServiceFirefox);
exports.ProxyServiceFirefox = ProxyServiceFirefox;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/StorageService/Bg/StorageService.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/StorageService/Bg/StorageService.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * StorageService
 */
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
let StorageService = class StorageService {
    get(key) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                chrome.storage.local.get(key, (data) => {
                    const response = typeof data[key] !== 'undefined' ? data[key] : null;
                    resolve(response);
                });
            });
        });
    }
    set(key, value) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                const data = {};
                data[key] = value;
                chrome.storage.local.set(data, () => resolve());
            });
        });
    }
    has(key) {
        return __awaiter(this, void 0, void 0, function* () {
            const value = yield this.get(key);
            return value !== null;
        });
    }
    remove(keys) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.storage.local.remove(keys, () => resolve());
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    clean() {
        chrome.storage.local.clear();
    }
};
StorageService = __decorate([
    inversify_1.injectable()
], StorageService);
exports.StorageService = StorageService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/Listeners/CreateTabEventListener.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/Listeners/CreateTabEventListener.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const __1 = __webpack_require__(/*! ../../../.. */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const TabContentEvents_1 = __webpack_require__(/*! ../../Content/TabContentEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Content/TabContentEvents.js");
let CreateTabEventListener = class CreateTabEventListener {
    constructor(tabService) {
        this.tabService = tabService;
    }
    on() {
        return TabContentEvents_1.TabContentEvents.CREATE_TAB;
    }
    handle(event, sender, sendResponse) {
        return __awaiter(this, void 0, void 0, function* () {
            const props = event.data;
            this.tabService.create(props);
        });
    }
};
CreateTabEventListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(__1.MARIO_TYPES.TAB_SERVICE)),
    __metadata("design:paramtypes", [Object])
], CreateTabEventListener);
exports.CreateTabEventListener = CreateTabEventListener;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabService.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabService.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const index_1 = __webpack_require__(/*! ../../../index */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ../../../MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
const TabServiceEvents_1 = __webpack_require__(/*! ./TabServiceEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabServiceEvents.js");
let TabService = class TabService {
    constructor(dispatcherService) {
        this.dispatcherService = dispatcherService;
        this.isListenOnCreated = false;
        this.isListenOnUpdated = false;
        this.isListenOnMoved = false;
        this.isListenOnActivated = false;
        this.isListenOnHighlighted = false;
        this.isListenOnDetached = false;
        this.isListenOnAttached = false;
        this.isListenOnRemoved = false;
        this.isListenOnReplaced = false;
        this.isListenOnZoomChange = false;
    }
    listenOnCreated() {
        if (!this.isListenOnCreated) {
            this.isListenOnCreated = true;
            chrome.tabs.onCreated.addListener((tab) => {
                const event = new index_1.MarioEvent(TabServiceEvents_1.TabServiceEvents.ON_TAB_CREATED, { tab });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    listenOnUpdated() {
        if (!this.isListenOnUpdated) {
            this.isListenOnUpdated = true;
            chrome.tabs.onUpdated.addListener((tabId, changeInfo, tab) => {
                const event = new index_1.MarioEvent(TabServiceEvents_1.TabServiceEvents.ON_TAB_UPDATED, { tabId, changeInfo, tab });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    listenOnMoved() {
        if (!this.isListenOnMoved) {
            this.isListenOnMoved = true;
            chrome.tabs.onMoved.addListener((tabId, moveInfo) => {
                const event = new index_1.MarioEvent(TabServiceEvents_1.TabServiceEvents.ON_TAB_MOVED, { tabId, moveInfo });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    listenOnActivated() {
        if (!this.isListenOnActivated) {
            this.isListenOnActivated = true;
            chrome.tabs.onActivated.addListener((activeInfo) => {
                const event = new index_1.MarioEvent(TabServiceEvents_1.TabServiceEvents.ON_TAB_ACTIVATED, { activeInfo });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    listenOnHighlighted() {
        if (!this.isListenOnHighlighted) {
            this.isListenOnHighlighted = true;
            chrome.tabs.onHighlighted.addListener((highlightInfo) => {
                const event = new index_1.MarioEvent(TabServiceEvents_1.TabServiceEvents.ON_TAB_HIGHLIGHTED, { highlightInfo });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    listenOnDetached() {
        if (!this.isListenOnDetached) {
            this.isListenOnDetached = true;
            chrome.tabs.onDetached.addListener((tabId, detachInfo) => {
                const event = new index_1.MarioEvent(TabServiceEvents_1.TabServiceEvents.ON_TAB_DETACHED, { tabId, detachInfo });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    listenOnAttached() {
        if (!this.isListenOnAttached) {
            this.isListenOnAttached = true;
            chrome.tabs.onAttached.addListener((tabId, attachInfo) => {
                const event = new index_1.MarioEvent(TabServiceEvents_1.TabServiceEvents.ON_TAB_ATTACHED, { tabId, attachInfo });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    listenOnRemoved() {
        if (!this.isListenOnRemoved) {
            this.isListenOnRemoved = true;
            chrome.tabs.onRemoved.addListener((tabId, removeInfo) => {
                const event = new index_1.MarioEvent(TabServiceEvents_1.TabServiceEvents.ON_TAB_REMOVED, { tabId, removeInfo });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    listenOnReplaced() {
        if (!this.isListenOnReplaced) {
            this.isListenOnReplaced = true;
            chrome.tabs.onReplaced.addListener((addedTabId, removedTabId) => {
                const event = new index_1.MarioEvent(TabServiceEvents_1.TabServiceEvents.ON_TAB_REPLACED, { addedTabId, removedTabId });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    listenOnZoomChange() {
        if (!this.isListenOnZoomChange) {
            this.isListenOnZoomChange = true;
            chrome.tabs.onZoomChange.addListener((zoomChangeInfo) => {
                const event = new index_1.MarioEvent(TabServiceEvents_1.TabServiceEvents.ON_TAB_ZOOM_CHANGE, { zoomChangeInfo });
                this.dispatcherService.emit(event).then();
            });
        }
    }
    /**
     * Sends a single message to event listeners within your extension/app or a different extension/app
     * @param tabId
     * @param message
     */
    sendMessage(tabId, message) {
        chrome.tabs.sendMessage(tabId, message, result => {
            if (chrome.runtime.lastError) {
                // do nothing
            }
        });
    }
    /**
     * Gets all tabs that have the specified properties, or all tabs if no properties are specified.
     */
    query(queryInfo) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.tabs.query(queryInfo, (tabs) => {
                        resolve(tabs);
                    });
                }
                catch (e) {
                    reject();
                }
            });
        });
    }
    /**
     * Reload a tab.
     *
     * @param tabId
     * @param reloadProperties
     * @returns {Promise<any>}
     */
    reload(tabId, reloadProperties = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.tabs.reload(tabId, reloadProperties, () => {
                        resolve();
                    });
                }
                catch (e) {
                    reject();
                }
            });
        });
    }
    create(properties) {
        chrome.tabs.create(properties);
    }
    get(tabId) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.tabs.get(tabId, (tab) => resolve(tab));
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    getCurrent() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.tabs.getCurrent((tab) => resolve(tab));
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    duplicate(tabId) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.tabs.duplicate(tabId, (tab) => resolve(tab));
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    highlight(highlightInfo) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.tabs.highlight(highlightInfo, () => resolve());
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    update(updateProperties, tabId) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.tabs.update(tabId, updateProperties, (tab) => resolve(tab));
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    move(tabs, moveProperties) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.tabs.move(tabs, moveProperties, (tabs) => resolve(tabs));
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
    remove(tabs) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.tabs.remove(tabs, (tabs) => resolve(tabs));
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
};
TabService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [Object])
], TabService);
exports.TabService = TabService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabServiceEvents.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabServiceEvents.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var TabServiceEvents;
(function (TabServiceEvents) {
    TabServiceEvents["ON_TAB_CREATED"] = "ON_TAB_CREATED";
    TabServiceEvents["ON_TAB_UPDATED"] = "ON_TAB_UPDATED";
    TabServiceEvents["ON_TAB_MOVED"] = "ON_TAB_MOVED";
    TabServiceEvents["ON_TAB_ACTIVATED"] = "ON_TAB_ACTIVATED";
    TabServiceEvents["ON_TAB_HIGHLIGHTED"] = "ON_TAB_HIGHLIGHTED";
    TabServiceEvents["ON_TAB_DETACHED"] = "ON_TAB_DETACHED";
    TabServiceEvents["ON_TAB_ATTACHED"] = "ON_TAB_ATTACHED";
    TabServiceEvents["ON_TAB_REMOVED"] = "ON_TAB_REMOVED";
    TabServiceEvents["ON_TAB_REPLACED"] = "ON_TAB_REPLACED";
    TabServiceEvents["ON_TAB_ZOOM_CHANGE"] = "ON_TAB_ZOOM_CHANGE";
})(TabServiceEvents = exports.TabServiceEvents || (exports.TabServiceEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Content/TabContentEvents.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Content/TabContentEvents.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var TabContentEvents;
(function (TabContentEvents) {
    TabContentEvents["CREATE_TAB"] = "CREATE_TAB";
})(TabContentEvents = exports.TabContentEvents || (exports.TabContentEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestService.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestService.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const index_1 = __webpack_require__(/*! ../../../index */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ../../../MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
const WebRequestServiceEvents_1 = __webpack_require__(/*! ./WebRequestServiceEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents.js");
let WebRequestService = class WebRequestService {
    constructor(dispatcherService) {
        this.dispatcherService = dispatcherService;
        this.isListenOnBeforeRequest = false;
        this.isListenOnBeforeSendHeaders = false;
        this.isListenOnSendHeaders = false;
        this.isListenOnHeadersReceived = false;
        this.isListenOnAuthRequired = false;
        this.isListenOnResponseStarted = false;
        this.isListenOnBeforeRedirect = false;
        this.isListenOnCompleted = false;
        this.isListenOnErrorOccurred = false;
        this.isListenOnActionIgnored = false;
    }
    listenOnBeforeRequest(filter, opt_extraInfoSpec) {
        if (!this.isListenOnBeforeRequest) {
            this.isListenOnBeforeRequest = true;
            chrome.webRequest.onBeforeRequest.addListener((details) => {
                const event = new index_1.MarioEvent(WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_BEFORE_REQUEST, { details });
                this.dispatcherService.emit(event).then();
            }, filter, opt_extraInfoSpec);
        }
    }
    listenOnBeforeSendHeaders(filter, opt_extraInfoSpec) {
        if (!this.isListenOnBeforeSendHeaders) {
            this.isListenOnBeforeSendHeaders = true;
            chrome.webRequest.onBeforeSendHeaders.addListener((details) => {
                const event = new index_1.MarioEvent(WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_BEFORE_SEND_HEADERS, { details });
                this.dispatcherService.emit(event).then();
            }, filter, opt_extraInfoSpec);
        }
    }
    listenOnSendHeaders(filter, opt_extraInfoSpec) {
        if (!this.isListenOnSendHeaders) {
            this.isListenOnSendHeaders = true;
            chrome.webRequest.onSendHeaders.addListener((details) => {
                const event = new index_1.MarioEvent(WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_SEND_HEADERS, { details });
                this.dispatcherService.emit(event).then();
            }, filter, opt_extraInfoSpec);
        }
    }
    listenOnHeadersReceived(filter, opt_extraInfoSpec) {
        if (!this.isListenOnHeadersReceived) {
            this.isListenOnHeadersReceived = true;
            chrome.webRequest.onHeadersReceived.addListener((details) => {
                const event = new index_1.MarioEvent(WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_HEADERS_RECEIVED, { details });
                this.dispatcherService.emit(event).then();
            }, filter, opt_extraInfoSpec);
        }
    }
    listenOnAuthRequired(filter, opt_extraInfoSpec) {
        if (!this.isListenOnAuthRequired) {
            this.isListenOnAuthRequired = true;
            chrome.webRequest.onAuthRequired.addListener((details, callback) => {
                const event = new index_1.MarioEvent(WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_AUTH_REQUIRED, { details, callback });
                this.dispatcherService.emit(event).then();
            }, filter, opt_extraInfoSpec);
        }
    }
    listenOnResponseStarted(filter, opt_extraInfoSpec) {
        if (!this.isListenOnResponseStarted) {
            this.isListenOnResponseStarted = true;
            chrome.webRequest.onResponseStarted.addListener((details) => {
                const event = new index_1.MarioEvent(WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_RESPONSE_STARTED, { details });
                this.dispatcherService.emit(event).then();
            }, filter, opt_extraInfoSpec);
        }
    }
    listenOnBeforeRedirect(filter, opt_extraInfoSpec) {
        if (!this.isListenOnBeforeRedirect) {
            this.isListenOnBeforeRedirect = true;
            chrome.webRequest.onBeforeRedirect.addListener((details) => {
                const event = new index_1.MarioEvent(WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_BEFORE_REDIRECT, { details });
                this.dispatcherService.emit(event).then();
            }, filter, opt_extraInfoSpec);
        }
    }
    listenOnCompleted(filter, opt_extraInfoSpec) {
        if (!this.isListenOnCompleted) {
            this.isListenOnCompleted = true;
            chrome.webRequest.onCompleted.addListener((details) => {
                const event = new index_1.MarioEvent(WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_COMPLETED, { details });
                this.dispatcherService.emit(event).then();
            }, filter, opt_extraInfoSpec);
        }
    }
    listenOnErrorOccurred(filter) {
        if (!this.isListenOnErrorOccurred) {
            this.isListenOnErrorOccurred = true;
            chrome.webRequest.onErrorOccurred.addListener((details) => {
                const event = new index_1.MarioEvent(WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_ERROR_OCCURRED, { details });
                this.dispatcherService.emit(event).then();
            }, filter);
        }
    }
    listenOnActionIgnored(filter, opt_extraInfoSpec) {
        if (!this.isListenOnActionIgnored) {
            this.isListenOnActionIgnored = true;
            chrome.webRequest.onActionIgnored.addListener((details) => {
                const event = new index_1.MarioEvent(WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_ACTION_IGNORED, { details });
                this.dispatcherService.emit(event).then();
            }, filter, opt_extraInfoSpec);
        }
    }
    /**
    * Needs to be called when the behavior of the webRequest handlers has changed to prevent incorrect handling due to caching.
    * This function call is expensive. Don't call it often.
    * @param handlerBehaviorChanged
    * @returns {Promise<void>}
    */
    handlerBehaviorChanged() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                try {
                    chrome.webRequest.handlerBehaviorChanged(() => resolve());
                }
                catch (e) {
                    reject(e);
                }
            });
        });
    }
};
WebRequestService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [Object])
], WebRequestService);
exports.WebRequestService = WebRequestService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var WebRequestServiceEvents;
(function (WebRequestServiceEvents) {
    WebRequestServiceEvents["WEB_REQUEST_ON_BEFORE_REQUEST"] = "WEB_REQUEST_ON_BEFORE_REQUEST";
    WebRequestServiceEvents["WEB_REQUEST_ON_BEFORE_SEND_HEADERS"] = "WEB_REQUEST_ON_BEFORE_SEND_HEADERS";
    WebRequestServiceEvents["WEB_REQUEST_ON_SEND_HEADERS"] = "WEB_REQUEST_ON_SEND_HEADERS";
    WebRequestServiceEvents["WEB_REQUEST_ON_HEADERS_RECEIVED"] = "WEB_REQUEST_ON_HEADERS_RECEIVED";
    WebRequestServiceEvents["WEB_REQUEST_ON_AUTH_REQUIRED"] = "WEB_REQUEST_ON_AUTH_REQUIRED";
    WebRequestServiceEvents["WEB_REQUEST_ON_RESPONSE_STARTED"] = "WEB_REQUEST_ON_RESPONSE_STARTED";
    WebRequestServiceEvents["WEB_REQUEST_ON_BEFORE_REDIRECT"] = "WEB_REQUEST_ON_BEFORE_REDIRECT";
    WebRequestServiceEvents["WEB_REQUEST_ON_COMPLETED"] = "WEB_REQUEST_ON_COMPLETED";
    WebRequestServiceEvents["WEB_REQUEST_ON_ERROR_OCCURRED"] = "WEB_REQUEST_ON_ERROR_OCCURRED";
    WebRequestServiceEvents["WEB_REQUEST_ON_ACTION_IGNORED"] = "WEB_REQUEST_ON_ACTION_IGNORED";
})(WebRequestServiceEvents = exports.WebRequestServiceEvents || (exports.WebRequestServiceEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WindowPost/Bg/PostBgDispatcher.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/WindowPost/Bg/PostBgDispatcher.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const MARIO_TYPES_1 = __webpack_require__(/*! ../../../MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
const MarioEvent_1 = __webpack_require__(/*! ./../../../Core/MarioEvent */ "./node_modules/@urbandevs/mario-core/dist/src/Core/MarioEvent.js");
const PostBgEvents_1 = __webpack_require__(/*! ./PostBgEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WindowPost/Bg/PostBgEvents.js");
let PostBgDispatcher = class PostBgDispatcher {
    constructor(externalDispatcher) {
        this.externalDispatcher = externalDispatcher;
    }
    emitResponse(tabId, requestId, response) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = { requestId, response };
            const marioEvent = new MarioEvent_1.MarioEvent(PostBgEvents_1.PostBgEvents.RESPONSE, data, requestId);
            yield this.externalDispatcher.emit(tabId, marioEvent);
        });
    }
    emitEvent(tabId, event, payload) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = { event, payload };
            const marioEvent = new MarioEvent_1.MarioEvent(PostBgEvents_1.PostBgEvents.EVENT, data);
            yield this.externalDispatcher.emit(tabId, marioEvent);
        });
    }
};
PostBgDispatcher = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(MARIO_TYPES_1.MARIO_TYPES.EXTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [Object])
], PostBgDispatcher);
exports.PostBgDispatcher = PostBgDispatcher;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WindowPost/Bg/PostBgEvents.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/Packages/WindowPost/Bg/PostBgEvents.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var PostBgEvents;
(function (PostBgEvents) {
    PostBgEvents["RESPONSE"] = "WINDOW_POST_MESSAGE_RESPONSE";
    PostBgEvents["EVENT"] = "WINDOW_POST_MESSAGE_EVENT";
})(PostBgEvents = exports.PostBgEvents || (exports.PostBgEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-core/dist/src/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-core/dist/src/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Mario_1 = __webpack_require__(/*! ./Mario */ "./node_modules/@urbandevs/mario-core/dist/src/Mario.js");
exports.Mario = Mario_1.Mario;
var MarioModule_1 = __webpack_require__(/*! ./Core/MarioModule */ "./node_modules/@urbandevs/mario-core/dist/src/Core/MarioModule.js");
exports.MarioModule = MarioModule_1.MarioModule;
var MarioEvent_1 = __webpack_require__(/*! ./Core/MarioEvent */ "./node_modules/@urbandevs/mario-core/dist/src/Core/MarioEvent.js");
exports.MarioEvent = MarioEvent_1.MarioEvent;
var MARIO_TYPES_1 = __webpack_require__(/*! ./MARIO_TYPES */ "./node_modules/@urbandevs/mario-core/dist/src/MARIO_TYPES.js");
exports.MARIO_TYPES = MARIO_TYPES_1.MARIO_TYPES;
var ExternalDispatcher_1 = __webpack_require__(/*! ./Packages/ExternalDispatcher/Bg/ExternalDispatcher */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/ExternalDispatcher/Bg/ExternalDispatcher.js");
exports.ExternalDispatcher = ExternalDispatcher_1.ExternalDispatcher;
var CacheService_1 = __webpack_require__(/*! ./Packages/Cache/Bg/CacheService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Cache/Bg/CacheService.js");
exports.CacheService = CacheService_1.CacheService;
var ContentDispatcherService_1 = __webpack_require__(/*! ./Packages/ContentDispatcher/Bg/ContentDispatcherService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/ContentDispatcher/Bg/ContentDispatcherService.js");
exports.ContentDispatcherService = ContentDispatcherService_1.ContentDispatcherService;
var InternalDispatcher_1 = __webpack_require__(/*! ./Packages/InternalDispatcher/Bg/InternalDispatcher */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/InternalDispatcher/Bg/InternalDispatcher.js");
exports.InternalDispatcher = InternalDispatcher_1.InternalDispatcher;
var LoggerService_1 = __webpack_require__(/*! ./Packages/Logger/Bg/LoggerService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Logger/Bg/LoggerService.js");
exports.LoggerService = LoggerService_1.LoggerService;
var TabService_1 = __webpack_require__(/*! ./Packages/Tab/Bg/TabService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabService.js");
exports.TabService = TabService_1.TabService;
var NavigationService_1 = __webpack_require__(/*! ./Packages/Navigation/Bg/NavigationService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Navigation/Bg/NavigationService.js");
exports.NavigationService = NavigationService_1.NavigationService;
var WebRequestService_1 = __webpack_require__(/*! ./Packages/WebRequest/Bg/WebRequestService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestService.js");
exports.WebRequestService = WebRequestService_1.WebRequestService;
var StorageService_1 = __webpack_require__(/*! ./Packages/StorageService/Bg/StorageService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/StorageService/Bg/StorageService.js");
exports.StorageService = StorageService_1.StorageService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-counter/dist/CounterModule.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-counter/dist/CounterModule.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CounterModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const CounterModuleTypes_1 = __webpack_require__(/*! ./CounterModuleTypes */ "./node_modules/@urbandevs/mario-counter/dist/CounterModuleTypes.js");
const CounterService_1 = __webpack_require__(/*! ./CounterService */ "./node_modules/@urbandevs/mario-counter/dist/CounterService.js");
class CounterModule extends src_1.MarioModule {
    name() {
        return 'CounterModule';
    }
    static use(mario, options) {
        return mario.registerModule(CounterModule, options);
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this.mario().container().bind(CounterModuleTypes_1.CounterModuleTypes.COUNTER_STORAGE_SERVICE).toConstantValue(options.storageService);
            this.mario().registerService(CounterModuleTypes_1.CounterModuleTypes.COUNTER_SERVICE, CounterService_1.CounterService);
        });
    }
}
exports.CounterModule = CounterModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-counter/dist/CounterModuleTypes.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-counter/dist/CounterModuleTypes.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CounterModuleTypes = void 0;
const CounterModuleTypes = {
    COUNTER_SERVICE: Symbol.for('COUNTER_SERVICE'),
    COUNTER_STORAGE_SERVICE: Symbol.for('COUNTER_STORAGE_SERVICE'),
};
exports.CounterModuleTypes = CounterModuleTypes;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-counter/dist/CounterService.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-counter/dist/CounterService.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CounterService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const CounterModuleTypes_1 = __webpack_require__(/*! ./CounterModuleTypes */ "./node_modules/@urbandevs/mario-counter/dist/CounterModuleTypes.js");
let CounterService = class CounterService {
    constructor(storageService) {
        this.storageService = storageService;
        this.key = 'COUNTER';
    }
    count(keyword) {
        return __awaiter(this, void 0, void 0, function* () {
            if (yield this.hasNot(keyword)) {
                return 0;
            }
            const counter = yield this.get(keyword);
            return counter.value;
        });
    }
    increase(counter) {
        return __awaiter(this, void 0, void 0, function* () {
            const key = this.mapKeyWord(counter);
            const data = this.makeCounter(1);
            if (yield this.has(counter)) {
                const storageData = JSON.parse(yield this.storageService.get(key));
                data.value = storageData.value + 1;
            }
            yield this.storageService.set(key, JSON.stringify(data));
            return data.value;
        });
    }
    get(counter) {
        return __awaiter(this, void 0, void 0, function* () {
            if (yield this.hasNot(counter)) {
                throw new Error(`Counter with name "${counter}" is not found`);
            }
            const key = this.mapKeyWord(counter);
            return JSON.parse(yield this.storageService.get(key));
        });
    }
    set(counter, numb) {
        return __awaiter(this, void 0, void 0, function* () {
            const key = this.mapKeyWord(counter);
            const data = this.makeCounter(numb);
            yield this.storageService.set(key, JSON.stringify(data));
        });
    }
    has(counter) {
        return __awaiter(this, void 0, void 0, function* () {
            const key = this.mapKeyWord(counter);
            return this.storageService.has(key);
        });
    }
    hasNot(counter) {
        return __awaiter(this, void 0, void 0, function* () {
            return !(yield this.has(counter));
        });
    }
    reset(counter) {
        return __awaiter(this, void 0, void 0, function* () {
            const key = this.mapKeyWord(counter);
            const data = this.makeCounter(0);
            yield this.storageService.set(key, JSON.stringify(data));
            return 0;
        });
    }
    mapKeyWord(keyword) {
        return `${this.key}_${keyword}`;
    }
    makeCounter(value) {
        return {
            modified: Date.now(),
            value,
        };
    }
};
CounterService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(CounterModuleTypes_1.CounterModuleTypes.COUNTER_STORAGE_SERVICE)),
    __metadata("design:paramtypes", [Object])
], CounterService);
exports.CounterService = CounterService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-country-restriction-check/dist/CountryRestrictionModule.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-country-restriction-check/dist/CountryRestrictionModule.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CountryRestrictionModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const CountryRestrictionModuleTypes_1 = __webpack_require__(/*! ./CountryRestrictionModuleTypes */ "./node_modules/@urbandevs/mario-country-restriction-check/dist/CountryRestrictionModuleTypes.js");
const CountryRestrictionService_1 = __webpack_require__(/*! ./services/CountryRestrictionService */ "./node_modules/@urbandevs/mario-country-restriction-check/dist/services/CountryRestrictionService.js");
class CountryRestrictionModule extends src_1.MarioModule {
    name() {
        return 'CountryRestrictionModule';
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            const opts = options;
            this.mario().container().bind(CountryRestrictionModuleTypes_1.CountryRestrictionModuleTypes.RESTRICTION_API_URL).toConstantValue(opts.apiUrl);
            this.mario().registerService(CountryRestrictionModuleTypes_1.CountryRestrictionModuleTypes.RESTRICTION_SERVICE, CountryRestrictionService_1.CountryRestrictionService);
        });
    }
    static use(mario, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return mario.registerModule(CountryRestrictionModule, options);
        });
    }
}
exports.CountryRestrictionModule = CountryRestrictionModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-country-restriction-check/dist/CountryRestrictionModuleTypes.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-country-restriction-check/dist/CountryRestrictionModuleTypes.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CountryRestrictionModuleTypes = void 0;
const CountryRestrictionModuleTypes = {
    RESTRICTION_SERVICE: Symbol.for('RESTRICTION_SERVICE'),
    RESTRICTION_API_URL: Symbol.for('RESTRICTION_API_URL'),
};
exports.CountryRestrictionModuleTypes = CountryRestrictionModuleTypes;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-country-restriction-check/dist/services/CountryRestrictionService.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-country-restriction-check/dist/services/CountryRestrictionService.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CountryRestrictionService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const HttpClientModuleTypes_1 = __webpack_require__(/*! @urbandevs/mario-http-client/dist/HttpClientModuleTypes */ "./node_modules/@urbandevs/mario-http-client/dist/HttpClientModuleTypes.js");
const HttpClient_1 = __webpack_require__(/*! @urbandevs/mario-http-client/dist/services/HttpClient */ "./node_modules/@urbandevs/mario-http-client/dist/services/HttpClient.js");
const CountryRestrictionModuleTypes_1 = __webpack_require__(/*! ../CountryRestrictionModuleTypes */ "./node_modules/@urbandevs/mario-country-restriction-check/dist/CountryRestrictionModuleTypes.js");
let CountryRestrictionService = class CountryRestrictionService {
    constructor(apiUrl, httpClient, logger) {
        this.apiUrl = apiUrl;
        this.httpClient = httpClient;
        this.logger = logger;
        this.restricted = false;
    }
    checkCountryRestriction() {
        return __awaiter(this, void 0, void 0, function* () {
            const endpoint = this.buildEndpoint('/website/country/validate');
            const headers = new Headers();
            headers.append('content-Type', 'application/json');
            const options = {
                headers,
            };
            const extra = {
                skipInterceptor: true,
                forceRequest: true,
            };
            try {
                yield this.httpClient.get(endpoint, options, extra).then(res => {
                    this.restricted = (res === null || res === void 0 ? void 0 : res.access) === 'CLOSED';
                    this.countryName = res === null || res === void 0 ? void 0 : res.country;
                });
            }
            catch (e) {
                this.logger.error(e);
            }
        });
    }
    isRestricted() {
        return this.restricted;
    }
    getRestrictedCountryName() {
        return this.countryName;
    }
    buildEndpoint(url) {
        return this.apiUrl + url;
    }
};
CountryRestrictionService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(CountryRestrictionModuleTypes_1.CountryRestrictionModuleTypes.RESTRICTION_API_URL)),
    __param(1, inversify_1.inject(HttpClientModuleTypes_1.HTTP_CLIENT_MODULE_TYPES.HTTP_CLIENT)),
    __param(2, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [String, HttpClient_1.HttpClient, Object])
], CountryRestrictionService);
exports.CountryRestrictionService = CountryRestrictionService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsEvents.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsEvents.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleAnalyticsEvents = void 0;
var GoogleAnalyticsEvents;
(function (GoogleAnalyticsEvents) {
    GoogleAnalyticsEvents["TRACK_PAGE"] = "GOOGLE_ANALYTICS_TRACK_PAGE";
    GoogleAnalyticsEvents["TRACK_EVENT"] = "GOOGLE_ANALYTICS_TRACK_EVENT";
})(GoogleAnalyticsEvents = exports.GoogleAnalyticsEvents || (exports.GoogleAnalyticsEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsModule.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsModule.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleAnalyticsModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const GoogleAnalyticsService_1 = __webpack_require__(/*! ./GoogleAnalyticsService */ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsService.js");
const GoogleAnalyticsTypes_1 = __webpack_require__(/*! ./GoogleAnalyticsTypes */ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsTypes.js");
const GoogleAnalyticsTrackEvent_1 = __webpack_require__(/*! ./listeners/GoogleAnalyticsTrackEvent */ "./node_modules/@urbandevs/mario-google-analytics/dist/listeners/GoogleAnalyticsTrackEvent.js");
const GoogleAnalyticsTrackPage_1 = __webpack_require__(/*! ./listeners/GoogleAnalyticsTrackPage */ "./node_modules/@urbandevs/mario-google-analytics/dist/listeners/GoogleAnalyticsTrackPage.js");
const GoogleAnalyticsStorage_1 = __webpack_require__(/*! ./GoogleAnalyticsStorage */ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsStorage.js");
class GoogleAnalyticsModule extends src_1.MarioModule {
    name() {
        return 'GoogleAnalyticsModule';
    }
    static use(mario, options) {
        return mario.registerModule(GoogleAnalyticsModule, options);
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this.mario().logger().log(`GoogleAnalyticsModule: trackerId: ${options.trackerId}`);
            this.mario().logger().log(`GoogleAnalyticsModule: hostName: ${options.hostName}`);
            this.mario().logger().log(`GoogleAnalyticsModule: clientId: ${options.clientId}`);
            this.mario().logger().log(`GoogleAnalyticsModule: enabled: ${options.enabled}`);
            this.mario().container().bind(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_APP_VERSION).toConstantValue(options.appVersion);
            this.mario().container().bind(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_APP_NAME).toConstantValue(options.appName);
            this.mario().container().bind(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_CLIENT_ID).toConstantValue(options.clientId);
            this.mario().container().bind(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_HOST_NAME).toConstantValue(options.hostName);
            this.mario().container().bind(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_TRACKER_ID).toConstantValue(options.trackerId);
            this.mario().container().bind(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_ENABLED).toConstantValue(options.enabled);
            this.mario()
                .container()
                .bind(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_HOLD_LAST_EVENTS)
                .toConstantValue(options.holdLastEvents || 0);
            this.mario().registerService(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_SERVICE, GoogleAnalyticsService_1.GoogleAnalyticsService);
            this.mario().registerService(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_STORAGE, GoogleAnalyticsStorage_1.GoogleAnalyticsStorage);
            this.mario().externalDispatcher().on(GoogleAnalyticsTrackPage_1.GoogleAnalyticsTrackPage);
            this.mario().externalDispatcher().on(GoogleAnalyticsTrackEvent_1.GoogleAnalyticsTrackEvent);
        });
    }
}
exports.GoogleAnalyticsModule = GoogleAnalyticsModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsService.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsService.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleAnalyticsService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const GoogleAnalyticsStorage_1 = __webpack_require__(/*! ./GoogleAnalyticsStorage */ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsStorage.js");
const GoogleAnalyticsTypes_1 = __webpack_require__(/*! ./GoogleAnalyticsTypes */ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsTypes.js");
let GoogleAnalyticsService = class GoogleAnalyticsService {
    constructor(appVersion, appName, hostName, trackerId, clientId, enabled, hold, storage) {
        this.appVersion = appVersion;
        this.appName = appName;
        this.hostName = hostName;
        this.trackerId = trackerId;
        this.clientId = clientId;
        this.enabled = enabled;
        this.hold = hold;
        this.storage = storage;
    }
    enable() {
        this.enabled = true;
        this.storage.get()
            .then(((events) => {
            events.forEach((event) => {
                this.trackEvent(event.category, event.action, event.label, event.value);
            });
            this.storage.clean().then();
        }));
    }
    disable() {
        this.enabled = false;
    }
    isEnabled() {
        return this.enabled;
    }
    trackEvent(category, action, label = null, value = null) {
        if (!this.enabled) {
            if (this.hold) {
                const event = { category, action, label, value };
                this.storage.add(event).then();
            }
            return;
        }
        const params = this.prepareRequestParams();
        params.append('t', 'event');
        params.append('ec', category);
        params.append('ea', action);
        if (label) {
            params.append('el', label);
        }
        if (value) {
            params.append('ev', value);
        }
        this.send(params);
    }
    trackPageView(pageUrl, pageTitle) {
        if (!this.enabled) {
            return;
        }
        const params = this.prepareRequestParams();
        params.append('t', 'pageview');
        params.append('dh', this.hostName);
        params.append('dp', pageUrl);
        params.append('dt', pageTitle);
        this.send(params);
    }
    setHoldLastEvents(hold) {
        this.hold = hold;
    }
    getHoldLastEvents() {
        return this.hold;
    }
    prepareRequestParams() {
        const params = new URLSearchParams();
        params.append('v', '1');
        params.append('tid', this.trackerId);
        params.append('cid', this.clientId);
        params.append('an', this.appName);
        params.append('av', this.appVersion);
        return params;
    }
    send(params) {
        const request = new XMLHttpRequest();
        request.open('POST', 'https://www.google-analytics.com/collect', true);
        request.send(params.toString());
    }
};
GoogleAnalyticsService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_APP_VERSION)),
    __param(1, inversify_1.inject(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_APP_NAME)),
    __param(2, inversify_1.inject(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_HOST_NAME)),
    __param(3, inversify_1.inject(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_TRACKER_ID)),
    __param(4, inversify_1.inject(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_CLIENT_ID)),
    __param(5, inversify_1.inject(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_ENABLED)),
    __param(6, inversify_1.inject(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_HOLD_LAST_EVENTS)),
    __param(7, inversify_1.inject(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_STORAGE)),
    __metadata("design:paramtypes", [String, String, String, String, String, Boolean, Number, GoogleAnalyticsStorage_1.GoogleAnalyticsStorage])
], GoogleAnalyticsService);
exports.GoogleAnalyticsService = GoogleAnalyticsService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsStorage.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsStorage.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleAnalyticsStorage = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const GoogleAnalyticsTypes_1 = __webpack_require__(/*! ./GoogleAnalyticsTypes */ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsTypes.js");
let GoogleAnalyticsStorage = class GoogleAnalyticsStorage {
    constructor(storage, hold) {
        this.storage = storage;
        this.hold = hold;
        this.key = 'GOOGLE_ANALYTICS_EVENTS';
    }
    add(event) {
        return __awaiter(this, void 0, void 0, function* () {
            let events = yield this.get();
            events = events.splice(-this.hold);
            events.push(event);
            yield this.store(events);
        });
    }
    get() {
        return __awaiter(this, void 0, void 0, function* () {
            let result = [];
            if (yield this.storage.has(this.key)) {
                const json = yield this.storage.get(this.key);
                result = JSON.parse(json);
            }
            return result;
        });
    }
    has() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.has(this.key);
        });
    }
    store(events) {
        return __awaiter(this, void 0, void 0, function* () {
            const json = JSON.stringify(events);
            yield this.storage.set(this.key, json);
        });
    }
    clean() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storage.set(this.key, '[]');
        });
    }
};
GoogleAnalyticsStorage = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.STORAGE_SERVICE)),
    __param(1, inversify_1.inject(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_HOLD_LAST_EVENTS)),
    __metadata("design:paramtypes", [Object, Number])
], GoogleAnalyticsStorage);
exports.GoogleAnalyticsStorage = GoogleAnalyticsStorage;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsTypes.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsTypes.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleAnalyticsTypes = void 0;
const GoogleAnalyticsTypes = {
    GOOGLE_ANALYTICS_APP_NAME: Symbol.for('GOOGLE_ANALYTICS_APP_NAME'),
    GOOGLE_ANALYTICS_APP_VERSION: Symbol.for('GOOGLE_ANALYTICS_APP_VERSION'),
    GOOGLE_ANALYTICS_CLIENT_ID: Symbol.for('GOOGLE_ANALYTICS_CLIENT_ID'),
    GOOGLE_ANALYTICS_ENABLED: Symbol.for('GOOGLE_ANALYTICS_ENABLED'),
    GOOGLE_ANALYTICS_HOLD_LAST_EVENTS: Symbol.for('GOOGLE_ANALYTICS_HOLD_LAST_EVENTS'),
    GOOGLE_ANALYTICS_HOST_NAME: Symbol.for('GOOGLE_ANALYTICS_HOST_NAME'),
    GOOGLE_ANALYTICS_SERVICE: Symbol.for('GOOGLE_ANALYTICS_SERVICE'),
    GOOGLE_ANALYTICS_STORAGE: Symbol.for('GOOGLE_ANALYTICS_STORAGE'),
    GOOGLE_ANALYTICS_TRACKER_ID: Symbol.for('GOOGLE_ANALYTICS_TRACKER_ID'),
};
exports.GoogleAnalyticsTypes = GoogleAnalyticsTypes;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-google-analytics/dist/listeners/GoogleAnalyticsTrackEvent.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-google-analytics/dist/listeners/GoogleAnalyticsTrackEvent.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleAnalyticsTrackEvent = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const GoogleAnalyticsEvents_1 = __webpack_require__(/*! ../GoogleAnalyticsEvents */ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsEvents.js");
const GoogleAnalyticsTypes_1 = __webpack_require__(/*! ../GoogleAnalyticsTypes */ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsTypes.js");
const GoogleAnalyticsService_1 = __webpack_require__(/*! ../GoogleAnalyticsService */ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsService.js");
let GoogleAnalyticsTrackEvent = class GoogleAnalyticsTrackEvent {
    constructor(googleAnalyticsService) {
        this.googleAnalyticsService = googleAnalyticsService;
    }
    on() {
        return GoogleAnalyticsEvents_1.GoogleAnalyticsEvents.TRACK_EVENT;
    }
    handle(event, sender, sendResponse) {
        return __awaiter(this, void 0, void 0, function* () {
            const message = event.data;
            this.googleAnalyticsService.trackEvent(message.category, message.action, message.label, message.value);
            return;
        });
    }
};
GoogleAnalyticsTrackEvent = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_SERVICE)),
    __metadata("design:paramtypes", [GoogleAnalyticsService_1.GoogleAnalyticsService])
], GoogleAnalyticsTrackEvent);
exports.GoogleAnalyticsTrackEvent = GoogleAnalyticsTrackEvent;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-google-analytics/dist/listeners/GoogleAnalyticsTrackPage.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-google-analytics/dist/listeners/GoogleAnalyticsTrackPage.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleAnalyticsTrackPage = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const GoogleAnalyticsEvents_1 = __webpack_require__(/*! ../GoogleAnalyticsEvents */ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsEvents.js");
const GoogleAnalyticsTypes_1 = __webpack_require__(/*! ../GoogleAnalyticsTypes */ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsTypes.js");
const GoogleAnalyticsService_1 = __webpack_require__(/*! ../GoogleAnalyticsService */ "./node_modules/@urbandevs/mario-google-analytics/dist/GoogleAnalyticsService.js");
let GoogleAnalyticsTrackPage = class GoogleAnalyticsTrackPage {
    constructor(googleAnalyticsService) {
        this.googleAnalyticsService = googleAnalyticsService;
    }
    on() {
        return GoogleAnalyticsEvents_1.GoogleAnalyticsEvents.TRACK_PAGE;
    }
    handle(event, sender, sendResponse) {
        return __awaiter(this, void 0, void 0, function* () {
            const message = event.data;
            this.googleAnalyticsService.trackPageView(message.pageUrl, message.pageTitle);
            return;
        });
    }
};
GoogleAnalyticsTrackPage = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(GoogleAnalyticsTypes_1.GoogleAnalyticsTypes.GOOGLE_ANALYTICS_SERVICE)),
    __metadata("design:paramtypes", [GoogleAnalyticsService_1.GoogleAnalyticsService])
], GoogleAnalyticsTrackPage);
exports.GoogleAnalyticsTrackPage = GoogleAnalyticsTrackPage;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyGeoLocationModule.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyGeoLocationModule.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.HideMyGeoLocationModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const PostBgDispatcher_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/WindowPost/Bg/PostBgDispatcher */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WindowPost/Bg/PostBgDispatcher.js");
const GetMyLocation_1 = __webpack_require__(/*! ./Listeners/GetMyLocation */ "./node_modules/@urbandevs/mario-hide-my-geo-location/dist/Listeners/GetMyLocation.js");
const HideMyGeoLocationService_1 = __webpack_require__(/*! ./HideMyGeoLocationService */ "./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyGeoLocationService.js");
const HideMyLocationTypes_1 = __webpack_require__(/*! ./HideMyLocationTypes */ "./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyLocationTypes.js");
const IpInfoTypes_1 = __webpack_require__(/*! @urbandevs/mario-ipinfo/dist/IpInfoTypes */ "./node_modules/@urbandevs/mario-ipinfo/dist/IpInfoTypes.js");
const IpInfoService_1 = __webpack_require__(/*! @urbandevs/mario-ipinfo/dist/services/IpInfoService */ "./node_modules/@urbandevs/mario-ipinfo/dist/services/IpInfoService.js");
class HideMyGeoLocationModule extends src_1.MarioModule {
    name() {
        return 'HideMyGeoLocation';
    }
    register(options) {
        this.mario().registerService(src_1.MARIO_TYPES.WINDOW_POST, PostBgDispatcher_1.PostBgDispatcher);
        this.mario().registerService(HideMyLocationTypes_1.HideMyLocationTypes.HIDE_MY_LOCATION_SERVICE, HideMyGeoLocationService_1.HideMyGeoLocationService);
        this.mario().registerService(IpInfoTypes_1.IpInfoTypes.IP_INFO_SERVICE, IpInfoService_1.IpInfoService);
        this.mario().externalDispatcher().on(GetMyLocation_1.GetMyLocation);
        return;
    }
}
exports.HideMyGeoLocationModule = HideMyGeoLocationModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyGeoLocationService.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyGeoLocationService.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HideMyGeoLocationService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
let HideMyGeoLocationService = class HideMyGeoLocationService {
    constructor() {
        this.status = false;
    }
    enable() {
        this.status = true;
    }
    disable() {
        this.status = false;
    }
    isEnabled() {
        return this.status;
    }
    isDisabled() {
        return !this.status;
    }
};
HideMyGeoLocationService = __decorate([
    inversify_1.injectable()
], HideMyGeoLocationService);
exports.HideMyGeoLocationService = HideMyGeoLocationService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyLocationEvents.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyLocationEvents.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.HideMyLocationEvents = void 0;
var HideMyLocationEvents;
(function (HideMyLocationEvents) {
    HideMyLocationEvents["GET_LOCATION"] = "HIDE_MY_LOCATION__GET_LOCATION";
})(HideMyLocationEvents = exports.HideMyLocationEvents || (exports.HideMyLocationEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyLocationTypes.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyLocationTypes.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.HideMyLocationTypes = void 0;
const HideMyLocationTypes = {
    HIDE_MY_LOCATION_SERVICE: Symbol.for('HIDE_MY_LOCATION_SERVICE'),
};
exports.HideMyLocationTypes = HideMyLocationTypes;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-hide-my-geo-location/dist/Listeners/GetMyLocation.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-hide-my-geo-location/dist/Listeners/GetMyLocation.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetMyLocation = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const HideMyLocationEvents_1 = __webpack_require__(/*! ../HideMyLocationEvents */ "./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyLocationEvents.js");
const HideMyLocationTypes_1 = __webpack_require__(/*! ../HideMyLocationTypes */ "./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyLocationTypes.js");
const HideMyGeoLocationService_1 = __webpack_require__(/*! ../HideMyGeoLocationService */ "./node_modules/@urbandevs/mario-hide-my-geo-location/dist/HideMyGeoLocationService.js");
const IpInfoTypes_1 = __webpack_require__(/*! @urbandevs/mario-ipinfo/dist/IpInfoTypes */ "./node_modules/@urbandevs/mario-ipinfo/dist/IpInfoTypes.js");
let GetMyLocation = class GetMyLocation {
    constructor(postDispatcher, service, ipInfoService) {
        this.postDispatcher = postDispatcher;
        this.service = service;
        this.ipInfoService = ipInfoService;
    }
    on() {
        return HideMyLocationEvents_1.HideMyLocationEvents.GET_LOCATION;
    }
    handle(event, sender, sendResponse) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.service.isEnabled()) {
                try {
                    const ipInfo = yield this.ipInfoService.get();
                    if (ipInfo.loc && ipInfo.loc.length === 2) {
                        const response = {
                            enabled: true,
                            latitude: ipInfo.loc[1],
                            longitude: ipInfo.loc[0],
                            status: 'SUCCESS',
                        };
                        yield this.postDispatcher.emitResponse(sender.tab.id, event.id, response);
                    }
                    else {
                        yield this.sendErrorResponse(sender.tab.id, event.id);
                    }
                }
                catch (e) {
                    yield this.sendErrorResponse(sender.tab.id, event.id);
                }
            }
            else {
                yield this.sendErrorResponse(sender.tab.id, event.id);
            }
            return;
        });
    }
    sendErrorResponse(tabId, eventId) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = {
                enabled: false,
            };
            yield this.postDispatcher.emitResponse(tabId, eventId, response);
        });
    }
};
GetMyLocation = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.WINDOW_POST)),
    __param(1, inversify_1.inject(HideMyLocationTypes_1.HideMyLocationTypes.HIDE_MY_LOCATION_SERVICE)),
    __param(2, inversify_1.inject(IpInfoTypes_1.IpInfoTypes.IP_INFO_SERVICE)),
    __metadata("design:paramtypes", [Object, HideMyGeoLocationService_1.HideMyGeoLocationService, Object])
], GetMyLocation);
exports.GetMyLocation = GetMyLocation;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-http-client/dist/HttpClientModule.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-http-client/dist/HttpClientModule.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpClientModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const HttpClientModuleTypes_1 = __webpack_require__(/*! ./HttpClientModuleTypes */ "./node_modules/@urbandevs/mario-http-client/dist/HttpClientModuleTypes.js");
const HttpClient_1 = __webpack_require__(/*! ./services/HttpClient */ "./node_modules/@urbandevs/mario-http-client/dist/services/HttpClient.js");
class HttpClientModule extends src_1.MarioModule {
    name() {
        return 'HttpClientModule';
    }
    register(options) {
        this.mario().registerService(HttpClientModuleTypes_1.HTTP_CLIENT_MODULE_TYPES.HTTP_CLIENT, HttpClient_1.HttpClient);
        return;
    }
}
exports.HttpClientModule = HttpClientModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-http-client/dist/HttpClientModuleTypes.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-http-client/dist/HttpClientModuleTypes.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.HTTP_CLIENT_MODULE_TYPES = void 0;
const HTTP_CLIENT_MODULE_TYPES = {
    HTTP_CLIENT: Symbol.for('HTTP_CLIENT'),
};
exports.HTTP_CLIENT_MODULE_TYPES = HTTP_CLIENT_MODULE_TYPES;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-http-client/dist/services/HttpClient.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-http-client/dist/services/HttpClient.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpClient = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
let HttpClient = class HttpClient {
    constructor() {
        this.queue = [];
        this.lock = false;
    }
    intercept(listener) {
        this.interceptor = listener;
    }
    onFail(listener) {
        this.failHandler = listener;
    }
    post(url, payload, options = {}, extra = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request(url, 'POST', payload, options, extra);
        });
    }
    get(url, options = {}, extra = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request(url, 'GET', null, options, extra);
        });
    }
    delete(url, options = {}, extra = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request(url, 'DELETE', null, options, extra);
        });
    }
    request(url, method, payload, options = {}, extra = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return (new Promise((resolve, reject) => {
                if (extra.forceRequest) {
                    this._request(url, method, payload, options, extra)
                        .then((value) => resolve(value))
                        .catch((value) => reject(value));
                }
                else {
                    const queue = {
                        reject,
                        request: { url, method, payload, options, extra },
                        resolve,
                    };
                    this.queue.push(queue);
                }
                if (!this.lock) {
                    this.lock = true;
                    this.handleQueue().then();
                }
            }));
        });
    }
    _request(url, method, payload, options = {}, extra = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const mapper = [
                'headers',
                'mode',
                'cache',
                'credentials',
                'redirect',
                'referrerPolicy',
            ];
            const request = mapper.reduce((acc, val) => {
                if (options[val]) {
                    acc[val] = options[val];
                }
                return acc;
            }, {
                method,
                url,
            });
            if (typeof payload === 'string' || payload instanceof FormData) {
                request.body = payload;
            }
            else if (payload instanceof Object) {
                request.body = JSON.stringify(payload);
            }
            if (!extra.skipInterceptor && this.interceptor) {
                yield (new Promise((resolve, reject) => this.interceptor(request, resolve, reject)));
            }
            const response = yield fetch(request.url, request);
            if (!response.ok) {
                if (!extra.skipFailHandler && this.failHandler) {
                    try {
                        yield (new Promise((resolve, reject) => this.failHandler(response, resolve, reject)));
                        return this._request(url, method, payload, options, extra);
                    }
                    catch (e) {
                        throw response;
                    }
                }
                throw response;
            }
            if (extra.rawResponse) {
                return response;
            }
            else if (!response.headers.has('Content-Type')) {
                return;
            }
            else if (response.headers.get('Content-Type').startsWith('application/json')) {
                return response.json();
            }
            else {
                return response.text();
            }
        });
    }
    handleQueue() {
        return __awaiter(this, void 0, void 0, function* () {
            const item = this.queue.shift();
            if (!item) {
                this.lock = false;
                return;
            }
            const { url, method, payload, options, extra } = item.request;
            try {
                const response = yield this._request(url, method, payload, options, extra);
                item.resolve(response);
            }
            catch (e) {
                item.reject(e);
            }
            this.handleQueue().then();
        });
    }
};
HttpClient = __decorate([
    inversify_1.injectable()
], HttpClient);
exports.HttpClient = HttpClient;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-identity/dist/IdentityModule.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-identity/dist/IdentityModule.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const IdentityService_1 = __webpack_require__(/*! ./IdentityService */ "./node_modules/@urbandevs/mario-identity/dist/IdentityService.js");
const IdentityTypes_1 = __webpack_require__(/*! ./IdentityTypes */ "./node_modules/@urbandevs/mario-identity/dist/IdentityTypes.js");
class IdentityModule extends src_1.MarioModule {
    name() {
        return 'IdentityModule';
    }
    static use(mario, options) {
        return mario.registerModule(IdentityModule, options);
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            const storageService = options.storageProvider || src_1.StorageService;
            this.mario().registerService(IdentityTypes_1.IdentityTypes.IDENTITY_STORAGE, storageService);
            const identityId = yield this.getIdentityId();
            this.mario().container().bind(IdentityTypes_1.IdentityTypes.IDENTITY_ID).toConstantValue(identityId);
            this.mario().registerService(IdentityTypes_1.IdentityTypes.IDENTITY_SERVICE, IdentityService_1.IdentityService);
        });
    }
    getIdentityId() {
        return __awaiter(this, void 0, void 0, function* () {
            const IDENTITY_ID_KEY = 'IDENTITY_ID';
            if (!(yield this.getStorageService().has(IDENTITY_ID_KEY))) {
                const clientId = this.generateIdentityId();
                yield this.getStorageService().set(IDENTITY_ID_KEY, clientId);
                return clientId;
            }
            return yield this.getStorageService().get(IDENTITY_ID_KEY);
        });
    }
    getStorageService() {
        return this.mario().getService(IdentityTypes_1.IdentityTypes.IDENTITY_STORAGE);
    }
    generateIdentityId() {
        return `${Math.floor(Math.random() * 0x7FFFFFFF)}.${Math.floor(Date.now() / 1000)}`;
    }
}
exports.IdentityModule = IdentityModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-identity/dist/IdentityService.js":
/*!************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-identity/dist/IdentityService.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const IdentityTypes_1 = __webpack_require__(/*! ./IdentityTypes */ "./node_modules/@urbandevs/mario-identity/dist/IdentityTypes.js");
let IdentityService = class IdentityService {
    constructor(identityId) {
        this.identityId = identityId;
    }
    getIdentityId() {
        return this.identityId;
    }
};
IdentityService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(IdentityTypes_1.IdentityTypes.IDENTITY_ID)),
    __metadata("design:paramtypes", [String])
], IdentityService);
exports.IdentityService = IdentityService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-identity/dist/IdentityTypes.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-identity/dist/IdentityTypes.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityTypes = void 0;
const IdentityTypes = {
    IDENTITY_ID: Symbol.for('IDENTITY_ID'),
    IDENTITY_SERVICE: Symbol.for('IDENTITY_SERVICE'),
    IDENTITY_STORAGE: Symbol.for('IDENTITY_STORAGE'),
};
exports.IdentityTypes = IdentityTypes;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-ipinfo/dist/IpInfoTypes.js":
/*!******************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-ipinfo/dist/IpInfoTypes.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpInfoTypes = void 0;
const IpInfoTypes = {
    IP_INFO_SERVICE: Symbol.for('IP_INFO_SERVICE'),
};
exports.IpInfoTypes = IpInfoTypes;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-ipinfo/dist/exceptions/IpInfoServiceException.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-ipinfo/dist/exceptions/IpInfoServiceException.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IpInfoServiceException = void 0;
class IpInfoServiceException extends Error {
}
exports.IpInfoServiceException = IpInfoServiceException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-ipinfo/dist/services/IpInfoService.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-ipinfo/dist/services/IpInfoService.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IpInfoService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const IP_1 = __webpack_require__(/*! ../values/IP */ "./node_modules/@urbandevs/mario-ipinfo/dist/values/IP.js");
const IpInfoServiceException_1 = __webpack_require__(/*! ../exceptions/IpInfoServiceException */ "./node_modules/@urbandevs/mario-ipinfo/dist/exceptions/IpInfoServiceException.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
let IpInfoService = class IpInfoService {
    constructor(logger) {
        this.logger = logger;
        this.api = 'https://geo.geosurf.io/';
    }
    get(ip = null) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const endpoint = this.api + (ip ? ip.getIP() : '');
                const response = yield fetch(endpoint);
                const ipInfoResponse = yield response.json();
                const info = {
                    city: ipInfoResponse.hasOwnProperty('city') ? ipInfoResponse.city : '',
                    country: ipInfoResponse.hasOwnProperty('country') ? ipInfoResponse.country : '',
                    ip: new IP_1.IP(ipInfoResponse.ip),
                    isp: ipInfoResponse.hasOwnProperty('isp') ? ipInfoResponse.isp : '',
                };
                if (ipInfoResponse.hasOwnProperty('loc')) {
                    info.loc = ipInfoResponse.loc;
                }
                if (ipInfoResponse.hasOwnProperty('postal')) {
                    info.postal = ipInfoResponse.postal;
                }
                if (ipInfoResponse.hasOwnProperty('asn')) {
                    info.asn = ipInfoResponse.asn;
                }
                if (ipInfoResponse.hasOwnProperty('organization')) {
                    info.organization = ipInfoResponse.organization;
                }
                if (ipInfoResponse.hasOwnProperty('state')) {
                    info.state = ipInfoResponse.state;
                }
                return info;
            }
            catch (e) {
                this.logger.error(e);
                throw new IpInfoServiceException_1.IpInfoServiceException(e.message);
            }
        });
    }
};
IpInfoService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [Object])
], IpInfoService);
exports.IpInfoService = IpInfoService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-ipinfo/dist/values/IP.js":
/*!****************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-ipinfo/dist/values/IP.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.IP = void 0;
const IpInfoServiceException_1 = __webpack_require__(/*! ../exceptions/IpInfoServiceException */ "./node_modules/@urbandevs/mario-ipinfo/dist/exceptions/IpInfoServiceException.js");
class IP {
    constructor(ip) {
        this.ip = ip;
        if (!/^(?!0)(?!.*\.$)((1?\d?\d|25[0-5]|2[0-4]\d)(\.|$)){4}$/.test(this.ip)) {
            throw new IpInfoServiceException_1.IpInfoServiceException(`Invalid IP address: "${this.ip}"`);
        }
    }
    getIP() {
        return this.ip;
    }
}
exports.IP = IP;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsClient.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsClient.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const UrbanAnalyticsTypes_1 = __webpack_require__(/*! ./UrbanAnalyticsTypes */ "./node_modules/@urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsTypes.js");
const urban_analytics_1 = __webpack_require__(/*! @urbandevs/urban-analytics/dist/urban-analytics */ "./node_modules/@urbandevs/urban-analytics/dist/urban-analytics.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const UrbanAnalyticsStorage_1 = __webpack_require__(/*! ./UrbanAnalyticsStorage */ "./node_modules/@urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsStorage.js");
let UrbanAnalyticsClient = class UrbanAnalyticsClient {
    constructor(appVersion, appName, api, enabled, hold, logger, storage) {
        this.appVersion = appVersion;
        this.appName = appName;
        this.api = api;
        this.enabled = enabled;
        this.hold = hold;
        this.logger = logger;
        this.storage = storage;
        const opts = {
            api: this.api,
            appName: this.appName,
            clientVersion: this.appVersion,
        };
        this.client = new urban_analytics_1.UrbanAnalytics(opts);
    }
    enable() {
        this.enabled = true;
        const handler = () => __awaiter(this, void 0, void 0, function* () {
            const events = yield this.storage.get();
            for (const event of events) {
                try {
                    yield this.track(event);
                }
                catch (e) {
                    this.logger.error(e);
                }
            }
            yield this.storage.clean();
        });
        handler().then();
    }
    isEnabled() {
        return this.enabled;
    }
    disable() {
        this.enabled = false;
    }
    track(event) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.enabled) {
                const payload = this.client.buildPayload(event);
                this.logger.log(`UrbanAnalyticsClient: track event`, payload);
                yield this.client.track(event);
            }
            else {
                if (this.hold) {
                    yield this.storage.add(event);
                }
                this.logger.log(`UrbanAnalyticsClient: ignore event`, event);
            }
        });
    }
};
UrbanAnalyticsClient = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrbanAnalyticsTypes_1.UrbanAnalyticsTypes.APP_VERSION)),
    __param(1, inversify_1.inject(UrbanAnalyticsTypes_1.UrbanAnalyticsTypes.APP_NAME)),
    __param(2, inversify_1.inject(UrbanAnalyticsTypes_1.UrbanAnalyticsTypes.API)),
    __param(3, inversify_1.inject(UrbanAnalyticsTypes_1.UrbanAnalyticsTypes.ENABLED)),
    __param(4, inversify_1.inject(UrbanAnalyticsTypes_1.UrbanAnalyticsTypes.HOLD_LAST_EVENTS)),
    __param(5, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __param(6, inversify_1.inject(UrbanAnalyticsTypes_1.UrbanAnalyticsTypes.STORAGE)),
    __metadata("design:paramtypes", [String, String, String, Boolean, Boolean, Object, UrbanAnalyticsStorage_1.UrbanAnalyticsStorage])
], UrbanAnalyticsClient);
exports.UrbanAnalyticsClient = UrbanAnalyticsClient;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsModule.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsModule.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const UrbanAnalyticsTypes_1 = __webpack_require__(/*! ./UrbanAnalyticsTypes */ "./node_modules/@urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsTypes.js");
const UrbanAnalyticsClient_1 = __webpack_require__(/*! ./UrbanAnalyticsClient */ "./node_modules/@urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsClient.js");
const UrbanAnalyticsStorage_1 = __webpack_require__(/*! ./UrbanAnalyticsStorage */ "./node_modules/@urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsStorage.js");
class UrbanAnalyticsModule extends src_1.MarioModule {
    name() {
        return 'UrbanAnalyticsModule';
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this.mario().container().bind(UrbanAnalyticsTypes_1.UrbanAnalyticsTypes.API).toConstantValue(options.api);
            this.mario().container().bind(UrbanAnalyticsTypes_1.UrbanAnalyticsTypes.APP_NAME).toConstantValue(options.appName);
            this.mario().container().bind(UrbanAnalyticsTypes_1.UrbanAnalyticsTypes.APP_VERSION).toConstantValue(options.appVersion);
            this.mario().container().bind(UrbanAnalyticsTypes_1.UrbanAnalyticsTypes.ENABLED).toConstantValue(!!options.enabled);
            this.mario().container().bind(UrbanAnalyticsTypes_1.UrbanAnalyticsTypes.HOLD_LAST_EVENTS).toConstantValue(options.holdLastEvents);
            this.mario().registerService(UrbanAnalyticsTypes_1.UrbanAnalyticsTypes.STORAGE, UrbanAnalyticsStorage_1.UrbanAnalyticsStorage);
            this.mario().registerService(UrbanAnalyticsTypes_1.UrbanAnalyticsTypes.CLIENT, UrbanAnalyticsClient_1.UrbanAnalyticsClient);
            return;
        });
    }
    static use(mario, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return mario.registerModule(UrbanAnalyticsModule, options);
        });
    }
}
exports.UrbanAnalyticsModule = UrbanAnalyticsModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsStorage.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsStorage.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const UrbanAnalyticsTypes_1 = __webpack_require__(/*! ./UrbanAnalyticsTypes */ "./node_modules/@urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsTypes.js");
let UrbanAnalyticsStorage = class UrbanAnalyticsStorage {
    constructor(storage, hold) {
        this.storage = storage;
        this.hold = hold;
        this.key = 'URBAN_ANALYTICS_EVENTS';
    }
    add(event) {
        return __awaiter(this, void 0, void 0, function* () {
            let events = yield this.get();
            events = events.splice(-this.hold);
            events.push(event);
            yield this.store(events);
        });
    }
    get() {
        return __awaiter(this, void 0, void 0, function* () {
            let result = [];
            if (yield this.storage.has(this.key)) {
                const json = yield this.storage.get(this.key);
                result = JSON.parse(json);
            }
            return result;
        });
    }
    has() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storage.has(this.key);
        });
    }
    store(events) {
        return __awaiter(this, void 0, void 0, function* () {
            const json = JSON.stringify(events);
            yield this.storage.set(this.key, json);
        });
    }
    clean() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storage.set(this.key, '[]');
        });
    }
};
UrbanAnalyticsStorage = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.STORAGE_SERVICE)),
    __param(1, inversify_1.inject(UrbanAnalyticsTypes_1.UrbanAnalyticsTypes.HOLD_LAST_EVENTS)),
    __metadata("design:paramtypes", [Object, Number])
], UrbanAnalyticsStorage);
exports.UrbanAnalyticsStorage = UrbanAnalyticsStorage;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsTypes.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-module-urban-analytics/dist/UrbanAnalyticsTypes.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UrbanAnalyticsTypes = {
    API: Symbol.for('URBAN_ANALYTICS_API'),
    APP_NAME: Symbol.for('URBAN_ANALYTICS_APP_NAME'),
    APP_VERSION: Symbol.for('URBAN_ANALYTICS_APP_VERSION'),
    CLIENT: Symbol.for('URBAN_ANALYTICS_CLIENT'),
    ENABLED: Symbol.for('URBAN_ANALYTICS_ENABLED'),
    HOLD_LAST_EVENTS: Symbol.for('URBAN_ANALYTICS_HOLD_LAST_EVENTS'),
    STORAGE: Symbol.for('URBAN_ANALYTICS_STORAGE'),
};


/***/ }),

/***/ "./node_modules/@urbandevs/mario-panalytics/dist/PanalyticsIdentityTypes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-panalytics/dist/PanalyticsIdentityTypes.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PanalyticsIdentityTypes = void 0;
const PanalyticsIdentityTypes = {
    PANALYTICS_HOST: Symbol.for('PANALYTICS_HOST'),
    PANALYTICS_LOGGING: Symbol.for('PANALYTICS_LOGGING'),
    PANALYTICS_SERVICE: Symbol.for('PANALYTICS_SERVICE'),
    PANALYTICS_STORAGE_KEY: Symbol.for('PANALYTICS_STORAGE_KEY'),
};
exports.PanalyticsIdentityTypes = PanalyticsIdentityTypes;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-panalytics/dist/PanalyticsModule.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-panalytics/dist/PanalyticsModule.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PanalyticsModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const PanalyticsService_1 = __webpack_require__(/*! ./PanalyticsService */ "./node_modules/@urbandevs/mario-panalytics/dist/PanalyticsService.js");
const PanalyticsIdentityTypes_1 = __webpack_require__(/*! ./PanalyticsIdentityTypes */ "./node_modules/@urbandevs/mario-panalytics/dist/PanalyticsIdentityTypes.js");
class PanalyticsModule extends src_1.MarioModule {
    name() {
        return 'PanalyticsModule';
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this.mario().container().bind(PanalyticsIdentityTypes_1.PanalyticsIdentityTypes.PANALYTICS_HOST).toConstantValue(options.host);
            this.mario().container().bind(PanalyticsIdentityTypes_1.PanalyticsIdentityTypes.PANALYTICS_LOGGING).toConstantValue(options.logging);
            this.mario().container().bind(PanalyticsIdentityTypes_1.PanalyticsIdentityTypes.PANALYTICS_STORAGE_KEY).toConstantValue(options.storageKey);
            this.mario().registerService(PanalyticsIdentityTypes_1.PanalyticsIdentityTypes.PANALYTICS_SERVICE, PanalyticsService_1.PanalyticsService);
            yield this.mario().getService(PanalyticsIdentityTypes_1.PanalyticsIdentityTypes.PANALYTICS_SERVICE).resolveId();
        });
    }
}
exports.PanalyticsModule = PanalyticsModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-panalytics/dist/PanalyticsService.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-panalytics/dist/PanalyticsService.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PanalyticsService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const PanalyticsIdentityTypes_1 = __webpack_require__(/*! ./PanalyticsIdentityTypes */ "./node_modules/@urbandevs/mario-panalytics/dist/PanalyticsIdentityTypes.js");
const panalytics_utility_1 = __webpack_require__(/*! @urbandevs/panalytics-utility/dist/panalytics-utility */ "./node_modules/@urbandevs/panalytics-utility/dist/panalytics-utility.js");
let PanalyticsService = class PanalyticsService {
    constructor(host, logging, storageKey) {
        this.host = host;
        this.logging = logging;
        this.storageKey = storageKey;
        const config = {
            host: this.host,
            logging: this.logging,
        };
        if (this.storageKey) {
            config.storageKey = this.storageKey;
        }
        this.utility = new panalytics_utility_1.default(config);
    }
    resolveId() {
        return __awaiter(this, void 0, void 0, function* () {
            this.identityId = yield this.utility.getKeyAsync();
        });
    }
    getId() {
        return this.identityId;
    }
};
PanalyticsService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(PanalyticsIdentityTypes_1.PanalyticsIdentityTypes.PANALYTICS_HOST)),
    __param(1, inversify_1.inject(PanalyticsIdentityTypes_1.PanalyticsIdentityTypes.PANALYTICS_LOGGING)),
    __param(2, inversify_1.inject(PanalyticsIdentityTypes_1.PanalyticsIdentityTypes.PANALYTICS_STORAGE_KEY)),
    __metadata("design:paramtypes", [String, Boolean, String])
], PanalyticsService);
exports.PanalyticsService = PanalyticsService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-panel-identity/dist/PanellistIdentityModule.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-panel-identity/dist/PanellistIdentityModule.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PanellistIdentityModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const PanellistIdentityService_1 = __webpack_require__(/*! ./PanellistIdentityService */ "./node_modules/@urbandevs/mario-panel-identity/dist/PanellistIdentityService.js");
const PanellistIdentityTypes_1 = __webpack_require__(/*! ./PanellistIdentityTypes */ "./node_modules/@urbandevs/mario-panel-identity/dist/PanellistIdentityTypes.js");
class PanellistIdentityModule extends src_1.MarioModule {
    name() {
        return 'PanellistIdentityModule';
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this.mario().container().bind(PanellistIdentityTypes_1.PanellistIdentityTypes.PANELLIST_IDENTITY_HOST).toConstantValue(options.host);
            this.mario().container().bind(PanellistIdentityTypes_1.PanellistIdentityTypes.PANELLIST_IDENTITY_LOGGING).toConstantValue(options.logging);
            this.mario().registerService(PanellistIdentityTypes_1.PanellistIdentityTypes.PANELLIST_IDENTITY_SERVICE, PanellistIdentityService_1.PanellistIdentityService);
            yield this.mario().getService(PanellistIdentityTypes_1.PanellistIdentityTypes.PANELLIST_IDENTITY_SERVICE).resolveId();
        });
    }
}
exports.PanellistIdentityModule = PanellistIdentityModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-panel-identity/dist/PanellistIdentityService.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-panel-identity/dist/PanellistIdentityService.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PanellistIdentityService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const PanellistIdentityTypes_1 = __webpack_require__(/*! ./PanellistIdentityTypes */ "./node_modules/@urbandevs/mario-panel-identity/dist/PanellistIdentityTypes.js");
const panelist_utility_1 = __webpack_require__(/*! @urbandevs/panelist-utility */ "./node_modules/@urbandevs/panelist-utility/dist/index.js");
let PanellistIdentityService = class PanellistIdentityService {
    constructor(host, logging) {
        this.host = host;
        this.logging = logging;
        this.panelistUtility = new panelist_utility_1.default({
            host: this.host,
            logging: this.logging
        });
    }
    resolveId() {
        return __awaiter(this, void 0, void 0, function* () {
            this.identityId = yield this.panelistUtility.getKeyAsync();
        });
    }
    getId() {
        return this.identityId;
    }
};
PanellistIdentityService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(PanellistIdentityTypes_1.PanellistIdentityTypes.PANELLIST_IDENTITY_HOST)),
    __param(1, inversify_1.inject(PanellistIdentityTypes_1.PanellistIdentityTypes.PANELLIST_IDENTITY_LOGGING)),
    __metadata("design:paramtypes", [String, Boolean])
], PanellistIdentityService);
exports.PanellistIdentityService = PanellistIdentityService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-panel-identity/dist/PanellistIdentityTypes.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-panel-identity/dist/PanellistIdentityTypes.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PanellistIdentityTypes = void 0;
const PanellistIdentityTypes = {
    PANELLIST_IDENTITY_HOST: Symbol.for('PANELLIST_IDENTITY_HOST'),
    PANELLIST_IDENTITY_LOGGING: Symbol.for('PANELLIST_IDENTITY_LOGGING'),
    PANELLIST_IDENTITY_SERVICE: Symbol.for('PANELLIST_IDENTITY_SERVICE')
};
exports.PanellistIdentityTypes = PanellistIdentityTypes;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-policy/dist/PolicyEnum.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-policy/dist/PolicyEnum.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PolicyEnum = void 0;
var PolicyEnum;
(function (PolicyEnum) {
    PolicyEnum["AGREE"] = "AGREE";
    PolicyEnum["REJECT"] = "REJECT";
})(PolicyEnum = exports.PolicyEnum || (exports.PolicyEnum = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-policy/dist/PolicyModule.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-policy/dist/PolicyModule.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolicyModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const PolicyModuleTypes_1 = __webpack_require__(/*! ./PolicyModuleTypes */ "./node_modules/@urbandevs/mario-policy/dist/PolicyModuleTypes.js");
const PolicyService_1 = __webpack_require__(/*! ./PolicyService */ "./node_modules/@urbandevs/mario-policy/dist/PolicyService.js");
class PolicyModule extends src_1.MarioModule {
    name() {
        return 'PolicyModule';
    }
    static use(mario, options) {
        return mario.registerModule(PolicyModule, options);
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this.mario().container().bind(PolicyModuleTypes_1.PolicyModuleTypes.POLICY_STORAGE_SERVICE).toConstantValue(options.storageService);
            this.mario().registerService(PolicyModuleTypes_1.PolicyModuleTypes.POLICY_SERVICE, PolicyService_1.PolicyService);
        });
    }
}
exports.PolicyModule = PolicyModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-policy/dist/PolicyModuleTypes.js":
/*!************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-policy/dist/PolicyModuleTypes.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PolicyModuleTypes = void 0;
const PolicyModuleTypes = {
    POLICY_SERVICE: Symbol.for('POLICY_SERVICE'),
    POLICY_STORAGE_SERVICE: Symbol.for('POLICY_STORAGE_SERVICE'),
};
exports.PolicyModuleTypes = PolicyModuleTypes;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-policy/dist/PolicyService.js":
/*!********************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-policy/dist/PolicyService.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolicyService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const PolicyEnum_1 = __webpack_require__(/*! ./PolicyEnum */ "./node_modules/@urbandevs/mario-policy/dist/PolicyEnum.js");
const PolicyModuleTypes_1 = __webpack_require__(/*! ./PolicyModuleTypes */ "./node_modules/@urbandevs/mario-policy/dist/PolicyModuleTypes.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const PolicyServiceEvents_1 = __webpack_require__(/*! ./PolicyServiceEvents */ "./node_modules/@urbandevs/mario-policy/dist/PolicyServiceEvents.js");
let PolicyService = class PolicyService {
    constructor(storageService, internalDispatcher) {
        this.storageService = storageService;
        this.internalDispatcher = internalDispatcher;
        this.key = 'POLICY';
    }
    agree() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storageService.set(this.key, PolicyEnum_1.PolicyEnum.AGREE);
            this.internalDispatcher.emit(new src_1.MarioEvent(PolicyServiceEvents_1.PolicyServiceEvents.POLICY_AGREED));
        });
    }
    reject() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.storageService.set(this.key, PolicyEnum_1.PolicyEnum.REJECT);
            this.internalDispatcher.emit(new src_1.MarioEvent(PolicyServiceEvents_1.PolicyServiceEvents.POLICY_REJECTED));
        });
    }
    isAgreed() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.is(PolicyEnum_1.PolicyEnum.AGREE);
        });
    }
    isRejected() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.is(PolicyEnum_1.PolicyEnum.REJECT);
        });
    }
    hasAnswer() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.storageService.has(this.key);
        });
    }
    is(policy) {
        return __awaiter(this, void 0, void 0, function* () {
            if (yield this.storageService.has(this.key)) {
                const val = yield this.storageService.get(this.key);
                return val === policy;
            }
            return false;
        });
    }
};
PolicyService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(PolicyModuleTypes_1.PolicyModuleTypes.POLICY_STORAGE_SERVICE)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [Object, Object])
], PolicyService);
exports.PolicyService = PolicyService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-policy/dist/PolicyServiceEvents.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-policy/dist/PolicyServiceEvents.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PolicyServiceEvents = void 0;
var PolicyServiceEvents;
(function (PolicyServiceEvents) {
    PolicyServiceEvents["POLICY_AGREED"] = "POLICY_AGREED";
    PolicyServiceEvents["POLICY_REJECTED"] = "POLICY_REJECTED";
})(PolicyServiceEvents = exports.PolicyServiceEvents || (exports.PolicyServiceEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-promation-api/dist/PromotionApiModule.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-promation-api/dist/PromotionApiModule.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const PromotionApiModuleTypes_1 = __webpack_require__(/*! ./PromotionApiModuleTypes */ "./node_modules/@urbandevs/mario-promation-api/dist/PromotionApiModuleTypes.js");
const PromotionService_1 = __webpack_require__(/*! ./PromotionService */ "./node_modules/@urbandevs/mario-promation-api/dist/PromotionService.js");
const PromotionApiModuleException_1 = __webpack_require__(/*! ./PromotionApiModuleException */ "./node_modules/@urbandevs/mario-promation-api/dist/PromotionApiModuleException.js");
class PromotionApiModule extends src_1.MarioModule {
    name() {
        return 'PromotionApiModule';
    }
    register(options) {
        if (typeof options.api !== 'string') {
            throw new PromotionApiModuleException_1.PromotionApiModuleException(`PromotionApiModule: an option "api" has to be string`);
        }
        this.mario().container().bind(PromotionApiModuleTypes_1.PromotionApiModuleTypes._API).toConstantValue(options.api);
        this.mario().registerService(PromotionApiModuleTypes_1.PromotionApiModuleTypes.PROMOTION_API_SERVICE, PromotionService_1.PromotionService);
        return;
    }
    static use(mario, options) {
        return mario.registerModule(PromotionApiModule, options);
    }
}
exports.PromotionApiModule = PromotionApiModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-promation-api/dist/PromotionApiModuleException.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-promation-api/dist/PromotionApiModuleException.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
class PromotionApiModuleException extends Error {
}
exports.PromotionApiModuleException = PromotionApiModuleException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-promation-api/dist/PromotionApiModuleTypes.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-promation-api/dist/PromotionApiModuleTypes.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const PromotionApiModuleTypes = {
    PROMOTION_API_SERVICE: Symbol.for('PROMOTION_API_SERVICE'),
    _API: Symbol.for('PROMOTION_API'),
};
exports.PromotionApiModuleTypes = PromotionApiModuleTypes;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-promation-api/dist/PromotionService.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-promation-api/dist/PromotionService.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const PromotionApiModuleTypes_1 = __webpack_require__(/*! ./PromotionApiModuleTypes */ "./node_modules/@urbandevs/mario-promation-api/dist/PromotionApiModuleTypes.js");
const PromotionApiModuleException_1 = __webpack_require__(/*! ./PromotionApiModuleException */ "./node_modules/@urbandevs/mario-promation-api/dist/PromotionApiModuleException.js");
var PromotionElementType;
(function (PromotionElementType) {
    PromotionElementType["TEXT"] = "TEXT";
    PromotionElementType["LINK"] = "LINK";
})(PromotionElementType = exports.PromotionElementType || (exports.PromotionElementType = {}));
let PromotionService = class PromotionService {
    constructor(api) {
        this.api = api;
    }
    fetch(browser, section) {
        return __awaiter(this, void 0, void 0, function* () {
            const params = new URLSearchParams();
            if (browser) {
                params.append('browser', browser);
            }
            if (section) {
                params.append('section', section);
            }
            const endpoint = `${this.api}?${params.toString()}`;
            try {
                const response = yield fetch(endpoint);
                const data = yield response.json();
                if (browser && section && data[browser] && data[browser] && data[browser][section]) {
                    return data[browser][section];
                }
                return data;
            }
            catch (e) {
                throw new PromotionApiModuleException_1.PromotionApiModuleException(`PromotionApiModule: fetch error "${e.message}"`);
            }
        });
    }
    parse(section) {
        const elements = [];
        let inputStr = section.text;
        while (true) {
            const pos = inputStr.indexOf('#');
            if (pos === -1) {
                const element = this.makeElementText(inputStr);
                elements.push(element);
                break;
            }
            const text = inputStr.substr(0, pos);
            if (text !== '') {
                const element = this.makeElementText(text);
                elements.push(element);
            }
            inputStr = inputStr.substr(pos + 1);
            const separator = inputStr.indexOf(' ');
            const label = separator === -1 ? inputStr : inputStr.substr(0, separator);
            if (!section.links[label]) {
                throw new PromotionApiModuleException_1.PromotionApiModuleException(`PromotionApiModule: a configuration for label "${label}" is not found`);
            }
            const link = section.links[label];
            elements.push(this.makeElementLink(link));
            if (separator === -1) {
                break;
            }
            else {
                inputStr = inputStr.substr(label.length);
            }
        }
        return elements;
    }
    makeElementText(text) {
        return {
            text,
            type: PromotionElementType.TEXT,
        };
    }
    makeElementLink(link) {
        return {
            link,
            type: PromotionElementType.LINK,
        };
    }
};
PromotionService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(PromotionApiModuleTypes_1.PromotionApiModuleTypes._API)),
    __metadata("design:paramtypes", [String])
], PromotionService);
exports.PromotionService = PromotionService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationEvents.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationEvents.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyLocationEvents = void 0;
var ProxyLocationEvents;
(function (ProxyLocationEvents) {
    ProxyLocationEvents["PROXY_LOCATION_BEFORE_ACTIVATED"] = "LOCATION_PROXY_BEFORE_ACTIVATED";
    ProxyLocationEvents["PROXY_LOCATION_AFTER_ACTIVATED"] = "LOCATION_PROXY_AFTER_ACTIVATED";
    ProxyLocationEvents["PROXY_LOCATION_BEFORE_DEACTIVATED"] = "LOCATION_PROXY_BEFORE_DEACTIVATED";
    ProxyLocationEvents["PROXY_LOCATION_AFTER_DEACTIVATED"] = "LOCATION_PROXY_AFTER_DEACTIVATED";
})(ProxyLocationEvents = exports.ProxyLocationEvents || (exports.ProxyLocationEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationException.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationException.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyLocationException = void 0;
class ProxyLocationException extends Error {
}
exports.ProxyLocationException = ProxyLocationException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationModule.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationModule.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyLocationModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const ProxyLocationTypes_1 = __webpack_require__(/*! ./ProxyLocationTypes */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationTypes.js");
const ProxyLocationService_1 = __webpack_require__(/*! ./services/ProxyLocationService */ "./node_modules/@urbandevs/mario-proxy-location/dist/services/ProxyLocationService.js");
const LocationHelper_1 = __webpack_require__(/*! ./services/LocationHelper */ "./node_modules/@urbandevs/mario-proxy-location/dist/services/LocationHelper.js");
const ProxyService_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Proxy/Bg/ProxyService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Proxy/Bg/ProxyService.js");
class ProxyLocationModule extends src_1.MarioModule {
    name() {
        return 'ProxyLocationModule';
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this.mario().registerService(src_1.MARIO_TYPES.PROXY_SERVICE, ProxyService_1.ProxyService);
            this.mario().registerService(ProxyLocationTypes_1.ProxyLocationTypes.LOCATION_PROXY_SERVICE, ProxyLocationService_1.ProxyLocationService);
            this.mario().registerService(ProxyLocationTypes_1.ProxyLocationTypes.LOCATION_HELPER_SERVICE, LocationHelper_1.LocationHelper);
            return;
        });
    }
}
exports.ProxyLocationModule = ProxyLocationModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationTypes.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationTypes.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyLocationTypes = void 0;
const ProxyLocationTypes = {
    LOCATION_HELPER_SERVICE: Symbol.for('LOCATION_HELPER_SERVICE'),
    LOCATION_PROXY_SERVICE: Symbol.for('LOCATION_PROXY_SERVICE'),
};
exports.ProxyLocationTypes = ProxyLocationTypes;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/exceptions/ProxyLocationServiceException.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/exceptions/ProxyLocationServiceException.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyLocationServiceException = void 0;
class ProxyLocationServiceException extends Error {
}
exports.ProxyLocationServiceException = ProxyLocationServiceException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/models/ProxyLocation.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/models/ProxyLocation.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyLocation = void 0;
const LocationCode_1 = __webpack_require__(/*! ../values/code/LocationCode */ "./node_modules/@urbandevs/mario-proxy-location/dist/values/code/LocationCode.js");
const LocationName_1 = __webpack_require__(/*! ../values/name/LocationName */ "./node_modules/@urbandevs/mario-proxy-location/dist/values/name/LocationName.js");
const ProxyLocationConfig_1 = __webpack_require__(/*! ./ProxyLocationConfig */ "./node_modules/@urbandevs/mario-proxy-location/dist/models/ProxyLocationConfig.js");
const ProxyLocationIterator_1 = __webpack_require__(/*! ./ProxyLocationIterator */ "./node_modules/@urbandevs/mario-proxy-location/dist/models/ProxyLocationIterator.js");
const ProxyLocationException_1 = __webpack_require__(/*! ../ProxyLocationException */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationException.js");
/**
 * This model implements Doubly Linked List and prefix trie
 *
 *              HEAD                      TAIL
 *               ║                         ║
 *            ╔══════╗     ╔══════╗     ╔══════╗
 *  NULL  <══ ║ NODE ║ ══> ║ NODE ║ ══> ║ NODE ║ ══> NULL
 *            ║      ║ <══ ║      ║ <══ ║      ║
 *            ╚══════╝     ╚══════╝     ╚══════╝
 *               ║
 *            ╔══════╗     ╔══════╗
 *  NULL  <══ ║ NODE ║ ══> ║ NODE ║ ══> NULL
 *            ║      ║ <══ ║      ║
 *            ╚══════╝     ╚══════╝
 *
 *
 *   Node illustration
 *
 *  ╔══════════════════╗
 *  ║      NODE        ║
 *  ╠══════════════════╣
 *  ║ type: string     ║
 *  ║ name: string     ║
 *  ║ code: string     ║
 *  ║ provider: string ║
 *  ║ configList: []   ║
 *  ╚══════════════════╝
 *
 */
class ProxyLocation {
    constructor(_name, _code, _type, _provider = 'GENERIC', _proxyConfigList = [], _extraData = {}) {
        this._name = _name;
        this._code = _code;
        this._type = _type;
        this._provider = _provider;
        this._proxyConfigList = _proxyConfigList;
        this._extraData = _extraData;
        this._children = {};
        this._parent = null;
        this._head = null;
        this._tail = null;
        this._prev = null;
        this._next = null;
        this._length = 0;
    }
    /**
     * implements iterator "for ( const item of this )"
     */
    [Symbol.iterator]() {
        return new ProxyLocationIterator_1.ProxyLocationIterator(this.head());
    }
    static create(name, code, type, provider = 'GENERIC', proxyConfigList = [], extraData = {}) {
        return new ProxyLocation((new LocationName_1.LocationName(name)), (new LocationCode_1.LocationCode(code)), type, provider, proxyConfigList, extraData);
    }
    /**
     * encodes location
     */
    encode() {
        return JSON.stringify(this);
    }
    /**
     * decode location from string
     */
    static decode(json) {
        const obj = JSON.parse(json);
        const key = Object.keys(obj)[0];
        return ProxyLocation.prepareDecode(obj[key]);
    }
    static prepareDecode(obj) {
        const configs = [];
        for (const config of obj.location.configs) {
            configs.push(ProxyLocationConfig_1.ProxyLocationConfig.create(config.host, config.port.from, config.port.to, config.scheme, config.redundancy, config.weight));
        }
        const location = ProxyLocation.create(obj.location.name, obj.location.code, obj.location.type, obj.location.provider, configs, obj.location.extraData);
        for (const key in obj.nodes) {
            if (obj.nodes.hasOwnProperty(key)) {
                location.append(this.prepareDecode(obj.nodes[key]));
            }
        }
        return location;
    }
    /**
     * return location name
     */
    name() {
        return this._name;
    }
    /**
     * return location code
     */
    code() {
        return this._code;
    }
    /**
     * return extra data
     */
    extraData() {
        return this._extraData;
    }
    /**
     * return location type
     */
    type() {
        return this._type;
    }
    /**
     * return location provider
     */
    provider() {
        return this._provider;
    }
    /**
     * @param type
     */
    isType(type) {
        return this._type === type;
    }
    /**
     * @param provider
     */
    isProvider(provider) {
        return this._provider === provider;
    }
    /**
     * return a parent or null
     */
    parent() {
        return this._parent;
    }
    hasLocation(code) {
        return this._children[code.value()] !== undefined;
    }
    getLocation(code) {
        if (!this.hasLocation(code)) {
            throw new ProxyLocationException_1.ProxyLocationException('ProxyLocation: could get location');
        }
        return this._children[code.value()];
    }
    /**
     * checks if it's root node
     */
    isRootNode() {
        return this._parent === null;
    }
    /**
     * append a new location to the tail of list
     * @param location
     */
    append(location) {
        if (!this._head) {
            this._head = location;
            this._tail = location;
        }
        else {
            const node = this._tail;
            node._next = location;
            location._prev = node;
            this._tail = location;
        }
        this._children[location.code().value()] = location;
        location._parent = this;
        this._length += 1;
    }
    /**
     * return configuration list for a location
     */
    configList() {
        return this._proxyConfigList;
    }
    /**
     * check if a list is empty
     */
    isEmpty() {
        return this.length() === 0;
    }
    /**
     * check if a list is not empty
     */
    isNotEmpty() {
        return !this.isEmpty();
    }
    /**
     * get previous location or null
     */
    prev() {
        return this._prev;
    }
    /**
     * get next location or null
     */
    next() {
        return this._next;
    }
    /**
     * get the first node of the list
     */
    head() {
        return this._head;
    }
    /**
     * get the last node of the list
     */
    tail() {
        return this._tail;
    }
    /**
     * get size of list
     */
    length() {
        return this._length;
    }
    /**
     * JSON.stringify uses this method to encode a location
     */
    toJSON() {
        const obj = {};
        this.prepareJSON(obj, this);
        return obj;
    }
    /**
     * recursive sort all locations from a-Z
     */
    sort() {
        if (this.isNotEmpty()) {
            for (const item of this) {
                item.sort();
            }
        }
        for (let i = 0; i < this.length(); i++) {
            for (let j = 0; j < this.length() - 1; j++) {
                const item = this.pos(j);
                const next = item.next();
                if (item.name().value().toLocaleLowerCase() > next.name().value().toLocaleLowerCase()) {
                    this.swap(j, j + 1);
                }
            }
        }
    }
    /**
     * return a location by position id
     * @param pos
     */
    pos(pos) {
        if (this.length() - 1 < pos) {
            throw new ProxyLocationException_1.ProxyLocationException('Incorrect position');
        }
        let i = 0;
        for (const location of this) {
            if (i === pos) {
                return location;
            }
            i++;
        }
    }
    /**
     * remove a location by position id
     * @param pos
     */
    remove(pos) {
        this.validatePosition(pos);
        const location = this.pos(pos);
        this._length += -1;
        if (location._prev && location._next) {
            const prev = location._prev;
            const next = location._next;
            prev._next = next;
            next._prev = prev;
        }
        else if (location._prev && location._next === null) {
            const prev = location._prev;
            if (this._tail === location) {
                this._tail = prev;
            }
            prev._next = null;
        }
        else if (location._prev === null && location._next) {
            const next = location._next;
            if (this._head === location) {
                this._head = next;
            }
            next._prev = null;
        }
        else {
            this._head = null;
            this._tail = null;
        }
        location._prev = null;
        location._next = null;
        location._parent = null;
        return location;
    }
    /**
     * replace a location by position id
     * @param pos
     * @param location
     */
    replace(pos, location) {
        this.validatePosition(pos);
        const current = this.remove(pos);
        this.insert(pos, location);
        return current;
    }
    /**
     * insert a location into the specific position
     * @param pos
     * @param location
     */
    insert(pos, location) {
        if (this.length() === 0 && pos === 0) {
            this.append(location);
        }
        else if (this.length() === pos) {
            this.append(location);
        }
        else if (this.length() - 1 < pos) {
            throw new ProxyLocationException_1.ProxyLocationException('Incorrect position');
        }
        else if (pos === 0) {
            const current = this.pos(pos);
            current._prev = location;
            location._next = current;
            this._head = location;
            this._length += 1;
        }
        else {
            const current = this.pos(pos);
            if (current._prev && current._next) {
                const prev = current._prev;
                prev._next = location;
                current._prev = location;
                location._next = current;
                location._prev = prev;
            }
            else if (current._prev && current._next === null) {
                const prev = current._prev;
                location._next = current;
                location._prev = prev;
                prev._next = location;
                current._prev = location;
            }
            this._length += 1;
        }
        location._parent = this;
    }
    /**
     * swap locations by their positions
     * @param pos1
     * @param pos2
     */
    swap(pos1, pos2) {
        if ((this.length() - 1 < pos1) || (this.length() - 1 < pos2)) {
            throw new ProxyLocationException_1.ProxyLocationException('Incorrect position');
        }
        else if (pos1 === pos2) {
            return;
        }
        const numb1 = pos1 < pos2 ? pos1 : pos2;
        const numb2 = pos1 > pos2 ? pos1 : pos2;
        const a = this.pos(numb1);
        const b = this.pos(numb2);
        this.remove(numb1);
        this.remove(numb2 - 1);
        this.insert(numb1, b);
        this.insert(numb2, a);
    }
    prepareJSON(obj, location) {
        const key = location.code().value();
        obj[key] = {
            location: {
                name: location.name().value(),
                code: location.code().value(),
                type: location.type(),
                provider: location.provider(),
                configs: [],
                extraData: location.extraData(),
            },
            nodes: {},
        };
        const configs = location.configList();
        for (const config of configs) {
            obj[key].location.configs.push({
                host: config.host().value(),
                scheme: config.scheme().value(),
                port: {
                    from: config.portRange().from(),
                    to: config.portRange().to(),
                },
                redundancy: config.redundancy().value(),
                weight: config.weight().value(),
            });
        }
        for (const item of location) {
            this.prepareJSON(obj[key].nodes, item);
        }
    }
    validatePosition(pos) {
        if (this.length() < pos || 0 > pos) {
            throw new ProxyLocationException_1.ProxyLocationException('Incorrect position');
        }
    }
}
exports.ProxyLocation = ProxyLocation;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/models/ProxyLocationConfig.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/models/ProxyLocationConfig.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyLocationConfig = void 0;
const ProxyHost_1 = __webpack_require__(/*! ../values/host/ProxyHost */ "./node_modules/@urbandevs/mario-proxy-location/dist/values/host/ProxyHost.js");
const ProxyPortRange_1 = __webpack_require__(/*! ../values/portRange/ProxyPortRange */ "./node_modules/@urbandevs/mario-proxy-location/dist/values/portRange/ProxyPortRange.js");
const ProxyRedundancy_1 = __webpack_require__(/*! ../values/redundancy/ProxyRedundancy */ "./node_modules/@urbandevs/mario-proxy-location/dist/values/redundancy/ProxyRedundancy.js");
const ProxyScheme_1 = __webpack_require__(/*! ../values/scheme/ProxyScheme */ "./node_modules/@urbandevs/mario-proxy-location/dist/values/scheme/ProxyScheme.js");
const ProxyWeight_1 = __webpack_require__(/*! ../values/weight/ProxyWeight */ "./node_modules/@urbandevs/mario-proxy-location/dist/values/weight/ProxyWeight.js");
class ProxyLocationConfig {
    constructor(_host, _portRange, _scheme, _redundancy, _weight) {
        this._host = _host;
        this._portRange = _portRange;
        this._scheme = _scheme;
        this._redundancy = _redundancy;
        this._weight = _weight;
    }
    static create(host, from, to, scheme, redundancy, weight) {
        return new ProxyLocationConfig((new ProxyHost_1.ProxyHost(host)), (new ProxyPortRange_1.ProxyPortRange(from, to)), (new ProxyScheme_1.ProxyScheme(scheme)), (new ProxyRedundancy_1.ProxyRedundancy(redundancy)), (new ProxyWeight_1.ProxyWeight(weight)));
    }
    host() {
        return this._host;
    }
    portRange() {
        return this._portRange;
    }
    scheme() {
        return this._scheme;
    }
    redundancy() {
        return this._redundancy;
    }
    weight() {
        return this._weight;
    }
}
exports.ProxyLocationConfig = ProxyLocationConfig;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/models/ProxyLocationIterator.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/models/ProxyLocationIterator.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyLocationIterator = void 0;
class ProxyLocationIterator {
    constructor(location) {
        this.location = location;
    }
    next() {
        const current = this.location;
        this.location = this.location ? this.location.next() : null;
        return {
            done: !Boolean(current),
            value: current,
        };
    }
}
exports.ProxyLocationIterator = ProxyLocationIterator;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/services/LocationHelper.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/services/LocationHelper.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var LocationHelper_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationHelper = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
let LocationHelper = LocationHelper_1 = class LocationHelper {
    getCountryName(countryCode, defaultName) {
        if (typeof LocationHelper_1.locations[countryCode] === 'undefined') {
            return defaultName;
        }
        return LocationHelper_1.locations[countryCode].countryName;
    }
    getStateName(countryCode, stateCode, defaultName) {
        if (typeof LocationHelper_1.locations[countryCode] === 'undefined') {
            return defaultName;
        }
        if (typeof LocationHelper_1.locations[countryCode].states === 'undefined') {
            return defaultName;
        }
        if (typeof LocationHelper_1.locations[countryCode].states[stateCode] === 'undefined') {
            return defaultName;
        }
        return LocationHelper_1.locations[countryCode].states[stateCode];
    }
};
LocationHelper.locations = {
    AF: {
        countryName: 'Afghanistan',
    },
    AL: {
        countryName: 'Albania',
    },
    DZ: {
        countryName: 'Algeria',
    },
    AO: {
        countryName: 'Angola',
    },
    AI: {
        countryName: 'Anguilla',
    },
    AG: {
        countryName: 'Antigua and Barbuda',
    },
    AR: {
        countryName: 'Argentina',
    },
    AM: {
        countryName: 'Armenia',
    },
    AW: {
        countryName: 'Aruba',
    },
    AU: {
        countryName: 'Australia',
    },
    AT: {
        countryName: 'Austria',
    },
    AZ: {
        countryName: 'Azerbaijan',
    },
    BS: {
        countryName: 'Bahamas',
    },
    BH: {
        countryName: 'Bahrain',
    },
    BD: {
        countryName: 'Bangladesh',
    },
    BB: {
        countryName: 'Barbados',
    },
    BY: {
        countryName: 'Belarus',
    },
    BE: {
        countryName: 'Belgium',
    },
    BZ: {
        countryName: 'Belize',
    },
    BJ: {
        countryName: 'Benin',
    },
    BO: {
        countryName: 'Bolivia',
    },
    BA: {
        countryName: 'Bosnia and Herzegovina',
    },
    BW: {
        countryName: 'Botswana',
    },
    BR: {
        countryName: 'Brazil',
    },
    BN: {
        countryName: 'Brunei Darussalam',
    },
    BG: {
        countryName: 'Bulgaria',
    },
    KH: {
        countryName: 'Cambodia',
    },
    CM: {
        countryName: 'Cameroon',
    },
    CA: {
        countryName: 'Canada',
        states: {
            AB: 'Alberta',
            BC: 'British Columbia',
            MB: 'Manitoba',
            NB: 'New Brunswick',
            NL: 'Newfoundland and Labrador',
            NS: 'Nova Scotia',
            NT: 'Northwest Territories',
            NU: 'Nunavut',
            ON: 'Ontario',
            PE: 'Prince Edward Island',
            QC: 'Québec',
            SK: 'Saskatchewan',
            YT: 'Yukon',
        },
    },
    CV: {
        countryName: 'Cape Verde',
    },
    KY: {
        countryName: 'Cayman Islands',
    },
    CL: {
        countryName: 'Chile',
    },
    CN: {
        countryName: 'China',
    },
    CO: {
        countryName: 'Colombia',
    },
    KM: {
        countryName: 'Comoros',
    },
    CG: {
        countryName: 'Congo',
    },
    CR: {
        countryName: 'Costa Rica',
    },
    HR: {
        countryName: 'Croatia',
    },
    CY: {
        countryName: 'Cyprus',
    },
    CZ: {
        countryName: 'Czech Republic',
    },
    DK: {
        countryName: 'Denmark',
    },
    DO: {
        countryName: 'Dominican Republic',
    },
    EC: {
        countryName: 'Ecuador',
    },
    EG: {
        countryName: 'Egypt',
    },
    SV: {
        countryName: 'El Salvador',
    },
    EE: {
        countryName: 'Estonia',
    },
    ET: {
        countryName: 'Ethiopia',
    },
    FI: {
        countryName: 'Finland',
    },
    FR: {
        countryName: 'France',
    },
    GE: {
        countryName: 'Georgia',
    },
    GH: {
        countryName: 'Ghana',
    },
    GR: {
        countryName: 'Greece',
    },
    GP: {
        countryName: 'Guadeloupe',
    },
    GT: {
        countryName: 'Guatemala',
    },
    GY: {
        countryName: 'Guyana',
    },
    HT: {
        countryName: 'Haiti',
    },
    HN: {
        countryName: 'Honduras',
    },
    HK: {
        countryName: 'Hong Kong',
    },
    HU: {
        countryName: 'Hungary',
    },
    IS: {
        countryName: 'Iceland',
    },
    IN: {
        countryName: 'India',
    },
    ID: {
        countryName: 'Indonesia',
    },
    IR: {
        countryName: 'Iran',
    },
    IQ: {
        countryName: 'Iraq',
    },
    IE: {
        countryName: 'Ireland',
    },
    IL: {
        countryName: 'Israel',
    },
    IT: {
        countryName: 'Italy',
    },
    CI: {
        countryName: 'Ivory Coast',
    },
    JM: {
        countryName: 'Jamaica',
    },
    JP: {
        countryName: 'Japan',
    },
    JO: {
        countryName: 'Jordan',
    },
    KZ: {
        countryName: 'Kazakhstan',
    },
    KE: {
        countryName: 'Kenya',
    },
    KR: {
        countryName: 'Korea',
    },
    XK: {
        countryName: 'Kosovo',
    },
    KW: {
        countryName: 'Kuwait',
    },
    KG: {
        countryName: 'Kyrgyzstan',
    },
    LA: {
        countryName: 'Lao People\'s Democratic Republic',
    },
    LV: {
        countryName: 'Latvia',
    },
    LB: {
        countryName: 'Lebanon',
    },
    LY: {
        countryName: 'Libyan Arab Jamahiriya',
    },
    LT: {
        countryName: 'Lithuania',
    },
    LU: {
        countryName: 'Luxembourg',
    },
    MO: {
        countryName: 'Macau',
    },
    MK: {
        countryName: 'Macedonia',
    },
    MG: {
        countryName: 'Madagascar',
    },
    MY: {
        countryName: 'Malaysia',
    },
    MV: {
        countryName: 'Maldives',
    },
    ML: {
        countryName: 'Mali',
    },
    MT: {
        countryName: 'Malta',
    },
    MQ: {
        countryName: 'Martinique',
    },
    MU: {
        countryName: 'Mauritius',
    },
    MX: {
        countryName: 'Mexico',
    },
    MD: {
        countryName: 'Moldova',
    },
    MN: {
        countryName: 'Mongolia',
    },
    ME: {
        countryName: 'Montenegro',
    },
    MA: {
        countryName: 'Morocco',
    },
    MZ: {
        countryName: 'Mozambique',
    },
    MM: {
        countryName: 'Myanmar',
    },
    NA: {
        countryName: 'Namibia',
    },
    NP: {
        countryName: 'Nepal',
    },
    NL: {
        countryName: 'Netherlands',
    },
    NC: {
        countryName: 'New Caledonia',
    },
    NZ: {
        countryName: 'New Zealand',
    },
    NI: {
        countryName: 'Nicaragua',
    },
    NG: {
        countryName: 'Nigeria',
    },
    NO: {
        countryName: 'Norway',
    },
    OM: {
        countryName: 'Oman',
    },
    PK: {
        countryName: 'Pakistan',
    },
    PS: {
        countryName: 'Palestine',
    },
    PA: {
        countryName: 'Panama',
    },
    PY: {
        countryName: 'Paraguay',
    },
    PE: {
        countryName: 'Peru',
    },
    PH: {
        countryName: 'Philippines',
    },
    PL: {
        countryName: 'Poland',
    },
    PT: {
        countryName: 'Portugal',
    },
    PR: {
        countryName: 'Puerto Rico',
    },
    QA: {
        countryName: 'Qatar',
    },
    RE: {
        countryName: 'Reunion',
    },
    RO: {
        countryName: 'Romania',
    },
    LC: {
        countryName: 'Saint Lucia',
    },
    VC: {
        countryName: 'Saint Vincent and the Grenadines',
    },
    SA: {
        countryName: 'Saudi Arabia',
    },
    SN: {
        countryName: 'Senegal',
    },
    RS: {
        countryName: 'Serbia',
    },
    SC: {
        countryName: 'Seychelles',
    },
    SG: {
        countryName: 'Singapore',
    },
    SK: {
        countryName: 'Slovakia',
    },
    SI: {
        countryName: 'Slovenia',
    },
    ZA: {
        countryName: 'South Africa',
    },
    ES: {
        countryName: 'Spain',
    },
    LK: {
        countryName: 'Sri Lanka',
    },
    SD: {
        countryName: 'Sudan',
    },
    SR: {
        countryName: 'Suriname',
    },
    SE: {
        countryName: 'Sweden',
    },
    CH: {
        countryName: 'Switzerland',
    },
    SY: {
        countryName: 'Syrian Arab Republic',
    },
    TW: {
        countryName: 'Taiwan',
    },
    TZ: {
        countryName: 'Tanzania',
    },
    TH: {
        countryName: 'Thailand',
    },
    TT: {
        countryName: 'Trinidad and Tobago',
    },
    TN: {
        countryName: 'Tunisia',
    },
    TR: {
        countryName: 'Turkey',
    },
    UG: {
        countryName: 'Uganda',
    },
    UA: {
        countryName: 'Ukraine',
    },
    AE: {
        countryName: 'United Arab Emirates',
    },
    UY: {
        countryName: 'Uruguay',
    },
    UZ: {
        countryName: 'Uzbekistan',
    },
    VE: {
        countryName: 'Venezuela',
    },
    VN: {
        countryName: 'Vietnam',
    },
    YE: {
        countryName: 'Yemen',
    },
    ZM: {
        countryName: 'Zambia',
    },
    ZW: {
        countryName: 'Zimbabwe',
    },
    DE: {
        countryName: 'Germany',
        states: {
            BW: 'Baden-Württemberg',
            BY: 'Bayern',
            BE: 'Berlin',
            BB: 'Brandenburg',
            HB: 'Bremen',
            HH: 'Hamburg',
            HE: 'Hessen',
            MV: 'Mecklenburg-Vorpommern',
            NI: 'Niedersachsen',
            NW: 'Nordrhein-Westfalen',
            RP: 'Rheinland-Pfalz',
            SL: 'Saarland',
            SN: 'Sachsen',
            ST: 'Sachsen-Anhalt',
            SH: 'Schleswig-Holstein',
            TH: 'Thüringen',
        },
    },
    US: {
        countryName: 'United States (USA)',
        states: {
            AZ: 'Arizona',
            AL: 'Alabama',
            AK: 'Alaska',
            AR: 'Arkansas',
            CA: 'California',
            CO: 'Colorado',
            CT: 'Connecticut',
            DE: 'Delaware',
            DC: 'District Of Columbia',
            FL: 'Florida',
            GA: 'Georgia',
            HI: 'Hawaii',
            ID: 'Idaho',
            IL: 'Illinois',
            IN: 'Indiana',
            IA: 'Iowa',
            KS: 'Kansas',
            KY: 'Kentucky',
            LA: 'Louisiana',
            ME: 'Maine',
            MD: 'Maryland',
            MA: 'Massachusetts',
            MI: 'Michigan',
            MN: 'Minnesota',
            MS: 'Mississippi',
            MO: 'Missouri',
            MT: 'Montana',
            NE: 'Nebraska',
            NV: 'Nevada',
            NH: 'New Hampshire',
            NJ: 'New Jersey',
            NM: 'New Mexico',
            NY: 'New York',
            NC: 'North Carolina',
            ND: 'North Dakota',
            OH: 'Ohio',
            OK: 'Oklahoma',
            OR: 'Oregon',
            PA: 'Pennsylvania',
            RI: 'Rhode Island',
            SC: 'South Carolina',
            SD: 'South Dakota',
            TN: 'Tennessee',
            TX: 'Texas',
            UT: 'Utah',
            VT: 'Vermont',
            VA: 'Virginia',
            WA: 'Washington',
            WV: 'West Virginia',
            WI: 'Wisconsin',
            WY: 'Wyoming',
        },
    },
    US_FAST: {
        countryName: 'United States (USA) FAST',
    },
    GB: {
        countryName: 'United Kingdom (UK)',
        states: {},
    },
    RU: {
        countryName: 'Russia',
        states: {},
    },
};
LocationHelper = LocationHelper_1 = __decorate([
    inversify_1.injectable()
], LocationHelper);
exports.LocationHelper = LocationHelper;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/services/ProxyLocationService.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/services/ProxyLocationService.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyLocationService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const ProxyLocationEvents_1 = __webpack_require__(/*! ../ProxyLocationEvents */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationEvents.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const ProxyLocationServiceException_1 = __webpack_require__(/*! ../exceptions/ProxyLocationServiceException */ "./node_modules/@urbandevs/mario-proxy-location/dist/exceptions/ProxyLocationServiceException.js");
let ProxyLocationService = class ProxyLocationService {
    constructor(proxyService, internalDispatcher) {
        this.proxyService = proxyService;
        this.internalDispatcher = internalDispatcher;
    }
    setStrategy(strategy) {
        this.strategy = strategy;
    }
    onAuthRequired(callback) {
        this.proxyService.onAuthRequired(callback);
    }
    activate(location, bypassList = []) {
        return __awaiter(this, void 0, void 0, function* () {
            this.checkStrategyOrThrowException();
            yield this.emitBeforeActivateEvent(location, bypassList);
            const proxy = yield this.strategy.selectProxy(location);
            this.activatedLocation = location;
            yield this.proxyService.connect(proxy, bypassList);
            yield this.emitAfterActivateEvent(location, bypassList);
        });
    }
    selectProxy(location) {
        this.checkStrategyOrThrowException();
        return this.strategy.selectProxy(location);
    }
    deactivate() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.hasActivated()) {
                throw new ProxyLocationServiceException_1.ProxyLocationServiceException(`ProxyLocationService: no active location`);
            }
            const location = this.activatedLocation;
            yield this.emitBeforeDeactivateEvent(location);
            this.activatedLocation = null;
            yield this.proxyService.direct();
            yield this.emitAfterDeactivateEvent(location);
        });
    }
    hasActivated() {
        return !!this.activatedLocation;
    }
    canBeActivated(location) {
        this.checkStrategyOrThrowException();
        return this.strategy.canBeActivated(location);
    }
    getActivated() {
        if (!this.hasActivated()) {
            throw new ProxyLocationServiceException_1.ProxyLocationServiceException(`ProxyLocationService: no active location`);
        }
        return this.activatedLocation;
    }
    checkStrategyOrThrowException() {
        if (!this.strategy) {
            throw new ProxyLocationServiceException_1.ProxyLocationServiceException(`ProxyLocationService: strategy is not set`);
        }
    }
    emitBeforeActivateEvent(location, bypassList) {
        return __awaiter(this, void 0, void 0, function* () {
            const payload = { location, bypassList };
            const event = new src_1.MarioEvent(ProxyLocationEvents_1.ProxyLocationEvents.PROXY_LOCATION_BEFORE_ACTIVATED, payload);
            yield this.internalDispatcher.emit(event);
        });
    }
    emitAfterActivateEvent(location, bypassList) {
        return __awaiter(this, void 0, void 0, function* () {
            const payload = { location, bypassList };
            const event = new src_1.MarioEvent(ProxyLocationEvents_1.ProxyLocationEvents.PROXY_LOCATION_AFTER_ACTIVATED, payload);
            yield this.internalDispatcher.emit(event);
        });
    }
    emitBeforeDeactivateEvent(location) {
        return __awaiter(this, void 0, void 0, function* () {
            const event = new src_1.MarioEvent(ProxyLocationEvents_1.ProxyLocationEvents.PROXY_LOCATION_BEFORE_DEACTIVATED, location);
            yield this.internalDispatcher.emit(event);
        });
    }
    emitAfterDeactivateEvent(location) {
        return __awaiter(this, void 0, void 0, function* () {
            const event = new src_1.MarioEvent(ProxyLocationEvents_1.ProxyLocationEvents.PROXY_LOCATION_AFTER_DEACTIVATED, location);
            yield this.internalDispatcher.emit(event);
        });
    }
};
ProxyLocationService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.PROXY_SERVICE)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [Object, Object])
], ProxyLocationService);
exports.ProxyLocationService = ProxyLocationService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/services/strategies/weight/WeightBasedStrategy.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/services/strategies/weight/WeightBasedStrategy.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WeightBasedStrategy = void 0;
class WeightBasedStrategy {
    selectProxy(location) {
        return __awaiter(this, void 0, void 0, function* () {
            const groups = [];
            this.groupByWeight(location, groups);
            const total = this.calculateTotalWeight(groups);
            if (total === 0) {
                throw new Error(`WeightBasedStrategy: location "${location.name().value()}" can not be activated`);
            }
            // console.log(groups);
            // console.log(total);
            const random = this.randomNumber(1, total);
            return this.findProxy(random, groups);
        });
    }
    canBeActivated(location) {
        const groups = [];
        // console.log(groups);
        this.groupByWeight(location, groups);
        const total = this.calculateTotalWeight(groups);
        return total > 0;
    }
    groupByWeight(location, groups) {
        const configs = location.configList();
        configs.forEach((config) => {
            const ports = config.portRange().to() - config.portRange().from() + 1;
            const from = groups.length ? (groups[groups.length - 1].to + 1) : 1;
            const weight = config.weight().value() * ports;
            const group = {
                from,
                to: from + weight,
                proxyConfig: config,
            };
            groups.push(group);
        });
        for (const item of location) {
            this.groupByWeight(item, groups);
        }
    }
    calculateTotalWeight(groups) {
        return groups.length ? (groups[groups.length - 1].to) : 0;
    }
    findProxy(numb, groups) {
        const group = groups.find((group) => group.from <= numb && group.to >= numb);
        const config = group.proxyConfig;
        const range = config.portRange();
        const port = this.randomNumber(range.from(), range.to());
        const proxy = {
            port,
            scheme: config.scheme().value(),
            host: config.host().value(),
        };
        return proxy;
    }
    randomNumber(from, to) {
        return parseInt(Math.floor(Math.random() * (to - from + 1) + from).toString(), 10);
    }
}
exports.WeightBasedStrategy = WeightBasedStrategy;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/values/code/LocationCode.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/values/code/LocationCode.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationCode = void 0;
const LocationCodeEmptyException_1 = __webpack_require__(/*! ./LocationCodeEmptyException */ "./node_modules/@urbandevs/mario-proxy-location/dist/values/code/LocationCodeEmptyException.js");
class LocationCode {
    constructor(code) {
        this.code = code;
        this.code = code.trim();
        if (this.code.length === 0) {
            throw new LocationCodeEmptyException_1.LocationCodeEmptyException('code has to be not empty');
        }
    }
    value() {
        return this.code;
    }
}
exports.LocationCode = LocationCode;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/values/code/LocationCodeEmptyException.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/values/code/LocationCodeEmptyException.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationCodeEmptyException = void 0;
const ProxyLocationException_1 = __webpack_require__(/*! ../../ProxyLocationException */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationException.js");
class LocationCodeEmptyException extends ProxyLocationException_1.ProxyLocationException {
}
exports.LocationCodeEmptyException = LocationCodeEmptyException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/values/host/ProxyHost.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/values/host/ProxyHost.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyHost = void 0;
class ProxyHost {
    constructor(host) {
        this.host = host;
    }
    value() {
        return this.host;
    }
}
exports.ProxyHost = ProxyHost;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/values/name/LocationName.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/values/name/LocationName.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationName = void 0;
const LocationNameEmptyException_1 = __webpack_require__(/*! ./LocationNameEmptyException */ "./node_modules/@urbandevs/mario-proxy-location/dist/values/name/LocationNameEmptyException.js");
class LocationName {
    constructor(name) {
        this.name = name;
        this.name = name.trim();
        if (this.name.length === 0) {
            throw new LocationNameEmptyException_1.LocationNameEmptyException('Name has to be not empty');
        }
    }
    value() {
        return this.name;
    }
}
exports.LocationName = LocationName;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/values/name/LocationNameEmptyException.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/values/name/LocationNameEmptyException.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationNameEmptyException = void 0;
const ProxyLocationException_1 = __webpack_require__(/*! ../../ProxyLocationException */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationException.js");
class LocationNameEmptyException extends ProxyLocationException_1.ProxyLocationException {
}
exports.LocationNameEmptyException = LocationNameEmptyException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/values/portRange/ProxyPortRange.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/values/portRange/ProxyPortRange.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyPortRange = void 0;
const ProxyPortRangeException_1 = __webpack_require__(/*! ./ProxyPortRangeException */ "./node_modules/@urbandevs/mario-proxy-location/dist/values/portRange/ProxyPortRangeException.js");
class ProxyPortRange {
    constructor(_from, _to) {
        this._from = _from;
        this._to = _to;
        this.validate(this._from, 'from');
        this.validate(this._to, 'to');
        if (this._from > this._to) {
            const message = `Proxy port range: incorrect range "from": ${_from} "to": ${_to}`;
            throw new ProxyPortRangeException_1.ProxyPortRangeException(message);
        }
    }
    from() {
        return this._from;
    }
    to() {
        return this._to;
    }
    validate(port, key) {
        const errorMessage = `Proxy port range: param "${key}" has to be a positive integer value`;
        if (port < 0 || Number.isInteger(port) === false) {
            throw new ProxyPortRangeException_1.ProxyPortRangeException(errorMessage);
        }
    }
}
exports.ProxyPortRange = ProxyPortRange;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/values/portRange/ProxyPortRangeException.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/values/portRange/ProxyPortRangeException.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyPortRangeException = void 0;
class ProxyPortRangeException extends Error {
}
exports.ProxyPortRangeException = ProxyPortRangeException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/values/redundancy/ProxyRedundancy.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/values/redundancy/ProxyRedundancy.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyRedundancy = void 0;
class ProxyRedundancy {
    constructor(redundancy) {
        this.redundancy = redundancy;
    }
    value() {
        return this.redundancy;
    }
}
exports.ProxyRedundancy = ProxyRedundancy;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/values/scheme/ProxyScheme.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/values/scheme/ProxyScheme.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyScheme = void 0;
class ProxyScheme {
    constructor(_scheme) {
        this._scheme = _scheme;
    }
    value() {
        return this._scheme;
    }
}
exports.ProxyScheme = ProxyScheme;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/values/weight/ProxyWeight.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/values/weight/ProxyWeight.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyWeight = void 0;
const ProxyWeightNegativeNumbException_1 = __webpack_require__(/*! ./ProxyWeightNegativeNumbException */ "./node_modules/@urbandevs/mario-proxy-location/dist/values/weight/ProxyWeightNegativeNumbException.js");
const ProxyWeightNotNumberException_1 = __webpack_require__(/*! ./ProxyWeightNotNumberException */ "./node_modules/@urbandevs/mario-proxy-location/dist/values/weight/ProxyWeightNotNumberException.js");
class ProxyWeight {
    constructor(weight) {
        this.weight = weight;
        if (typeof weight !== 'number') {
            throw new ProxyWeightNotNumberException_1.ProxyWeightNotNumberException('weight must be a number');
        }
        if (weight < 0) {
            throw new ProxyWeightNegativeNumbException_1.ProxyWeightNegativeNumbException('weight must be positive number');
        }
    }
    value() {
        return this.weight;
    }
}
exports.ProxyWeight = ProxyWeight;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/values/weight/ProxyWeightNegativeNumbException.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/values/weight/ProxyWeightNegativeNumbException.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyWeightNegativeNumbException = void 0;
const ProxyLocationException_1 = __webpack_require__(/*! ../../ProxyLocationException */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationException.js");
class ProxyWeightNegativeNumbException extends ProxyLocationException_1.ProxyLocationException {
}
exports.ProxyWeightNegativeNumbException = ProxyWeightNegativeNumbException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-proxy-location/dist/values/weight/ProxyWeightNotNumberException.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-proxy-location/dist/values/weight/ProxyWeightNotNumberException.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyWeightNotNumberException = void 0;
const ProxyLocationException_1 = __webpack_require__(/*! ../../ProxyLocationException */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationException.js");
class ProxyWeightNotNumberException extends ProxyLocationException_1.ProxyLocationException {
}
exports.ProxyWeightNotNumberException = ProxyWeightNotNumberException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/AlarmNames.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-sensitive-data-filter/dist/AlarmNames.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AlarmNames = void 0;
const AlarmNames = {
    UPDATE_RULES_LIST: 'UPDATE_RULES_LIST'
};
exports.AlarmNames = AlarmNames;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/SensitiveDataFilterModule.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-sensitive-data-filter/dist/SensitiveDataFilterModule.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SensitiveDataFilterModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const AlarmService_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Alarm/Bg/AlarmService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Alarm/Bg/AlarmService.js");
const SensitiveDataFilterTypes_1 = __webpack_require__(/*! ./SensitiveDataFilterTypes */ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/SensitiveDataFilterTypes.js");
const SensitiveDataFilterService_1 = __webpack_require__(/*! ./services/SensitiveDataFilterService */ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/services/SensitiveDataFilterService.js");
const UpdateRulesListEvent_1 = __webpack_require__(/*! ./listeners/UpdateRulesListEvent */ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/listeners/UpdateRulesListEvent.js");
const AlarmNames_1 = __webpack_require__(/*! ./AlarmNames */ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/AlarmNames.js");
const defaultRulesUpdateInterval = 24 * 60;
class SensitiveDataFilterModule extends src_1.MarioModule {
    name() {
        return 'SensitiveDataFilterModule';
    }
    static use(mario, options) {
        return mario.registerModule(SensitiveDataFilterModule, options);
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this.mario().container().bind(SensitiveDataFilterTypes_1.SensitiveDataFilterTypes.SDF_PARAM_ENABLED).toConstantValue(!!options.enabled);
            this.mario().container().bind(SensitiveDataFilterTypes_1.SensitiveDataFilterTypes.SDF_PARAM_HOST).toConstantValue(options.host);
            this.mario().container().bind(SensitiveDataFilterTypes_1.SensitiveDataFilterTypes.SDF_PARAM_LOGGING).toConstantValue(!!options.logging);
            this.mario().container().bind(SensitiveDataFilterTypes_1.SensitiveDataFilterTypes.SDF_PARAM_RULES_UPDATE_INTERVAL).toConstantValue(options.rulesUpdateInterval);
            this.mario().registerService(SensitiveDataFilterTypes_1.SensitiveDataFilterTypes.SDF_SERVICE, SensitiveDataFilterService_1.SensitiveDataFilterService);
            yield this.mario().registerService(src_1.MARIO_TYPES.ALARM_SERVICE, AlarmService_1.AlarmService);
            yield this.mario().getService(SensitiveDataFilterTypes_1.SensitiveDataFilterTypes.SDF_SERVICE).init();
            this.mario().internalDispatcher().on(UpdateRulesListEvent_1.UpdateRulesListEvent);
            const alarmOptions = {
                delayInMinutes: options.rulesUpdateInterval || defaultRulesUpdateInterval,
                periodInMinutes: options.rulesUpdateInterval || defaultRulesUpdateInterval
            };
            yield this.mario().getService(src_1.MARIO_TYPES.ALARM_SERVICE).create(alarmOptions, AlarmNames_1.AlarmNames.UPDATE_RULES_LIST);
        });
    }
}
exports.SensitiveDataFilterModule = SensitiveDataFilterModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/SensitiveDataFilterTypes.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-sensitive-data-filter/dist/SensitiveDataFilterTypes.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SensitiveDataFilterTypes = void 0;
exports.SensitiveDataFilterTypes = {
    SDF_PARAM_ENABLED: Symbol.for('SDF_PARAM_ENABLED'),
    SDF_PARAM_HOST: Symbol.for('SDF_PARAM_HOST'),
    SDF_PARAM_LOGGING: Symbol.for('SDF_PARAM_LOGGING'),
    SDF_PARAM_RULES_UPDATE_INTERVAL: Symbol.for('SDF_PARAM_RULES_UPDATE_INTERVAL'),
    SDF_SERVICE: Symbol.for('SDF_SERVICE')
};


/***/ }),

/***/ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/exceptions/SensitiveDataFilterException.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-sensitive-data-filter/dist/exceptions/SensitiveDataFilterException.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SensitiveDataFilterException = void 0;
class SensitiveDataFilterException extends Error {
}
exports.SensitiveDataFilterException = SensitiveDataFilterException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/listeners/UpdateRulesListEvent.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-sensitive-data-filter/dist/listeners/UpdateRulesListEvent.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateRulesListEvent = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const AlarmEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Alarm/Bg/AlarmEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Alarm/Bg/AlarmEvents.js");
const AlarmNames_1 = __webpack_require__(/*! ../AlarmNames */ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/AlarmNames.js");
const SensitiveDataFilterTypes_1 = __webpack_require__(/*! ../SensitiveDataFilterTypes */ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/SensitiveDataFilterTypes.js");
const SensitiveDataFilterService_1 = __webpack_require__(/*! ../services/SensitiveDataFilterService */ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/services/SensitiveDataFilterService.js");
let UpdateRulesListEvent = class UpdateRulesListEvent {
    constructor(sensitiveDataFilterService) {
        this.sensitiveDataFilterService = sensitiveDataFilterService;
    }
    on() {
        return AlarmEvents_1.AlarmEvents.ALARM_ELAPSED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const alarm = event.data;
            if (alarm.name !== AlarmNames_1.AlarmNames.UPDATE_RULES_LIST) {
                return;
            }
            this.sensitiveDataFilterService.updateRules();
        });
    }
};
UpdateRulesListEvent = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(SensitiveDataFilterTypes_1.SensitiveDataFilterTypes.SDF_SERVICE)),
    __metadata("design:paramtypes", [SensitiveDataFilterService_1.SensitiveDataFilterService])
], UpdateRulesListEvent);
exports.UpdateRulesListEvent = UpdateRulesListEvent;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/services/SensitiveDataFilterService.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-sensitive-data-filter/dist/services/SensitiveDataFilterService.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SensitiveDataFilterService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/ */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const sensitive_data_filter_1 = __webpack_require__(/*! @urbandevs/sensitive-data-filter */ "./node_modules/@urbandevs/sensitive-data-filter/dist/index.js");
const SensitiveDataFilterTypes_1 = __webpack_require__(/*! ../SensitiveDataFilterTypes */ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/SensitiveDataFilterTypes.js");
const SensitiveDataFilterException_1 = __webpack_require__(/*! ../exceptions/SensitiveDataFilterException */ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/exceptions/SensitiveDataFilterException.js");
let SensitiveDataFilterService = class SensitiveDataFilterService {
    constructor(enabled, host, logging, logger) {
        this.enabled = enabled;
        this.host = host;
        this.logging = logging;
        this.logger = logger;
        this.initialized = false;
        if (typeof this.host !== 'string') {
            throw new SensitiveDataFilterException_1.SensitiveDataFilterException('Server host is undefined');
        }
        this.logging = !!this.logging;
        this.logger.log(`SensitiveDataFilter: ${this.enabled ? 'enabled' : 'disabled'}`);
    }
    init() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.enabled) {
                return;
            }
            try {
                this.instance = new sensitive_data_filter_1.default({
                    host: this.host,
                    logging: this.logging
                });
                yield this.instance.init();
                this.initialized = true;
            }
            catch (e) {
                this.logger.error(e);
            }
        });
    }
    enable() {
        return __awaiter(this, void 0, void 0, function* () {
            this.enabled = true;
            if (!this.initialized) {
                yield this.init();
            }
        });
    }
    disable() {
        return __awaiter(this, void 0, void 0, function* () {
            this.enabled = false;
        });
    }
    updateRules() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.initialized) {
                return;
            }
            return this.instance.updateRules();
        });
    }
    transformUrl(value) {
        if (!this.enabled || !this.initialized) {
            return value;
        }
        return this.instance.transformUrl(value);
    }
    transformTitle(domain, value) {
        if (!this.enabled || !this.initialized) {
            return value;
        }
        return this.instance.transformTitle(domain, value);
    }
};
SensitiveDataFilterService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(SensitiveDataFilterTypes_1.SensitiveDataFilterTypes.SDF_PARAM_ENABLED)),
    __param(1, inversify_1.inject(SensitiveDataFilterTypes_1.SensitiveDataFilterTypes.SDF_PARAM_HOST)),
    __param(2, inversify_1.inject(SensitiveDataFilterTypes_1.SensitiveDataFilterTypes.SDF_PARAM_LOGGING)),
    __param(3, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [Boolean, String, Boolean, Object])
], SensitiveDataFilterService);
exports.SensitiveDataFilterService = SensitiveDataFilterService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-static-proxies-api/dist/ProxySignature.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-static-proxies-api/dist/ProxySignature.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxySignature = void 0;
class ProxySignature {
    static buildKey(conf) {
        return `${conf.scheme}://${conf.host}:${conf.port}`;
    }
}
exports.ProxySignature = ProxySignature;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-static-proxies-api/dist/StaticProxiesApiModule.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-static-proxies-api/dist/StaticProxiesApiModule.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StaticProxiesApiModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const StaticProxiesApiTypes_1 = __webpack_require__(/*! ./StaticProxiesApiTypes */ "./node_modules/@urbandevs/mario-static-proxies-api/dist/StaticProxiesApiTypes.js");
const StaticProxiesService_1 = __webpack_require__(/*! ./services/StaticProxiesService */ "./node_modules/@urbandevs/mario-static-proxies-api/dist/services/StaticProxiesService.js");
class StaticProxiesApiModule extends src_1.MarioModule {
    static use(mario, options) {
        return mario.registerModule(StaticProxiesApiModule, options);
    }
    name() {
        return 'StaticProxiesApiModule';
    }
    register(options) {
        this.mario().container().bind(StaticProxiesApiTypes_1.StaticProxiesApiTypes.STATIC_PROXIES_API_URL).toConstantValue(options.apiUrl);
        this.mario().container().bind(StaticProxiesApiTypes_1.StaticProxiesApiTypes.STATIC_PROXIES_CLIENT_APP).toConstantValue(options.clientApp);
        this.mario().registerService(StaticProxiesApiTypes_1.StaticProxiesApiTypes.STATIC_PROXIES_SERVICE, StaticProxiesService_1.StaticProxiesService);
        return;
    }
}
exports.StaticProxiesApiModule = StaticProxiesApiModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-static-proxies-api/dist/StaticProxiesApiTypes.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-static-proxies-api/dist/StaticProxiesApiTypes.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StaticProxiesApiTypes = void 0;
const StaticProxiesApiTypes = {
    STATIC_PROXIES_API_URL: Symbol.for('STATIC_PROXIES_API_URL'),
    STATIC_PROXIES_CLIENT_APP: Symbol.for('STATIC_PROXIES_CLIENT_APP'),
    STATIC_PROXIES_SERVICE: Symbol.for('STATIC_PROXIES_SERVICE'),
};
exports.StaticProxiesApiTypes = StaticProxiesApiTypes;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-static-proxies-api/dist/services/StaticProxiesService.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-static-proxies-api/dist/services/StaticProxiesService.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StaticProxiesService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const StaticProxiesApiTypes_1 = __webpack_require__(/*! ../StaticProxiesApiTypes */ "./node_modules/@urbandevs/mario-static-proxies-api/dist/StaticProxiesApiTypes.js");
const ProxyLocation_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/models/ProxyLocation */ "./node_modules/@urbandevs/mario-proxy-location/dist/models/ProxyLocation.js");
const HttpClient_1 = __webpack_require__(/*! @urbandevs/mario-http-client/dist/services/HttpClient */ "./node_modules/@urbandevs/mario-http-client/dist/services/HttpClient.js");
const HttpClientModuleTypes_1 = __webpack_require__(/*! @urbandevs/mario-http-client/dist/HttpClientModuleTypes */ "./node_modules/@urbandevs/mario-http-client/dist/HttpClientModuleTypes.js");
const StaticProxiesServiceException_1 = __webpack_require__(/*! ./exceptions/StaticProxiesServiceException */ "./node_modules/@urbandevs/mario-static-proxies-api/dist/services/exceptions/StaticProxiesServiceException.js");
const ProxyLocationConfig_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/models/ProxyLocationConfig */ "./node_modules/@urbandevs/mario-proxy-location/dist/models/ProxyLocationConfig.js");
const LocationHelper_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/services/LocationHelper */ "./node_modules/@urbandevs/mario-proxy-location/dist/services/LocationHelper.js");
const ProxyLocationTypes_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/ProxyLocationTypes */ "./node_modules/@urbandevs/mario-proxy-location/dist/ProxyLocationTypes.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const ProxySignature_1 = __webpack_require__(/*! ../ProxySignature */ "./node_modules/@urbandevs/mario-static-proxies-api/dist/ProxySignature.js");
const LocationCode_1 = __webpack_require__(/*! @urbandevs/mario-proxy-location/dist/values/code/LocationCode */ "./node_modules/@urbandevs/mario-proxy-location/dist/values/code/LocationCode.js");
let StaticProxiesService = class StaticProxiesService {
    constructor(apiUrl, clientApp, httpClient, helper, logger) {
        this.apiUrl = apiUrl;
        this.clientApp = clientApp;
        this.httpClient = httpClient;
        this.helper = helper;
        this.logger = logger;
    }
    getAutoServer(withSecondary = true) {
        var _a, _b, _c, _d, _e, _f;
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.request('/entrypoints/autoserver');
            if (!response.server) {
                throw new StaticProxiesServiceException_1.StaticProxiesServiceException(`Root element "server" is missed`);
            }
            const configs = [];
            const signatureCollection = {};
            const signature = (_a = response === null || response === void 0 ? void 0 : response.server) === null || _a === void 0 ? void 0 : _a.signature;
            if ((_c = (_b = response.server) === null || _b === void 0 ? void 0 : _b.address) === null || _c === void 0 ? void 0 : _c.primary) {
                try {
                    const primary = response.server.address.primary;
                    const config = this.mapToProxyLocationConfig(response.server, primary, configs.length);
                    configs.push(config);
                    const proxyServer = this.mapToProxyLocationToProxyServer(config);
                    const key = ProxySignature_1.ProxySignature.buildKey(proxyServer);
                    signatureCollection[key] = signature;
                }
                catch (e) {
                    this.logger.error(e);
                }
            }
            if (withSecondary && ((_f = (_e = (_d = response === null || response === void 0 ? void 0 : response.server) === null || _d === void 0 ? void 0 : _d.address) === null || _e === void 0 ? void 0 : _e.secondary) === null || _f === void 0 ? void 0 : _f.length)) {
                response.server.address.secondary.forEach((proxy) => {
                    try {
                        const config = this.mapToProxyLocationConfig(response.server, proxy, configs.length);
                        configs.push(config);
                        const proxyServer = this.mapToProxyLocationToProxyServer(config);
                        const key = ProxySignature_1.ProxySignature.buildKey(proxyServer);
                        signatureCollection[key] = signature;
                    }
                    catch (e) {
                        this.logger.error(e);
                    }
                });
            }
            return ProxyLocation_1.ProxyLocation.create('AUTO_SERVER', response.server.country.code.iso2, 'RANDOM', 'AUTO_SERVER', configs, {
                signatureCollection
            });
        });
    }
    getCountries(withSecondary = true) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.request('/entrypoints/countries');
            if (!response.countries) {
                throw new StaticProxiesServiceException_1.StaticProxiesServiceException(`Root element "countries" is missed`);
            }
            const root = ProxyLocation_1.ProxyLocation.create('ROOT', 'ROOT', 'ROOT');
            response.countries.elements.forEach((v) => {
                var _a, _b;
                const configs = [];
                const signatureCollection = {};
                if ((_b = (_a = v.servers) === null || _a === void 0 ? void 0 : _a.elements) === null || _b === void 0 ? void 0 : _b.length) {
                    v.servers.elements.forEach((server) => {
                        var _a, _b, _c;
                        const signature = server.signature;
                        try {
                            if ((_a = server.address) === null || _a === void 0 ? void 0 : _a.primary) {
                                const primary = server.address.primary;
                                const config = this.mapToProxyLocationConfig(server, primary, server.premium ? 1 : 0);
                                configs.push(config);
                                const proxyServer = this.mapToProxyLocationToProxyServer(config);
                                const key = ProxySignature_1.ProxySignature.buildKey(proxyServer);
                                signatureCollection[key] = signature;
                            }
                        }
                        catch (e) {
                            this.logger.warn(`Could not get primary proxy for "${v.title}"`);
                            this.logger.error(e);
                        }
                        if (withSecondary && ((_c = (_b = server.address) === null || _b === void 0 ? void 0 : _b.secondary) === null || _c === void 0 ? void 0 : _c.length)) {
                            server.address.secondary.forEach((proxy) => {
                                try {
                                    const config = this.mapToProxyLocationConfig(server, proxy, server.premium ? 1 : 0);
                                    configs.push(config);
                                    const proxyServer = this.mapToProxyLocationToProxyServer(config);
                                    const key = ProxySignature_1.ProxySignature.buildKey(proxyServer);
                                    signatureCollection[key] = signature;
                                }
                                catch (e) {
                                    this.logger.warn(`Could not get secondary proxy for "${proxy.host}"`);
                                    this.logger.error(e);
                                }
                            });
                        }
                    });
                }
                try {
                    const locationName = this.helper.getCountryName(v.code.iso2, v.title);
                    const location = ProxyLocation_1.ProxyLocation.create(locationName, v.code.iso2, v.accessType, 'GENERIC', configs, {
                        signatureCollection
                    });
                    root.append(location);
                }
                catch (e) {
                    this.logger.error(e);
                }
            });
            return root;
        });
    }
    getStreamingServices(withSecondary = true) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.request('/entrypoints/streamingservers');
            if (!response.servers) {
                throw new StaticProxiesServiceException_1.StaticProxiesServiceException(`Root element "servers" is missed`);
            }
            const root = ProxyLocation_1.ProxyLocation.create('ROOT', 'ROOT', 'ROOT');
            if ((_a = response.servers.elements) === null || _a === void 0 ? void 0 : _a.length) {
                response.servers.elements.forEach((server) => {
                    var _a, _b, _c;
                    const configs = [];
                    const signatureCollection = {};
                    const signature = server.signature;
                    try {
                        if ((_a = server.address) === null || _a === void 0 ? void 0 : _a.primary) {
                            const primary = server.address.primary;
                            const config = this.mapToProxyLocationConfig(server, primary, configs.length);
                            configs.push(config);
                            const proxyServer = this.mapToProxyLocationToProxyServer(config);
                            const key = ProxySignature_1.ProxySignature.buildKey(proxyServer);
                            signatureCollection[key] = signature;
                        }
                    }
                    catch (e) {
                        this.logger.warn(`Could not get primary proxy for "${server.country.title}"`);
                        this.logger.error(e);
                    }
                    if (withSecondary && ((_c = (_b = server.address) === null || _b === void 0 ? void 0 : _b.secondary) === null || _c === void 0 ? void 0 : _c.length)) {
                        server.address.secondary.forEach((proxy) => {
                            try {
                                const config = this.mapToProxyLocationConfig(server, proxy, configs.length);
                                configs.push(config);
                                const proxyServer = this.mapToProxyLocationToProxyServer(config);
                                const key = ProxySignature_1.ProxySignature.buildKey(proxyServer);
                                signatureCollection[key] = signature;
                            }
                            catch (e) {
                                this.logger.warn(`Could not get secondary proxy for "${proxy.host}"`);
                                this.logger.error(e);
                            }
                        });
                    }
                    try {
                        const streamingServiceType = 'NETFLIX';
                        const code = ['STREAMING_SERVICE', streamingServiceType, server.country.code.iso2].join('_');
                        let location;
                        if (root.hasLocation(new LocationCode_1.LocationCode(code))) {
                            const pos = Array.from(root).findIndex((el) => el.code().value() === code);
                            const curr = ProxyLocation_1.ProxyLocation.decode(JSON.stringify(root.pos(pos)));
                            root.remove(pos);
                            location = ProxyLocation_1.ProxyLocation.create(curr.name().value(), curr.code().value(), curr.type(), curr.provider(), curr.configList().concat(configs), {
                                signatureCollection: Object.assign(curr.extraData().signatureCollection, signatureCollection),
                                streamingServiceType,
                            });
                        }
                        else {
                            const locationName = this.helper.getCountryName(server.country.code.iso2, server.name);
                            location = ProxyLocation_1.ProxyLocation.create(locationName, code, server.accessType, 'STREAMING_SERVICE', configs, {
                                signatureCollection,
                                streamingServiceType,
                            });
                        }
                        root.append(location);
                    }
                    catch (e) {
                        this.logger.error(e);
                    }
                });
            }
            return root;
        });
    }
    request(url) {
        const endpoint = `${this.apiUrl}${url}`;
        const headers = new Headers();
        headers.append('X-Client-App', this.clientApp);
        headers.append('Accept', 'application/json');
        headers.append('pragma', 'no-cache');
        headers.append('cache-control', 'no-cache');
        const options = { headers };
        return this.httpClient.get(endpoint, options);
    }
    mapToProxyLocationConfig(server, conf, redundancy) {
        return ProxyLocationConfig_1.ProxyLocationConfig.create(conf.host, conf.port, conf.port, 'http', redundancy, server.weight);
    }
    mapToProxyLocationToProxyServer(config) {
        return {
            host: config.host().value(),
            port: config.portRange().from(),
            scheme: config.scheme().value(),
        };
    }
};
StaticProxiesService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(StaticProxiesApiTypes_1.StaticProxiesApiTypes.STATIC_PROXIES_API_URL)),
    __param(1, inversify_1.inject(StaticProxiesApiTypes_1.StaticProxiesApiTypes.STATIC_PROXIES_CLIENT_APP)),
    __param(2, inversify_1.inject(HttpClientModuleTypes_1.HTTP_CLIENT_MODULE_TYPES.HTTP_CLIENT)),
    __param(3, inversify_1.inject(ProxyLocationTypes_1.ProxyLocationTypes.LOCATION_HELPER_SERVICE)),
    __param(4, inversify_1.inject(src_1.MARIO_TYPES.LOGGER_SERVICE)),
    __metadata("design:paramtypes", [String, String, HttpClient_1.HttpClient,
        LocationHelper_1.LocationHelper, Object])
], StaticProxiesService);
exports.StaticProxiesService = StaticProxiesService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-static-proxies-api/dist/services/exceptions/StaticProxiesServiceException.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-static-proxies-api/dist/services/exceptions/StaticProxiesServiceException.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StaticProxiesServiceException = void 0;
class StaticProxiesServiceException extends Error {
}
exports.StaticProxiesServiceException = StaticProxiesServiceException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckEvents.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckEvents.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UrlsSafeCheckEvents = void 0;
var UrlsSafeCheckEvents;
(function (UrlsSafeCheckEvents) {
    UrlsSafeCheckEvents["SAFE_STATUS_UPDATED"] = "URLS_SAFE_CHECK__STATUS_UPDATED";
    UrlsSafeCheckEvents["GET_ACTIVE_TAB_STATE"] = "URLS_SAFE_CHECK__GET_ACTIVE_TAB_STATE";
    UrlsSafeCheckEvents["MUTE_NOTIFICATION"] = "URLS_SAFE_CHECK__MUTE_NOTIFICATION";
    UrlsSafeCheckEvents["ENABLE_LIB"] = "URLS_ENABLE_LIB";
    UrlsSafeCheckEvents["DISABLE_LIB"] = "URLS_DISABLE_LIB";
})(UrlsSafeCheckEvents = exports.UrlsSafeCheckEvents || (exports.UrlsSafeCheckEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckModule.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckModule.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UrlsSafeCheckModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const TabActivated_1 = __webpack_require__(/*! ./listeners/internal/TabActivated */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/TabActivated.js");
const TabRemoved_1 = __webpack_require__(/*! ./listeners/internal/TabRemoved */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/TabRemoved.js");
const GetActiveTabStateEventListener_1 = __webpack_require__(/*! ./listeners/external/GetActiveTabStateEventListener */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/external/GetActiveTabStateEventListener.js");
const MuteNotificationEventListener_1 = __webpack_require__(/*! ./listeners/external/MuteNotificationEventListener */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/external/MuteNotificationEventListener.js");
const TabService_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabService.js");
const NavigationService_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Navigation/Bg/NavigationService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Navigation/Bg/NavigationService.js");
const SensitiveDataFilterModule_1 = __webpack_require__(/*! @urbandevs/mario-sensitive-data-filter/dist/SensitiveDataFilterModule */ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/SensitiveDataFilterModule.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! ./UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const StateService_1 = __webpack_require__(/*! ./services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js");
const CheckSafeService_1 = __webpack_require__(/*! ./services/CheckSafeService/CheckSafeService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/CheckSafeService/CheckSafeService.js");
const RequestService_1 = __webpack_require__(/*! ./services/RequestService/RequestService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/RequestService/RequestService.js");
const StateDataService_1 = __webpack_require__(/*! ./services/StateDataService/StateDataService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateDataService/StateDataService.js");
const FgNavModule_1 = __webpack_require__(/*! ./modules/foreground-navigation/FgNavModule */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavModule.js");
const BgNavModule_1 = __webpack_require__(/*! ./modules/background-navigation/BgNavModule */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavModule.js");
const FgNavStarted_1 = __webpack_require__(/*! ./listeners/internal/FgNavStarted */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/FgNavStarted.js");
const FgNavCommited_1 = __webpack_require__(/*! ./listeners/internal/FgNavCommited */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/FgNavCommited.js");
const BgNavStarted_1 = __webpack_require__(/*! ./listeners/internal/BgNavStarted */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/BgNavStarted.js");
const BgNavCommited_1 = __webpack_require__(/*! ./listeners/internal/BgNavCommited */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/BgNavCommited.js");
const TabStateModule_1 = __webpack_require__(/*! ./modules/tabstate-module/TabStateModule */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateModule.js");
const EnableLib_1 = __webpack_require__(/*! ./listeners/internal/EnableLib */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/EnableLib.js");
const DisableLib_1 = __webpack_require__(/*! ./listeners/internal/DisableLib */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/DisableLib.js");
const LibStateService_1 = __webpack_require__(/*! ./services/LibStateService/LibStateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/LibStateService/LibStateService.js");
const UscLogger_1 = __webpack_require__(/*! ./services/Logger/UscLogger */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/Logger/UscLogger.js");
class UrlsSafeCheckModule extends src_1.MarioModule {
    name() {
        return 'UrlsSafeCheckModule';
    }
    static use(mario, options) {
        return mario.registerModule(UrlsSafeCheckModule, options);
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this.mario().container().bind(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_ENDPOINT_DOMAIN).toConstantValue(options.apiUrl);
            this.mario().container().bind(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_PANALYTICS_ID).toConstantValue(options.panalyticsId);
            this.mario().container().bind(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_PINSTANCE_ID).toConstantValue(options.pinstanceId);
            this.mario().container().bind(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_PARTNER_ID).toConstantValue(options.partnerId);
            this.mario().container().bind(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_DISTRIBUTOR_ID).toConstantValue(options.distributorId);
            this.mario().container().bind(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_ENABLED).toConstantValue(!!options.enabled);
            this.mario().container().bind(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_MODE).toConstantValue(options.mode);
            this.mario().container().bind(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_TRACK_LOADING_STATE).toConstantValue(options.trackLoadingState);
            this.mario().container().bind(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_COMPRESS_REQUEST).toConstantValue(!!options.compressRequest);
            this.mario().container().bind(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_LOGGING).toConstantValue(!!options.logging);
            this.mario().registerService(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_LOGGER, UscLogger_1.UscLogger);
            this.mario().registerService(src_1.MARIO_TYPES.TAB_SERVICE, TabService_1.TabService);
            this.mario().registerService(src_1.MARIO_TYPES.NAVIGATION_SERVICE, NavigationService_1.NavigationService);
            this.mario().registerService(src_1.MARIO_TYPES.STORAGE_SERVICE, src_1.StorageService);
            this.mario().registerService(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_SERVICE, StateService_1.StateService);
            this.mario().registerService(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_DATA_SERVICE, StateDataService_1.StateDataService);
            this.mario().registerService(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_CHECK_SERVICE, CheckSafeService_1.CheckSafeService);
            this.mario().registerService(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_REQUEST_SERVICE, RequestService_1.RequestService);
            const tabStateOptions = {
                logging: !!options.logging,
            };
            yield this.mario().registerModule(TabStateModule_1.TabStateModule, tabStateOptions);
            const fgNavOptions = {
                distributorId: options.distributorId,
                enabled: !!options.enabled,
                logging: !!options.logging,
                panalyticsId: options.panalyticsId,
                partnerId: options.partnerId,
                pinstanceId: options.pinstanceId,
            };
            yield this.mario().registerModule(FgNavModule_1.FgNavModule, fgNavOptions);
            const bgNavOptions = {
                distributorId: options.distributorId,
                enabled: !!options.enabled,
                logging: !!options.logging,
                panalyticsId: options.panalyticsId,
                partnerId: options.partnerId,
                pinstanceId: options.pinstanceId,
            };
            yield this.mario().registerModule(BgNavModule_1.BgNavModule, bgNavOptions);
            const sensitiveDataFilterOptions = {
                enabled: !!options.sensitiveDataCheckEnabled,
                host: options.sensitiveDataApiUrl,
                logging: false,
            };
            yield this.mario().registerModule(SensitiveDataFilterModule_1.SensitiveDataFilterModule, sensitiveDataFilterOptions);
            this.mario().registerService(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_LIB_STATE_SERVICE, LibStateService_1.LibStateService);
            this.mario().getService(src_1.MARIO_TYPES.TAB_SERVICE).listenOnActivated();
            this.mario().externalDispatcher().on(GetActiveTabStateEventListener_1.GetActiveTabStateEventListener);
            this.mario().externalDispatcher().on(MuteNotificationEventListener_1.MuteNotificationEventListener);
            this.mario().internalDispatcher().on(TabActivated_1.TabActivated);
            this.mario().internalDispatcher().on(TabRemoved_1.TabRemoved);
            this.mario().internalDispatcher().on(FgNavStarted_1.FgNavStarted);
            this.mario().internalDispatcher().on(FgNavCommited_1.FgNavCommited);
            this.mario().internalDispatcher().on(BgNavStarted_1.BgNavStarted);
            this.mario().internalDispatcher().on(BgNavCommited_1.BgNavCommited);
            this.mario().internalDispatcher().on(EnableLib_1.EnableLib);
            this.mario().internalDispatcher().on(DisableLib_1.DisableLib);
        });
    }
}
exports.UrlsSafeCheckModule = UrlsSafeCheckModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MODE = exports.STATUS = exports.UrlsSafeCheckTypes = void 0;
exports.UrlsSafeCheckTypes = {
    USC_STATE_SERVICE: Symbol.for('USC_STATE_SERVICE'),
    USC_CHECK_SERVICE: Symbol.for('USC_CHECK_SERVICE'),
    USC_REQUEST_SERVICE: Symbol.for('USC_REQUEST_SERVICE'),
    USC_STATE_DATA_SERVICE: Symbol.for('USC_STATE_DATA_SERVICE'),
    USC_LIB_STATE_SERVICE: Symbol.for('USC_LIB_STATE_SERVICE'),
    USC_ENABLED: Symbol.for('USC_ENABLED'),
    USC_MODE: Symbol.for('USC_MODE'),
    USC_ENDPOINT_DOMAIN: Symbol.for('USC_ENDPOINT_DOMAIN'),
    USC_PANALYTICS_ID: Symbol.for('USC_PANALYTICS_ID'),
    USC_PINSTANCE_ID: Symbol.for('USC_PINSTANCE_ID'),
    USC_PARTNER_ID: Symbol.for('USC_PARTNER_ID'),
    USC_DISTRIBUTOR_ID: Symbol.for('USC_DISTRIBUTOR_ID'),
    USC_TRACK_LOADING_STATE: Symbol.for('USC_TRACK_LOADING_STATE'),
    USC_COMPRESS_REQUEST: Symbol.for('USC_COMPRESS_REQUEST'),
    USC_LOGGING: Symbol.for('USC_LOGGING'),
    USC_LOGGER: Symbol.for('USC_LOGGER'),
};
var STATUS;
(function (STATUS) {
    STATUS["NONE"] = "NONE";
    STATUS["SAFE"] = "SAFE";
    STATUS["UNSAFE"] = "UNSAFE";
    STATUS["UNKNOWN"] = "UNKNOWN";
})(STATUS = exports.STATUS || (exports.STATUS = {}));
var MODE;
(function (MODE) {
    MODE["NO_NAVIGATION"] = "NO_NAVIGATION";
    MODE["FOREGROUND_NAVIGATION"] = "FOREGROUND_NAVIGATION";
    MODE["FULL_NAVIGATION"] = "FULL_NAVIGATION";
})(MODE = exports.MODE || (exports.MODE = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/config/blankPage.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/config/blankPage.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.blankPage = void 0;
exports.blankPage = {
    'CHROME_BROWSER': 'chrome://newtab/',
    'FIREFOX_BROWSER': 'about:blank',
    'EDGE_BROWSER': 'edge://newtab/'
};


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/config/whiteListProtocols.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/config/whiteListProtocols.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.whiteListProtocols = void 0;
exports.whiteListProtocols = [
    'chrome:',
    'chrome-search:',
    'chrome-devtools',
    'about:',
    'edge:'
];


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/exceptions/CheckSafeException.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/exceptions/CheckSafeException.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckSafeException = void 0;
class CheckSafeException extends Error {
}
exports.CheckSafeException = CheckSafeException;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/libs/lz-string.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/libs/lz-string.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const LZString = (function () {
    var f = String.fromCharCode;
    var keyStrBase64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var keyStrUriSafe = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$";
    var baseReverseDic = {};
    function getBaseValue(alphabet, character) {
        if (!baseReverseDic[alphabet]) {
            baseReverseDic[alphabet] = {};
            for (var i = 0; i < alphabet.length; i++) {
                baseReverseDic[alphabet][alphabet.charAt(i)] = i;
            }
        }
        return baseReverseDic[alphabet][character];
    }
    var LZString = {
        compressToBase64: function (input) {
            if (input == null)
                return "";
            var res = LZString._compress(input, 6, function (a) { return keyStrBase64.charAt(a); });
            switch (res.length % 4) {
                default:
                case 0: return res;
                case 1: return res + "===";
                case 2: return res + "==";
                case 3: return res + "=";
            }
        },
        decompressFromBase64: function (input) {
            if (input == null)
                return "";
            if (input == "")
                return null;
            return LZString._decompress(input.length, 32, function (index) { return getBaseValue(keyStrBase64, input.charAt(index)); });
        },
        compressToUTF16: function (input) {
            if (input == null)
                return "";
            return LZString._compress(input, 15, function (a) { return f(a + 32); }) + " ";
        },
        decompressFromUTF16: function (compressed) {
            if (compressed == null)
                return "";
            if (compressed == "")
                return null;
            return LZString._decompress(compressed.length, 16384, function (index) { return compressed.charCodeAt(index) - 32; });
        },
        compressToUint8Array: function (uncompressed) {
            var compressed = LZString.compress(uncompressed);
            var buf = new Uint8Array(compressed.length * 2);
            for (var i = 0, TotalLen = compressed.length; i < TotalLen; i++) {
                var current_value = compressed.charCodeAt(i);
                buf[i * 2] = current_value >>> 8;
                buf[i * 2 + 1] = current_value % 256;
            }
            return buf;
        },
        decompressFromUint8Array: function (compressed) {
            if (compressed === null || compressed === undefined) {
                return LZString.decompress(compressed);
            }
            else {
                var buf = new Array(compressed.length / 2);
                for (var i = 0, TotalLen = buf.length; i < TotalLen; i++) {
                    buf[i] = compressed[i * 2] * 256 + compressed[i * 2 + 1];
                }
                var result = [];
                buf.forEach(function (c) {
                    result.push(f(c));
                });
                return LZString.decompress(result.join(''));
            }
        },
        compressToEncodedURIComponent: function (input) {
            if (input == null)
                return "";
            return LZString._compress(input, 6, function (a) { return keyStrUriSafe.charAt(a); });
        },
        decompressFromEncodedURIComponent: function (input) {
            if (input == null)
                return "";
            if (input == "")
                return null;
            input = input.replace(/ /g, "+");
            return LZString._decompress(input.length, 32, function (index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });
        },
        compress: function (uncompressed) {
            return LZString._compress(uncompressed, 16, function (a) { return f(a); });
        },
        _compress: function (uncompressed, bitsPerChar, getCharFromInt) {
            if (uncompressed == null)
                return "";
            var i, value, context_dictionary = {}, context_dictionaryToCreate = {}, context_c = "", context_wc = "", context_w = "", context_enlargeIn = 2, context_dictSize = 3, context_numBits = 2, context_data = [], context_data_val = 0, context_data_position = 0, ii;
            for (ii = 0; ii < uncompressed.length; ii += 1) {
                context_c = uncompressed.charAt(ii);
                if (!Object.prototype.hasOwnProperty.call(context_dictionary, context_c)) {
                    context_dictionary[context_c] = context_dictSize++;
                    context_dictionaryToCreate[context_c] = true;
                }
                context_wc = context_w + context_c;
                if (Object.prototype.hasOwnProperty.call(context_dictionary, context_wc)) {
                    context_w = context_wc;
                }
                else {
                    if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {
                        if (context_w.charCodeAt(0) < 256) {
                            for (i = 0; i < context_numBits; i++) {
                                context_data_val = (context_data_val << 1);
                                if (context_data_position == bitsPerChar - 1) {
                                    context_data_position = 0;
                                    context_data.push(getCharFromInt(context_data_val));
                                    context_data_val = 0;
                                }
                                else {
                                    context_data_position++;
                                }
                            }
                            value = context_w.charCodeAt(0);
                            for (i = 0; i < 8; i++) {
                                context_data_val = (context_data_val << 1) | (value & 1);
                                if (context_data_position == bitsPerChar - 1) {
                                    context_data_position = 0;
                                    context_data.push(getCharFromInt(context_data_val));
                                    context_data_val = 0;
                                }
                                else {
                                    context_data_position++;
                                }
                                value = value >> 1;
                            }
                        }
                        else {
                            value = 1;
                            for (i = 0; i < context_numBits; i++) {
                                context_data_val = (context_data_val << 1) | value;
                                if (context_data_position == bitsPerChar - 1) {
                                    context_data_position = 0;
                                    context_data.push(getCharFromInt(context_data_val));
                                    context_data_val = 0;
                                }
                                else {
                                    context_data_position++;
                                }
                                value = 0;
                            }
                            value = context_w.charCodeAt(0);
                            for (i = 0; i < 16; i++) {
                                context_data_val = (context_data_val << 1) | (value & 1);
                                if (context_data_position == bitsPerChar - 1) {
                                    context_data_position = 0;
                                    context_data.push(getCharFromInt(context_data_val));
                                    context_data_val = 0;
                                }
                                else {
                                    context_data_position++;
                                }
                                value = value >> 1;
                            }
                        }
                        context_enlargeIn--;
                        if (context_enlargeIn == 0) {
                            context_enlargeIn = Math.pow(2, context_numBits);
                            context_numBits++;
                        }
                        delete context_dictionaryToCreate[context_w];
                    }
                    else {
                        value = context_dictionary[context_w];
                        for (i = 0; i < context_numBits; i++) {
                            context_data_val = (context_data_val << 1) | (value & 1);
                            if (context_data_position == bitsPerChar - 1) {
                                context_data_position = 0;
                                context_data.push(getCharFromInt(context_data_val));
                                context_data_val = 0;
                            }
                            else {
                                context_data_position++;
                            }
                            value = value >> 1;
                        }
                    }
                    context_enlargeIn--;
                    if (context_enlargeIn == 0) {
                        context_enlargeIn = Math.pow(2, context_numBits);
                        context_numBits++;
                    }
                    context_dictionary[context_wc] = context_dictSize++;
                    context_w = String(context_c);
                }
            }
            if (context_w !== "") {
                if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {
                    if (context_w.charCodeAt(0) < 256) {
                        for (i = 0; i < context_numBits; i++) {
                            context_data_val = (context_data_val << 1);
                            if (context_data_position == bitsPerChar - 1) {
                                context_data_position = 0;
                                context_data.push(getCharFromInt(context_data_val));
                                context_data_val = 0;
                            }
                            else {
                                context_data_position++;
                            }
                        }
                        value = context_w.charCodeAt(0);
                        for (i = 0; i < 8; i++) {
                            context_data_val = (context_data_val << 1) | (value & 1);
                            if (context_data_position == bitsPerChar - 1) {
                                context_data_position = 0;
                                context_data.push(getCharFromInt(context_data_val));
                                context_data_val = 0;
                            }
                            else {
                                context_data_position++;
                            }
                            value = value >> 1;
                        }
                    }
                    else {
                        value = 1;
                        for (i = 0; i < context_numBits; i++) {
                            context_data_val = (context_data_val << 1) | value;
                            if (context_data_position == bitsPerChar - 1) {
                                context_data_position = 0;
                                context_data.push(getCharFromInt(context_data_val));
                                context_data_val = 0;
                            }
                            else {
                                context_data_position++;
                            }
                            value = 0;
                        }
                        value = context_w.charCodeAt(0);
                        for (i = 0; i < 16; i++) {
                            context_data_val = (context_data_val << 1) | (value & 1);
                            if (context_data_position == bitsPerChar - 1) {
                                context_data_position = 0;
                                context_data.push(getCharFromInt(context_data_val));
                                context_data_val = 0;
                            }
                            else {
                                context_data_position++;
                            }
                            value = value >> 1;
                        }
                    }
                    context_enlargeIn--;
                    if (context_enlargeIn == 0) {
                        context_enlargeIn = Math.pow(2, context_numBits);
                        context_numBits++;
                    }
                    delete context_dictionaryToCreate[context_w];
                }
                else {
                    value = context_dictionary[context_w];
                    for (i = 0; i < context_numBits; i++) {
                        context_data_val = (context_data_val << 1) | (value & 1);
                        if (context_data_position == bitsPerChar - 1) {
                            context_data_position = 0;
                            context_data.push(getCharFromInt(context_data_val));
                            context_data_val = 0;
                        }
                        else {
                            context_data_position++;
                        }
                        value = value >> 1;
                    }
                }
                context_enlargeIn--;
                if (context_enlargeIn == 0) {
                    context_enlargeIn = Math.pow(2, context_numBits);
                    context_numBits++;
                }
            }
            value = 2;
            for (i = 0; i < context_numBits; i++) {
                context_data_val = (context_data_val << 1) | (value & 1);
                if (context_data_position == bitsPerChar - 1) {
                    context_data_position = 0;
                    context_data.push(getCharFromInt(context_data_val));
                    context_data_val = 0;
                }
                else {
                    context_data_position++;
                }
                value = value >> 1;
            }
            while (true) {
                context_data_val = (context_data_val << 1);
                if (context_data_position == bitsPerChar - 1) {
                    context_data.push(getCharFromInt(context_data_val));
                    break;
                }
                else
                    context_data_position++;
            }
            return context_data.join('');
        },
        decompress: function (compressed) {
            if (compressed == null)
                return "";
            if (compressed == "")
                return null;
            return LZString._decompress(compressed.length, 32768, function (index) { return compressed.charCodeAt(index); });
        },
        _decompress: function (length, resetValue, getNextValue) {
            var dictionary = [], next, enlargeIn = 4, dictSize = 4, numBits = 3, entry = "", result = [], i, w, bits, resb, maxpower, power, c, data = { val: getNextValue(0), position: resetValue, index: 1 };
            for (i = 0; i < 3; i += 1) {
                dictionary[i] = i;
            }
            bits = 0;
            maxpower = Math.pow(2, 2);
            power = 1;
            while (power != maxpower) {
                resb = data.val & data.position;
                data.position >>= 1;
                if (data.position == 0) {
                    data.position = resetValue;
                    data.val = getNextValue(data.index++);
                }
                bits |= (resb > 0 ? 1 : 0) * power;
                power <<= 1;
            }
            switch (next = bits) {
                case 0:
                    bits = 0;
                    maxpower = Math.pow(2, 8);
                    power = 1;
                    while (power != maxpower) {
                        resb = data.val & data.position;
                        data.position >>= 1;
                        if (data.position == 0) {
                            data.position = resetValue;
                            data.val = getNextValue(data.index++);
                        }
                        bits |= (resb > 0 ? 1 : 0) * power;
                        power <<= 1;
                    }
                    c = f(bits);
                    break;
                case 1:
                    bits = 0;
                    maxpower = Math.pow(2, 16);
                    power = 1;
                    while (power != maxpower) {
                        resb = data.val & data.position;
                        data.position >>= 1;
                        if (data.position == 0) {
                            data.position = resetValue;
                            data.val = getNextValue(data.index++);
                        }
                        bits |= (resb > 0 ? 1 : 0) * power;
                        power <<= 1;
                    }
                    c = f(bits);
                    break;
                case 2:
                    return "";
            }
            dictionary[3] = c;
            w = c;
            result.push(c);
            while (true) {
                if (data.index > length) {
                    return "";
                }
                bits = 0;
                maxpower = Math.pow(2, numBits);
                power = 1;
                while (power != maxpower) {
                    resb = data.val & data.position;
                    data.position >>= 1;
                    if (data.position == 0) {
                        data.position = resetValue;
                        data.val = getNextValue(data.index++);
                    }
                    bits |= (resb > 0 ? 1 : 0) * power;
                    power <<= 1;
                }
                switch (c = bits) {
                    case 0:
                        bits = 0;
                        maxpower = Math.pow(2, 8);
                        power = 1;
                        while (power != maxpower) {
                            resb = data.val & data.position;
                            data.position >>= 1;
                            if (data.position == 0) {
                                data.position = resetValue;
                                data.val = getNextValue(data.index++);
                            }
                            bits |= (resb > 0 ? 1 : 0) * power;
                            power <<= 1;
                        }
                        dictionary[dictSize++] = f(bits);
                        c = dictSize - 1;
                        enlargeIn--;
                        break;
                    case 1:
                        bits = 0;
                        maxpower = Math.pow(2, 16);
                        power = 1;
                        while (power != maxpower) {
                            resb = data.val & data.position;
                            data.position >>= 1;
                            if (data.position == 0) {
                                data.position = resetValue;
                                data.val = getNextValue(data.index++);
                            }
                            bits |= (resb > 0 ? 1 : 0) * power;
                            power <<= 1;
                        }
                        dictionary[dictSize++] = f(bits);
                        c = dictSize - 1;
                        enlargeIn--;
                        break;
                    case 2:
                        return result.join('');
                }
                if (enlargeIn == 0) {
                    enlargeIn = Math.pow(2, numBits);
                    numBits++;
                }
                if (dictionary[c]) {
                    entry = dictionary[c];
                }
                else {
                    if (c === dictSize) {
                        entry = w + w.charAt(0);
                    }
                    else {
                        return null;
                    }
                }
                result.push(entry);
                dictionary[dictSize++] = w + entry.charAt(0);
                enlargeIn--;
                w = entry;
                if (enlargeIn == 0) {
                    enlargeIn = Math.pow(2, numBits);
                    numBits++;
                }
            }
        }
    };
    return LZString;
})();
exports.default = LZString;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/libs/utils.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/libs/utils.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateUIID = exports.isSameDomain = exports.getDomain = exports.getBrowserBlankPageUrl = exports.isBlankPage = exports.isWhiteListUrl = exports.notConcurrent = exports.valueToPromise = void 0;
const whiteListProtocols_1 = __webpack_require__(/*! ../config/whiteListProtocols */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/config/whiteListProtocols.js");
const blankPage_1 = __webpack_require__(/*! ../config/blankPage */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/config/blankPage.js");
function valueToPromise(value) {
    return new Promise(resolve => {
        resolve(value);
    });
}
exports.valueToPromise = valueToPromise;
function notConcurrent(proc) {
    let inFlight = false;
    return () => {
        if (!inFlight) {
            inFlight = (() => __awaiter(this, void 0, void 0, function* () {
                try {
                    return yield proc();
                }
                finally {
                    inFlight = false;
                }
            }))();
        }
        return inFlight;
    };
}
exports.notConcurrent = notConcurrent;
;
function isWhiteListUrl(url) {
    if (url === '') {
        return true;
    }
    const { protocol } = new URL(url);
    return whiteListProtocols_1.whiteListProtocols.includes(protocol);
}
exports.isWhiteListUrl = isWhiteListUrl;
function isBlankPage(url) {
    return url === getBrowserBlankPageUrl();
}
exports.isBlankPage = isBlankPage;
function getBrowserBlankPageUrl() {
    const defaultUrl = 'about:blank';
    return blankPage_1.blankPage["CHROME_BROWSER"] || defaultUrl;
}
exports.getBrowserBlankPageUrl = getBrowserBlankPageUrl;
function getDomain(url) {
    try {
        const { host } = new URL(url);
        return host;
    }
    catch (err) {
        return url;
    }
}
exports.getDomain = getDomain;
function isSameDomain(url1, url2) {
    if (!url1 || !url2) {
        return;
    }
    return getDomain(url1) === getDomain(url2);
}
exports.isSameDomain = isSameDomain;
function generateUIID() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);
        return v.toString(16);
    });
}
exports.generateUIID = generateUIID;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/external/GetActiveTabStateEventListener.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/external/GetActiveTabStateEventListener.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetActiveTabStateEventListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const StateService_1 = __webpack_require__(/*! ../../services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js");
const UrlsSafeCheckEvents_1 = __webpack_require__(/*! ../../UrlsSafeCheckEvents */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckEvents.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! ../../UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
let GetActiveTabStateEventListener = class GetActiveTabStateEventListener {
    constructor(stateService) {
        this.stateService = stateService;
    }
    on() {
        return UrlsSafeCheckEvents_1.UrlsSafeCheckEvents.GET_ACTIVE_TAB_STATE;
    }
    handle(event, sender, sendResponse) {
        return __awaiter(this, void 0, void 0, function* () {
            const activeTab = yield this.stateService.getActiveTabState();
            sendResponse(activeTab);
        });
    }
};
GetActiveTabStateEventListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_SERVICE)),
    __metadata("design:paramtypes", [StateService_1.StateService])
], GetActiveTabStateEventListener);
exports.GetActiveTabStateEventListener = GetActiveTabStateEventListener;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/external/MuteNotificationEventListener.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/external/MuteNotificationEventListener.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MuteNotificationEventListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const StateService_1 = __webpack_require__(/*! ../../services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js");
const UrlsSafeCheckEvents_1 = __webpack_require__(/*! ../../UrlsSafeCheckEvents */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckEvents.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! ../../UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
let MuteNotificationEventListener = class MuteNotificationEventListener {
    constructor(stateService) {
        this.stateService = stateService;
    }
    on() {
        return UrlsSafeCheckEvents_1.UrlsSafeCheckEvents.MUTE_NOTIFICATION;
    }
    handle(event, sender, sendResponse) {
        return __awaiter(this, void 0, void 0, function* () {
            if (sender.tab) {
                const { persist } = event.data;
                const tab = this.stateService.muteTabNofitication(sender.tab.id, persist);
            }
            sendResponse(undefined);
        });
    }
};
MuteNotificationEventListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_SERVICE)),
    __metadata("design:paramtypes", [StateService_1.StateService])
], MuteNotificationEventListener);
exports.MuteNotificationEventListener = MuteNotificationEventListener;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/BgNavCommited.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/BgNavCommited.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BgNavCommited = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! ../../UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const StateService_1 = __webpack_require__(/*! ../../services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js");
const BgNavEvents_1 = __webpack_require__(/*! ../../modules/background-navigation/BgNavEvents */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavEvents.js");
let BgNavCommited = class BgNavCommited {
    constructor(stateService) {
        this.stateService = stateService;
    }
    on() {
        return BgNavEvents_1.BgNavEvents.NAVIGATION_COMMITED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.stateService.onBgNavCommited(event.data);
        });
    }
};
BgNavCommited = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_SERVICE)),
    __metadata("design:paramtypes", [StateService_1.StateService])
], BgNavCommited);
exports.BgNavCommited = BgNavCommited;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/BgNavStarted.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/BgNavStarted.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BgNavStarted = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! ../../UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const StateService_1 = __webpack_require__(/*! ../../services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js");
const BgNavEvents_1 = __webpack_require__(/*! ../../modules/background-navigation/BgNavEvents */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavEvents.js");
let BgNavStarted = class BgNavStarted {
    constructor(stateService) {
        this.stateService = stateService;
    }
    on() {
        return BgNavEvents_1.BgNavEvents.NAVIGATION_STARTED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.stateService.onBgNavStarted(event.data);
        });
    }
};
BgNavStarted = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_SERVICE)),
    __metadata("design:paramtypes", [StateService_1.StateService])
], BgNavStarted);
exports.BgNavStarted = BgNavStarted;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/DisableLib.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/DisableLib.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DisableLib = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const UrlsSafeCheckEvents_1 = __webpack_require__(/*! ../../UrlsSafeCheckEvents */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckEvents.js");
const BgNavTypes_1 = __webpack_require__(/*! ../../modules/background-navigation/BgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavTypes.js");
const StateService_1 = __webpack_require__(/*! ../../modules/background-navigation/services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/StateService/StateService.js");
const StateService_2 = __webpack_require__(/*! ../../services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! ../../UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
let DisableLib = class DisableLib {
    constructor(bgStateService, usfStateService) {
        this.bgStateService = bgStateService;
        this.usfStateService = usfStateService;
    }
    on() {
        return UrlsSafeCheckEvents_1.UrlsSafeCheckEvents.DISABLE_LIB;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            this.bgStateService.disable();
            yield this.usfStateService.disable();
            return;
        });
    }
};
DisableLib = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(BgNavTypes_1.BgNavTypes.STATE_SERVICE)),
    __param(1, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_SERVICE)),
    __metadata("design:paramtypes", [StateService_1.StateService,
        StateService_2.StateService])
], DisableLib);
exports.DisableLib = DisableLib;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/EnableLib.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/EnableLib.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnableLib = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const UrlsSafeCheckEvents_1 = __webpack_require__(/*! ../../UrlsSafeCheckEvents */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckEvents.js");
const BgNavTypes_1 = __webpack_require__(/*! ../../modules/background-navigation/BgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavTypes.js");
const StateService_1 = __webpack_require__(/*! ../../modules/background-navigation/services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/StateService/StateService.js");
const StateService_2 = __webpack_require__(/*! ../../services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! ../../UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
let EnableLib = class EnableLib {
    constructor(bgStateService, uscStateService, mode) {
        this.bgStateService = bgStateService;
        this.uscStateService = uscStateService;
        this.mode = mode;
    }
    on() {
        return UrlsSafeCheckEvents_1.UrlsSafeCheckEvents.ENABLE_LIB;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.uscStateService.enable();
            if (this.mode === UrlsSafeCheckTypes_1.MODE.FULL_NAVIGATION) {
                this.bgStateService.enable();
            }
            return;
        });
    }
};
EnableLib = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(BgNavTypes_1.BgNavTypes.STATE_SERVICE)),
    __param(1, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_SERVICE)),
    __param(2, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_MODE)),
    __metadata("design:paramtypes", [StateService_1.StateService,
        StateService_2.StateService, String])
], EnableLib);
exports.EnableLib = EnableLib;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/FgNavCommited.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/FgNavCommited.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FgNavCommited = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! ../../UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const StateService_1 = __webpack_require__(/*! ../../services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js");
const FgNavEvents_1 = __webpack_require__(/*! ../../modules/foreground-navigation/FgNavEvents */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavEvents.js");
let FgNavCommited = class FgNavCommited {
    constructor(stateService) {
        this.stateService = stateService;
    }
    on() {
        return FgNavEvents_1.FgNavEvents.NAVIGATION_COMMITED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.stateService.onFgNavCommited(event.data);
        });
    }
};
FgNavCommited = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_SERVICE)),
    __metadata("design:paramtypes", [StateService_1.StateService])
], FgNavCommited);
exports.FgNavCommited = FgNavCommited;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/FgNavStarted.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/FgNavStarted.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FgNavStarted = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! ../../UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const StateService_1 = __webpack_require__(/*! ../../services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js");
const FgNavEvents_1 = __webpack_require__(/*! ../../modules/foreground-navigation/FgNavEvents */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavEvents.js");
let FgNavStarted = class FgNavStarted {
    constructor(stateService) {
        this.stateService = stateService;
    }
    on() {
        return FgNavEvents_1.FgNavEvents.NAVIGATION_STARTED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.stateService.onFgNavStarted(event.data);
        });
    }
};
FgNavStarted = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_SERVICE)),
    __metadata("design:paramtypes", [StateService_1.StateService])
], FgNavStarted);
exports.FgNavStarted = FgNavStarted;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/TabActivated.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/TabActivated.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TabActivated = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const TabServiceEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabServiceEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabServiceEvents.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! ../../UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const StateService_1 = __webpack_require__(/*! ../../services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js");
let TabActivated = class TabActivated {
    constructor(stateService) {
        this.stateService = stateService;
    }
    on() {
        return TabServiceEvents_1.TabServiceEvents.ON_TAB_ACTIVATED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const tabState = yield this.stateService.getActiveTabState();
            if (tabState) {
                yield this.stateService.updateTabSafetyStatus(tabState);
            }
        });
    }
};
TabActivated = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_SERVICE)),
    __metadata("design:paramtypes", [StateService_1.StateService])
], TabActivated);
exports.TabActivated = TabActivated;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/TabRemoved.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/listeners/internal/TabRemoved.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TabRemoved = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const TabServiceEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabServiceEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabServiceEvents.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! ../../UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const StateService_1 = __webpack_require__(/*! ../../services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js");
let TabRemoved = class TabRemoved {
    constructor(stateService) {
        this.stateService = stateService;
    }
    on() {
        return TabServiceEvents_1.TabServiceEvents.ON_TAB_REMOVED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const tabId = event.data.tabId;
            this.stateService.removeTabState(tabId);
        });
    }
};
TabRemoved = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_SERVICE)),
    __metadata("design:paramtypes", [StateService_1.StateService])
], TabRemoved);
exports.TabRemoved = TabRemoved;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/models/TabState.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/models/TabState.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.TabState = void 0;
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! ../UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const utils_1 = __webpack_require__(/*! ../libs/utils */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/libs/utils.js");
class TabState {
    constructor() {
        this.url = '';
        this.lastUrl = '';
        this.checked = false;
        this.notificationMuted = false;
        this.status = UrlsSafeCheckTypes_1.STATUS.NONE;
        this._loading = false;
        this._checking = false;
        this.fgNavData = {};
        this.bgNavData = [];
    }
    setId(id) {
        this.id = id;
    }
    setUrl(url) {
        this.url = url;
        this.domain = utils_1.getDomain(url);
    }
    setLastUrl(url) {
        this.lastUrl = url;
    }
    setNotificationMute(state) {
        this.notificationMuted = state;
    }
    setLoadingState(state) {
        this._loading = state;
    }
    setCheckingState(state) {
        this._checking = state;
    }
    setCheckedState(state) {
        this.checked = state;
    }
    setStatus(status) {
        this.status = status;
    }
    setFgNavData(data) {
        this.fgNavData = data;
    }
    clearFgNavData() {
        this.fgNavData = {};
    }
    hasFgNavData() {
        return !!Object.keys(this.fgNavData).length;
    }
    getFgNavData() {
        return this.fgNavData;
    }
    prependBgNavData(data) {
        this.bgNavData.unshift(...data);
    }
    addBgNavData(data) {
        this.bgNavData.push(data);
    }
    clearBgNavData() {
        this.bgNavData = [];
    }
}
exports.TabState = TabState;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavEvents.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavEvents.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BgNavEvents = void 0;
var BgNavEvents;
(function (BgNavEvents) {
    BgNavEvents["CONTENT_URL_REWRITED"] = "BG_NAV__CONTENT_URL_REWRITED";
    BgNavEvents["NAVIGATION_STARTED"] = "BGNAV__NAVIGATION_STARTED";
    BgNavEvents["NAVIGATION_COMMITED"] = "BGNAV__NAVIGATION_COMMITED";
})(BgNavEvents = exports.BgNavEvents || (exports.BgNavEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavModule.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavModule.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BgNavModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const WebRequestService_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestService.js");
const TabService_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabService.js");
const BgNavTypes_1 = __webpack_require__(/*! ./BgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavTypes.js");
const OnBeforeRequest_1 = __webpack_require__(/*! ./listeners/internal/webRequest/OnBeforeRequest */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnBeforeRequest.js");
const OnBeforeSendHeaders_1 = __webpack_require__(/*! ./listeners/internal/webRequest/OnBeforeSendHeaders */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnBeforeSendHeaders.js");
const OnSendHeaders_1 = __webpack_require__(/*! ./listeners/internal/webRequest/OnSendHeaders */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnSendHeaders.js");
const OnBeforeRedirect_1 = __webpack_require__(/*! ./listeners/internal/webRequest/OnBeforeRedirect */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnBeforeRedirect.js");
const OnResponseStarted_1 = __webpack_require__(/*! ./listeners/internal/webRequest/OnResponseStarted */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnResponseStarted.js");
const OnCompleted_1 = __webpack_require__(/*! ./listeners/internal/webRequest/OnCompleted */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnCompleted.js");
const OnErrorOccurred_1 = __webpack_require__(/*! ./listeners/internal/webRequest/OnErrorOccurred */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnErrorOccurred.js");
const StateService_1 = __webpack_require__(/*! ./services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/StateService/StateService.js");
const DataService_1 = __webpack_require__(/*! ./services/DataService/DataService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/DataService/DataService.js");
const BgLogger_1 = __webpack_require__(/*! ./services/Logger/BgLogger */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/Logger/BgLogger.js");
class BgNavModule extends src_1.MarioModule {
    name() {
        return 'BgNavModule';
    }
    static use(mario, options) {
        return mario.registerModule(BgNavModule, options);
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this.mario().container().bind(BgNavTypes_1.BgNavTypes.PARAM_PANALYTICS_ID).toConstantValue(options.panalyticsId);
            this.mario().container().bind(BgNavTypes_1.BgNavTypes.PARAM_PINSTANCE_ID).toConstantValue(options.pinstanceId);
            this.mario().container().bind(BgNavTypes_1.BgNavTypes.PARAM_PARTNER_ID).toConstantValue(options.partnerId);
            this.mario().container().bind(BgNavTypes_1.BgNavTypes.PARAM_DISTRIBUTOR_ID).toConstantValue(options.distributorId);
            this.mario().container().bind(BgNavTypes_1.BgNavTypes.PARAM_ENABLED).toConstantValue(options.enabled);
            this.mario().container().bind(BgNavTypes_1.BgNavTypes.PARAM_LOGGING).toConstantValue(options.logging);
            this.mario().registerService(BgNavTypes_1.BgNavTypes.LOGGER, BgLogger_1.BgLogger);
            this.mario().registerService(src_1.MARIO_TYPES.WEB_REQUEST_SERVICE, WebRequestService_1.WebRequestService);
            this.mario().registerService(src_1.MARIO_TYPES.TAB_SERVICE, TabService_1.TabService);
            this.mario().registerService(BgNavTypes_1.BgNavTypes.STATE_SERVICE, StateService_1.StateService);
            this.mario().registerService(BgNavTypes_1.BgNavTypes.DATA_SERVICE, DataService_1.DataService);
            const listenerParams = { urls: ['<all_urls>'] };
            this.mario().getService(src_1.MARIO_TYPES.WEB_REQUEST_SERVICE).listenOnBeforeRequest(listenerParams);
            this.mario().getService(src_1.MARIO_TYPES.WEB_REQUEST_SERVICE).listenOnBeforeSendHeaders(listenerParams, ['requestHeaders']);
            this.mario().getService(src_1.MARIO_TYPES.WEB_REQUEST_SERVICE).listenOnSendHeaders(listenerParams, ['requestHeaders']);
            this.mario().getService(src_1.MARIO_TYPES.WEB_REQUEST_SERVICE).listenOnBeforeRedirect(listenerParams, ['responseHeaders']);
            this.mario().getService(src_1.MARIO_TYPES.WEB_REQUEST_SERVICE).listenOnResponseStarted(listenerParams, ['responseHeaders']);
            this.mario().getService(src_1.MARIO_TYPES.WEB_REQUEST_SERVICE).listenOnCompleted(listenerParams, ['responseHeaders']);
            this.mario().getService(src_1.MARIO_TYPES.WEB_REQUEST_SERVICE).listenOnErrorOccurred(listenerParams);
            this.mario().getService(src_1.MARIO_TYPES.TAB_SERVICE).listenOnCreated();
            this.mario().getService(src_1.MARIO_TYPES.TAB_SERVICE).listenOnUpdated();
            this.mario().getService(src_1.MARIO_TYPES.TAB_SERVICE).listenOnRemoved();
            this.mario().internalDispatcher().on(OnBeforeRequest_1.OnBeforeRequest);
            this.mario().internalDispatcher().on(OnBeforeSendHeaders_1.OnBeforeSendHeaders);
            this.mario().internalDispatcher().on(OnSendHeaders_1.OnSendHeaders);
            this.mario().internalDispatcher().on(OnBeforeRedirect_1.OnBeforeRedirect);
            this.mario().internalDispatcher().on(OnResponseStarted_1.OnResponseStarted);
            this.mario().internalDispatcher().on(OnCompleted_1.OnCompleted);
            this.mario().internalDispatcher().on(OnErrorOccurred_1.OnErrorOccurred);
        });
    }
}
exports.BgNavModule = BgNavModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavTypes.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavTypes.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BgNavTypes = void 0;
exports.BgNavTypes = {
    PARAM_ENABLED: Symbol.for('PARAM_ENABLED'),
    PARAM_PANALYTICS_ID: Symbol.for('PARAM_PANALYTICS_ID'),
    PARAM_PINSTANCE_ID: Symbol.for('PARAM_PINSTANCE_ID'),
    PARAM_PARTNER_ID: Symbol.for('PARAM_PARTNER_ID'),
    PARAM_DISTRIBUTOR_ID: Symbol.for('PARAM_DISTRIBUTOR_ID'),
    PARAM_LOGGING: Symbol.for('PARAM_LOGGING'),
    LOGGER: Symbol.for('BG_NAV_LOGGER'),
    STATE_SERVICE: Symbol.for('STATE_SERVICE'),
    DATA_SERVICE: Symbol.for('DATA_SERVICE'),
};


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/config/blankPage.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/config/blankPage.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.blankPage = void 0;
exports.blankPage = {
    'CHROME_BROWSER': 'chrome://newtab/',
    'FIREFOX_BROWSER': 'about:blank',
    'EDGE_BROWSER': 'edge://newtab/'
};


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/config/whiteListProtocols.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/config/whiteListProtocols.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.whiteListProtocols = void 0;
exports.whiteListProtocols = [
    'chrome:',
    'chrome-search:',
    'chrome-devtools',
    'about:',
    'edge:'
];


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/libs/utils.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/libs/utils.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.delay = exports.getDomain = exports.generateUIID = exports.isSameOrigin = exports.isSameDomain = exports.getBrowserBlankPageUrl = exports.isBlankPage = exports.isWhiteListUrl = exports.valueToPromise = void 0;
const whiteListProtocols_1 = __webpack_require__(/*! ../config/whiteListProtocols */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/config/whiteListProtocols.js");
const blankPage_1 = __webpack_require__(/*! ../config/blankPage */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/config/blankPage.js");
function valueToPromise(value) {
    return new Promise(resolve => {
        resolve(value);
    });
}
exports.valueToPromise = valueToPromise;
function isWhiteListUrl(url) {
    if (url === '') {
        return true;
    }
    const { protocol } = new URL(url);
    return whiteListProtocols_1.whiteListProtocols.includes(protocol);
}
exports.isWhiteListUrl = isWhiteListUrl;
function isBlankPage(url) {
    return url === getBrowserBlankPageUrl();
}
exports.isBlankPage = isBlankPage;
function getBrowserBlankPageUrl() {
    const defaultUrl = 'about:blank';
    return blankPage_1.blankPage["CHROME_BROWSER"] || defaultUrl;
}
exports.getBrowserBlankPageUrl = getBrowserBlankPageUrl;
function isSameDomain(url1, url2) {
    if (!url1 || !url2) {
        return;
    }
    return new URL(url1).host === new URL(url2).host;
}
exports.isSameDomain = isSameDomain;
function isSameOrigin(url1, url2) {
    return new URL(url1).origin === new URL(url2).origin;
}
exports.isSameOrigin = isSameOrigin;
function generateUIID() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);
        return v.toString(16);
    });
}
exports.generateUIID = generateUIID;
function getDomain(url) {
    try {
        const { host } = new URL(url);
        return host;
    }
    catch (err) {
        return url;
    }
}
exports.getDomain = getDomain;
function delay(ms) {
    return __awaiter(this, void 0, void 0, function* () {
        return new Promise(resolve => setTimeout(resolve, ms));
    });
}
exports.delay = delay;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnBeforeRedirect.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnBeforeRedirect.js ***!
  \********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OnBeforeRedirect = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const WebRequestServiceEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents.js");
const StateService_1 = __webpack_require__(/*! ../../../services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/StateService/StateService.js");
const BgNavTypes_1 = __webpack_require__(/*! ../../../BgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavTypes.js");
let OnBeforeRedirect = class OnBeforeRedirect {
    constructor(bgStateService) {
        this.bgStateService = bgStateService;
    }
    on() {
        return WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_BEFORE_REDIRECT;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = event.data.details;
            const { responseHeaders } = data;
            const requestId = +data.requestId;
            const webEvent = this.bgStateService.getWebEvent(requestId);
            if (!webEvent) {
                return;
            }
            webEvent.setFromResponse(data);
            if (responseHeaders) {
                webEvent.setResponseHeaders(responseHeaders);
            }
            this.bgStateService.finalize(webEvent);
        });
    }
};
OnBeforeRedirect = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(BgNavTypes_1.BgNavTypes.STATE_SERVICE)),
    __metadata("design:paramtypes", [StateService_1.StateService])
], OnBeforeRedirect);
exports.OnBeforeRedirect = OnBeforeRedirect;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnBeforeRequest.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnBeforeRequest.js ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OnBeforeRequest = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const WebRequestServiceEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents.js");
const StateService_1 = __webpack_require__(/*! ../../../services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/StateService/StateService.js");
const BgNavTypes_1 = __webpack_require__(/*! ../../../BgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavTypes.js");
const utils_1 = __webpack_require__(/*! ../../../libs/utils */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/libs/utils.js");
let OnBeforeRequest = class OnBeforeRequest {
    constructor(bgStateService) {
        this.bgStateService = bgStateService;
    }
    on() {
        return WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_BEFORE_REQUEST;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = event.data.details;
            const { tabId, url } = data;
            const requestId = +data.requestId;
            if (utils_1.isWhiteListUrl(url) || tabId === -1) {
                return;
            }
            this.bgStateService.addWebEvent(tabId, requestId);
        });
    }
};
OnBeforeRequest = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(BgNavTypes_1.BgNavTypes.STATE_SERVICE)),
    __metadata("design:paramtypes", [StateService_1.StateService])
], OnBeforeRequest);
exports.OnBeforeRequest = OnBeforeRequest;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnBeforeSendHeaders.js":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnBeforeSendHeaders.js ***!
  \***********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OnBeforeSendHeaders = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const WebRequestServiceEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents.js");
const StateService_1 = __webpack_require__(/*! ../../../services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/StateService/StateService.js");
const BgNavTypes_1 = __webpack_require__(/*! ../../../BgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavTypes.js");
let OnBeforeSendHeaders = class OnBeforeSendHeaders {
    constructor(stateService) {
        this.stateService = stateService;
    }
    on() {
        return WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_BEFORE_SEND_HEADERS;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = event.data.details;
            const { requestHeaders } = data;
            const requestId = +data.requestId;
            const webEvent = this.stateService.getWebEvent(requestId);
            if (!webEvent) {
                return;
            }
            webEvent.setRequestHeaders(requestHeaders);
        });
    }
};
OnBeforeSendHeaders = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(BgNavTypes_1.BgNavTypes.STATE_SERVICE)),
    __metadata("design:paramtypes", [StateService_1.StateService])
], OnBeforeSendHeaders);
exports.OnBeforeSendHeaders = OnBeforeSendHeaders;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnCompleted.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnCompleted.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OnCompleted = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const WebRequestServiceEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents.js");
const StateService_1 = __webpack_require__(/*! ../../../services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/StateService/StateService.js");
const BgNavTypes_1 = __webpack_require__(/*! ../../../BgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavTypes.js");
let OnCompleted = class OnCompleted {
    constructor(bgStateService) {
        this.bgStateService = bgStateService;
    }
    on() {
        return WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_COMPLETED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = event.data.details;
            const requestId = +data.requestId;
            const webEvent = this.bgStateService.getWebEvent(requestId);
            if (!webEvent) {
                return;
            }
            webEvent.setFromResponse(data);
            this.bgStateService.finalize(webEvent);
        });
    }
};
OnCompleted = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(BgNavTypes_1.BgNavTypes.STATE_SERVICE)),
    __metadata("design:paramtypes", [StateService_1.StateService])
], OnCompleted);
exports.OnCompleted = OnCompleted;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnErrorOccurred.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnErrorOccurred.js ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OnErrorOccurred = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const WebRequestServiceEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents.js");
const StateService_1 = __webpack_require__(/*! ../../../services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/StateService/StateService.js");
const BgNavTypes_1 = __webpack_require__(/*! ../../../BgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavTypes.js");
let OnErrorOccurred = class OnErrorOccurred {
    constructor(bgStateService) {
        this.bgStateService = bgStateService;
    }
    on() {
        return WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_ERROR_OCCURRED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = event.data.details;
            const requestId = +data.requestId;
            const webEvent = this.bgStateService.getWebEvent(requestId);
            if (!webEvent) {
                return;
            }
            webEvent.setFromResponse(data);
            this.bgStateService.finalize(webEvent);
        });
    }
};
OnErrorOccurred = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(BgNavTypes_1.BgNavTypes.STATE_SERVICE)),
    __metadata("design:paramtypes", [StateService_1.StateService])
], OnErrorOccurred);
exports.OnErrorOccurred = OnErrorOccurred;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnResponseStarted.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnResponseStarted.js ***!
  \*********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OnResponseStarted = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const WebRequestServiceEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents.js");
const StateService_1 = __webpack_require__(/*! ../../../services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/StateService/StateService.js");
const BgNavTypes_1 = __webpack_require__(/*! ../../../BgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavTypes.js");
let OnResponseStarted = class OnResponseStarted {
    constructor(stateService) {
        this.stateService = stateService;
    }
    on() {
        return WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_RESPONSE_STARTED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = event.data.details;
            const { responseHeaders } = data;
            const requestId = +data.requestId;
            const webEvent = this.stateService.getWebEvent(requestId);
            if (!webEvent) {
                return;
            }
            if (responseHeaders) {
                webEvent.setResponseHeaders(responseHeaders);
            }
        });
    }
};
OnResponseStarted = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(BgNavTypes_1.BgNavTypes.STATE_SERVICE)),
    __metadata("design:paramtypes", [StateService_1.StateService])
], OnResponseStarted);
exports.OnResponseStarted = OnResponseStarted;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnSendHeaders.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/listeners/internal/webRequest/OnSendHeaders.js ***!
  \*****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OnSendHeaders = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const WebRequestServiceEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestServiceEvents.js");
let OnSendHeaders = class OnSendHeaders {
    constructor() {
    }
    on() {
        return WebRequestServiceEvents_1.WebRequestServiceEvents.WEB_REQUEST_ON_SEND_HEADERS;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
        });
    }
};
OnSendHeaders = __decorate([
    inversify_1.injectable(),
    __metadata("design:paramtypes", [])
], OnSendHeaders);
exports.OnSendHeaders = OnSendHeaders;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/models/WebEvent.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/models/WebEvent.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.WebEvent = void 0;
const WebEventInterface_1 = __webpack_require__(/*! ./WebEventInterface */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/models/WebEventInterface.js");
class WebEvent {
    constructor() {
        this.requestHeaders = [];
        this.responseHeaders = [];
    }
    setFromResponse(data) {
        if (data.method) {
            this.requestMethod = data.method;
        }
        if (data.url) {
            this.url = data.url;
        }
        if (data.tabId) {
            this.tabId = data.tabId;
        }
        if (data.ip) {
            this.serverIp = data.ip;
        }
        if (data.type) {
            this.eventSubType = data.type;
            this.eventType = this.calcEventType();
        }
        if (data.fromCache !== undefined) {
            this.responseIsFromCache = data.fromCache;
        }
        if (data.redirectUrl) {
            this.responseRedirectUrl = data.redirectUrl;
        }
        if (data.statusCode) {
            this.responseStatusCode = data.statusCode;
        }
        if (data.statusLine) {
            this.responseStatusLine = data.statusLine;
        }
        if (data.frameId !== undefined) {
            this.frameId = data.frameId;
        }
        if (data.parentFrameId !== undefined) {
            this.parentFrameId = data.parentFrameId;
        }
        if (data.error) {
            this.responseError = data.error;
        }
    }
    setRequestHeaders(headers) {
        for (let i = 0; i < headers.length; i++) {
            const header = headers[i];
            this.requestHeaders.push({
                name: header.name,
                value: header.value
            });
        }
    }
    setResponseHeaders(headers) {
        for (let i = 0; i < headers.length; i++) {
            const header = headers[i];
            this.responseHeaders.push({
                name: header.name,
                value: header.value,
            });
        }
    }
    setDocumentData(data) {
        this.pageWindowName = data.windowName;
        this.pageDocumentTitle = data.title;
        this.pageDocumentReferrer = data.referrer;
    }
    setPanalyticsData(data) {
        this.panalyticsId = data.panalyticsId;
        this.pinstanceId = data.pinstanceId;
        this.partnerId = data.partnerId;
        this.distributorId = data.distributorId;
    }
    setDomData(data) {
        this.pageDomData = data;
    }
    setSystemData(data) {
        this.requestOs = data.name;
        this.requestOsVersion = data.version;
    }
    setBowserData(data) {
        this.requestBrowser = data.name;
        this.requestBrowserVersion = data.version;
    }
    setNavigationSequence(value) {
        this.navigationSequence = value;
    }
    setSourceTabId(id) {
        this.sourceTabId = id;
    }
    setNavigationMethod(value) {
        this.navigationMethod = value;
    }
    setData(data) {
        Object.assign(this, data);
    }
    getData() {
        return this;
    }
    clone() {
        const newEvent = new WebEvent();
        Object.entries(this).forEach(([key, value]) => {
            if (this.hasOwnProperty(key)) {
                newEvent[key] = this[key];
            }
        });
        return newEvent;
    }
    calcEventType() {
        return ['main_frame', 'sub_frame'].indexOf(this.eventSubType) !== -1 ? WebEventInterface_1.EventType.MAIN : WebEventInterface_1.EventType.RESOURCE;
    }
}
exports.WebEvent = WebEvent;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/models/WebEventInterface.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/models/WebEventInterface.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EventType = exports.NavigationMethod = void 0;
var NavigationMethod;
(function (NavigationMethod) {
    NavigationMethod["REQUEST"] = "request";
    NavigationMethod["URL_REWRITE"] = "url_rewrite";
})(NavigationMethod = exports.NavigationMethod || (exports.NavigationMethod = {}));
var EventType;
(function (EventType) {
    EventType["MAIN"] = "main";
    EventType["RESOURCE"] = "resource";
})(EventType = exports.EventType || (exports.EventType = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/DataService/DataService.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/DataService/DataService.js ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const utils_1 = __webpack_require__(/*! ../../libs/utils */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/libs/utils.js");
const helpers_1 = __webpack_require__(/*! ./helpers */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/DataService/helpers.js");
const BgNavTypes_1 = __webpack_require__(/*! ../../BgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavTypes.js");
let DataService = class DataService {
    constructor(panalyticsId, pinstanceId, partnerId, distributorId) {
        this.panalyticsId = panalyticsId;
        this.pinstanceId = pinstanceId;
        this.partnerId = partnerId;
        this.distributorId = distributorId;
    }
    getPanalyticsData() {
        return __awaiter(this, void 0, void 0, function* () {
            const data = {
                panalyticsId: this.panalyticsId,
                pinstanceId: this.pinstanceId,
                partnerId: this.partnerId,
                distributorId: this.distributorId,
            };
            return utils_1.valueToPromise(data);
        });
    }
    getSystemData() {
        return __awaiter(this, void 0, void 0, function* () {
            return helpers_1.getOSVersion();
        });
    }
    getBrowserData() {
        return __awaiter(this, void 0, void 0, function* () {
            return helpers_1.getBrowserVersion();
        });
    }
    getDocumentData(tabId) {
        return __awaiter(this, void 0, void 0, function* () {
            const script = '[document.title, document.referrer, window.name]';
            return new Promise((resolve, reject) => {
                chrome.tabs.executeScript(tabId, { code: script }, (result) => {
                    if (chrome.runtime.lastError || !result || !result[0]) {
                        reject('error retrieving document data');
                    }
                    else {
                        const [title, referrer, windowName] = result[0];
                        resolve({ title, referrer, windowName });
                    }
                });
            });
        });
    }
    getDomData(tabId) {
        return __awaiter(this, void 0, void 0, function* () {
            const script = '[document.documentElement.innerHTML]';
            return new Promise((resolve, reject) => {
                chrome.tabs.executeScript(tabId, { code: script }, (result) => {
                    if (chrome.runtime.lastError || !result || !result[0]) {
                        reject('error retrieving DOM data');
                    }
                    else {
                        const [data] = result[0];
                        resolve(data);
                    }
                });
            });
        });
    }
};
DataService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(BgNavTypes_1.BgNavTypes.PARAM_PANALYTICS_ID)),
    __param(1, inversify_1.inject(BgNavTypes_1.BgNavTypes.PARAM_PINSTANCE_ID)),
    __param(2, inversify_1.inject(BgNavTypes_1.BgNavTypes.PARAM_PARTNER_ID)),
    __param(3, inversify_1.inject(BgNavTypes_1.BgNavTypes.PARAM_DISTRIBUTOR_ID)),
    __metadata("design:paramtypes", [String, Number, Number, Number])
], DataService);
exports.DataService = DataService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/DataService/helpers.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/DataService/helpers.js ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.getBrowserVersion = exports.getOSVersion = void 0;
function getOSVersion() {
    const nVer = navigator.appVersion;
    const nAgt = navigator.userAgent;
    let os = '';
    const clientStrings = [
        { s: 'Windows 10', r: /(Windows 10.0|Windows NT 10.0)/ },
        { s: 'Windows 8.1', r: /(Windows 8.1|Windows NT 6.3)/ },
        { s: 'Windows 8', r: /(Windows 8|Windows NT 6.2)/ },
        { s: 'Windows 7', r: /(Windows 7|Windows NT 6.1)/ },
        { s: 'Windows Vista', r: /Windows NT 6.0/ },
        { s: 'Windows Server 2003', r: /Windows NT 5.2/ },
        { s: 'Windows XP', r: /(Windows NT 5.1|Windows XP)/ },
        { s: 'Windows 2000', r: /(Windows NT 5.0|Windows 2000)/ },
        { s: 'Windows ME', r: /(Win 9x 4.90|Windows ME)/ },
        { s: 'Windows 98', r: /(Windows 98|Win98)/ },
        { s: 'Windows 95', r: /(Windows 95|Win95|Windows_95)/ },
        { s: 'Windows NT 4.0', r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/ },
        { s: 'Windows CE', r: /Windows CE/ },
        { s: 'Windows 3.11', r: /Win16/ },
        { s: 'Android', r: /Android/ },
        { s: 'Open BSD', r: /OpenBSD/ },
        { s: 'Sun OS', r: /SunOS/ },
        { s: 'Chrome OS', r: /CrOS/ },
        { s: 'Linux', r: /(Linux|X11(?!.*CrOS))/ },
        { s: 'iOS', r: /(iPhone|iPad|iPod)/ },
        { s: 'Mac OS X', r: /Mac OS X/ },
        { s: 'Mac OS', r: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ },
        { s: 'QNX', r: /QNX/ },
        { s: 'UNIX', r: /UNIX/ },
        { s: 'BeOS', r: /BeOS/ },
        { s: 'OS/2', r: /OS\/2/ },
        { s: 'Search Bot', r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\/Teoma|ia_archiver)/ }
    ];
    for (let id in clientStrings) {
        let cs = clientStrings[id];
        if (cs.r.test(nAgt)) {
            os = cs.s;
            break;
        }
    }
    let osVersion;
    if (/Windows/.test(os)) {
        osVersion = /Windows (.*)/.exec(os)[1];
        os = 'Windows';
    }
    switch (os) {
        case 'Mac OS X':
            const parts = /Mac OS X ([\.\_\d]+)/.exec(nAgt);
            osVersion = parts ? parts[1] : 'unknown';
            break;
        case 'Android':
            osVersion = /Android ([\.\_\d]+)/.exec(nAgt)[1];
            break;
        case 'iOS':
            osVersion = /OS (\d+)_(\d+)_?(\d+)?/.exec(nVer);
            osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0);
            break;
    }
    return {
        name: os,
        version: osVersion
    };
}
exports.getOSVersion = getOSVersion;
// xxx
function getBrowserVersion() {
    let geckobrowsers;
    let browser = "";
    let browserVersion = '0';
    let agent = navigator.userAgent + " ";
    if (agent.substring(agent.indexOf("Mozilla/") + 8, agent.indexOf(" ")) == "5.0" && agent.indexOf("like Gecko") != -1) {
        geckobrowsers = agent.substring(agent.indexOf("like Gecko") + 10).substring(agent.substring(agent.indexOf("like Gecko") + 10).indexOf(") ") + 2).replace("LG Browser", "LGBrowser").replace("360SE", "360SE/");
        for (let i = 0; i < 1; i++) {
            geckobrowsers = geckobrowsers.replace(geckobrowsers.substring(geckobrowsers.indexOf("("), geckobrowsers.indexOf(")") + 1), "");
        }
        geckobrowsers = geckobrowsers.split(" ");
        for (let i = 0; i < geckobrowsers.length; i++) {
            if (geckobrowsers[i].indexOf("/") == -1)
                geckobrowsers[i] = "Chrome";
            if (geckobrowsers[i].indexOf("/") != -1)
                geckobrowsers[i] = geckobrowsers[i].substring(0, geckobrowsers[i].indexOf("/"));
        }
        if (geckobrowsers.length < 4) {
            browser = geckobrowsers[0];
        }
        else {
            for (let i = 0; i < geckobrowsers.length; i++) {
                if (geckobrowsers[i].indexOf("Chrome") == -1 && geckobrowsers[i].indexOf("Safari") == -1 && geckobrowsers[i].indexOf("Mobile") == -1 && geckobrowsers[i].indexOf("Version") == -1)
                    browser = geckobrowsers[i];
            }
        }
        browserVersion = agent.substring(agent.indexOf(browser) + browser.length + 1, agent.indexOf(browser) + browser.length + 1 + agent.substring(agent.indexOf(browser) + browser.length + 1).indexOf(" "));
    }
    else if (agent.substring(agent.indexOf("Mozilla/") + 8, agent.indexOf(" ")) == "5.0" && agent.indexOf("Gecko/") != -1) {
        browser = agent.substring(agent.substring(agent.indexOf("Gecko/") + 6).indexOf(" ") + agent.indexOf("Gecko/") + 6).substring(0, agent.substring(agent.substring(agent.indexOf("Gecko/") + 6).indexOf(" ") + agent.indexOf("Gecko/") + 6).indexOf("/"));
        browserVersion = agent.substring(agent.indexOf(browser) + browser.length + 1, agent.indexOf(browser) + browser.length + 1 + agent.substring(agent.indexOf(browser) + browser.length + 1).indexOf(" "));
    }
    else if (agent.substring(agent.indexOf("Mozilla/") + 8, agent.indexOf(" ")) == "5.0" && agent.indexOf("Clecko/") != -1) {
        browser = agent.substring(agent.substring(agent.indexOf("Clecko/") + 7).indexOf(" ") + agent.indexOf("Clecko/") + 7).substring(0, agent.substring(agent.substring(agent.indexOf("Clecko/") + 7).indexOf(" ") + agent.indexOf("Clecko/") + 7).indexOf("/"));
        browserVersion = agent.substring(agent.indexOf(browser) + browser.length + 1, agent.indexOf(browser) + browser.length + 1 + agent.substring(agent.indexOf(browser) + browser.length + 1).indexOf(" "));
    }
    else if (agent.substring(agent.indexOf("Mozilla/") + 8, agent.indexOf(" ")) == "5.0") {
        browser = agent.substring(agent.indexOf("(") + 1, agent.indexOf(";"));
        browserVersion = agent.substring(agent.indexOf(browser) + browser.length + 1, agent.indexOf(browser) + browser.length + 1 + agent.substring(agent.indexOf(browser) + browser.length + 1).indexOf(" "));
    }
    else if (agent.substring(agent.indexOf("Mozilla/") + 8, agent.indexOf(" ")) == "4.0" && agent.indexOf(")") + 1 == agent.length - 1) {
        browser = agent.substring(agent.indexOf("(") + 1, agent.indexOf(")")).split("; ")[agent.substring(agent.indexOf("(") + 1, agent.indexOf(")")).split("; ").length - 1];
    }
    else if (agent.substring(agent.indexOf("Mozilla/") + 8, agent.indexOf(" ")) == "4.0" && agent.indexOf(")") + 1 != agent.length - 1) {
        if (agent.substring(agent.indexOf(") ") + 2).indexOf("/") != -1)
            browser = agent.substring(agent.indexOf(") ") + 2, agent.indexOf(") ") + 2 + agent.substring(agent.indexOf(") ") + 2).indexOf("/"));
        if (agent.substring(agent.indexOf(") ") + 2).indexOf("/") == -1)
            browser = agent.substring(agent.indexOf(") ") + 2, agent.indexOf(") ") + 2 + agent.substring(agent.indexOf(") ") + 2).indexOf(" "));
        browserVersion = agent.substring(agent.indexOf(browser) + browser.length + 1, agent.indexOf(browser) + browser.length + 1 + agent.substring(agent.indexOf(browser) + browser.length + 1).indexOf(" "));
    }
    else if (agent.substring(0, 6) == "Opera/") {
        browser = "Opera";
        browserVersion = agent.substring(agent.indexOf(browser) + browser.length + 1, agent.indexOf(browser) + browser.length + 1 + agent.substring(agent.indexOf(browser) + browser.length + 1).indexOf(" "));
    }
    else if (agent.substring(0, agent.indexOf("/")) != "Mozilla" && agent.substring(0, agent.indexOf("/")) != "Opera") {
        browser = agent.substring(0, agent.indexOf("/"));
        browserVersion = agent.substring(agent.indexOf(browser) + browser.length + 1, agent.indexOf(browser) + browser.length + 1 + agent.substring(agent.indexOf(browser) + browser.length + 1).indexOf(" "));
    }
    else {
        browser = agent;
    }
    return {
        name: browser,
        version: browserVersion
    };
}
exports.getBrowserVersion = getBrowserVersion;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/Logger/BgLogger.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/Logger/BgLogger.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BgLogger = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const BgNavTypes_1 = __webpack_require__(/*! ../../BgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavTypes.js");
let BgLogger = class BgLogger {
    constructor(logging) {
        this.logging = logging;
    }
    log(message, data) {
        if (this.logging) {
            console.log(message, data);
        }
    }
};
BgLogger = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(BgNavTypes_1.BgNavTypes.PARAM_LOGGING)),
    __metadata("design:paramtypes", [Boolean])
], BgLogger);
exports.BgLogger = BgLogger;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/StateService/StateService.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/StateService/StateService.js ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StateService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/ */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const WebEvent_1 = __webpack_require__(/*! ../../models/WebEvent */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/models/WebEvent.js");
const BgNavTypes_1 = __webpack_require__(/*! ../../BgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavTypes.js");
const DataService_1 = __webpack_require__(/*! ../DataService/DataService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/DataService/DataService.js");
const guid_typescript_1 = __webpack_require__(/*! guid-typescript */ "./node_modules/guid-typescript/dist/guid.js");
const utils_1 = __webpack_require__(/*! ../../libs/utils */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/libs/utils.js");
const BgNavEvents_1 = __webpack_require__(/*! ../../BgNavEvents */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavEvents.js");
const WebEventInterface_1 = __webpack_require__(/*! ../../models/WebEventInterface */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/models/WebEventInterface.js");
const TabStateTypes_1 = __webpack_require__(/*! ../../../../modules/tabstate-module/TabStateTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateTypes.js");
const TabStateService_1 = __webpack_require__(/*! ../../../../modules/tabstate-module/services/TabStateService/TabStateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/services/TabStateService/TabStateService.js");
const BgLogger_1 = __webpack_require__(/*! ../Logger/BgLogger */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/Logger/BgLogger.js");
let StateService = class StateService {
    constructor(internalDispatcher, _enabled, bgDataService, tabStateService, logger) {
        this.internalDispatcher = internalDispatcher;
        this._enabled = _enabled;
        this.bgDataService = bgDataService;
        this.tabStateService = tabStateService;
        this.logger = logger;
        this.webEvents = [];
        this.enabled = this._enabled;
    }
    enable() {
        this.enabled = true;
    }
    disable() {
        this.enabled = false;
    }
    isEnabled() {
        return this.enabled;
    }
    getWebEvent(requestId) {
        return this.webEvents.find((item) => item.requestId === requestId);
    }
    addWebEvent(tabId, requestId) {
        const event = new WebEvent_1.WebEvent();
        const eventId = guid_typescript_1.Guid.create().toString();
        this.logger.log(`addWebEvent: tabId=${tabId}, requestId=${requestId}, eventId=${eventId}`);
        event.setData({
            eventId,
            requestId,
            tabId,
        });
        this.webEvents.push(event);
        this.emitNavBgStartedEvent(event);
        return event;
    }
    finalize(originEvent) {
        return __awaiter(this, void 0, void 0, function* () {
            this.logger.log(`finalize: ${originEvent.url}`);
            // releasing event instantly to avoid collision when redirect event with the same(!) requestId fired
            const event = originEvent.clone();
            this.removeWebEvent(originEvent.requestId);
            const tabId = event.tabId;
            // wait for tabService staff to be updated, webRequest wires before tabUpdate event
            yield utils_1.delay(100);
            const tabState = this.tabStateService.getTabState(tabId);
            // skip for non-state tabs (opened earlier)
            if (!tabState || tabState.isBrowserServiceUrl) {
                this.logger.log(`bgStateService: ignored finalize event`);
                return;
            }
            const systemData = yield this.bgDataService.getSystemData();
            const browserData = yield this.bgDataService.getBrowserData();
            const panalyticsData = yield this.bgDataService.getPanalyticsData();
            event.setData({
                timeStamp: Date.now().toString(),
            });
            event.setSystemData(systemData);
            event.setBowserData(browserData);
            event.setPanalyticsData(panalyticsData);
            if (tabId >= 0) {
                try {
                    const documentData = yield this.bgDataService.getDocumentData(tabId);
                    event.setDocumentData(documentData);
                }
                catch (e) {
                }
                if (event.eventSubType === 'main_frame') {
                    event.setData({
                        eventId: tabState.sessionId,
                    });
                    try {
                        const domData = yield this.bgDataService.getDomData(tabId);
                        event.setDomData(domData);
                    }
                    catch (e) {
                    }
                }
                if (event.eventSubType !== 'main_frame' || tabState.navigationMethod === WebEventInterface_1.NavigationMethod.URL_REWRITE) {
                    event.setData({
                        mainFrameRequestEventId: tabState.sessionId,
                    });
                }
            }
            if (tabState.sourceTabId) {
                event.setSourceTabId(tabState.sourceTabId);
            }
            event.setNavigationMethod(tabState.navigationMethod || WebEventInterface_1.NavigationMethod.REQUEST);
            event.setNavigationSequence(tabState.navigationSequence);
            if (this.enabled) {
                yield this.emitNavBgCommitedEvent(event);
            }
        });
    }
    removeWebEvent(requestId) {
        const ind = this.webEvents.findIndex((item) => item.requestId === requestId);
        if (ind !== -1) {
            this.webEvents.splice(ind, 1);
        }
    }
    emitNavBgStartedEvent(event) {
        return __awaiter(this, void 0, void 0, function* () {
            this.internalDispatcher.emit(new src_1.MarioEvent(BgNavEvents_1.BgNavEvents.NAVIGATION_STARTED, event));
        });
    }
    emitNavBgCommitedEvent(event) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.internalDispatcher.emit(new src_1.MarioEvent(BgNavEvents_1.BgNavEvents.NAVIGATION_COMMITED, event));
        });
    }
};
StateService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __param(1, inversify_1.inject(BgNavTypes_1.BgNavTypes.PARAM_ENABLED)),
    __param(2, inversify_1.inject(BgNavTypes_1.BgNavTypes.DATA_SERVICE)),
    __param(3, inversify_1.inject(TabStateTypes_1.TabStateTypes.TAB_STATE_SERVICE)),
    __param(4, inversify_1.inject(BgNavTypes_1.BgNavTypes.LOGGER)),
    __metadata("design:paramtypes", [Object, Boolean, DataService_1.DataService,
        TabStateService_1.TabStateService,
        BgLogger_1.BgLogger])
], StateService);
exports.StateService = StateService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavEvents.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavEvents.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FgNavEvents = void 0;
var FgNavEvents;
(function (FgNavEvents) {
    FgNavEvents["CONTENT_URL_REWRITED"] = "FGNAV__CONTENT_URL_REWRITED";
    FgNavEvents["NAVIGATION_STARTED"] = "FGNAV__NAVIGATION_STARTED";
    FgNavEvents["NAVIGATION_COMMITED"] = "FGNAV__NAVIGATION_COMMITED";
})(FgNavEvents = exports.FgNavEvents || (exports.FgNavEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavModule.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavModule.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FgNavModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const TabService_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabService.js");
const NavigationService_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Navigation/Bg/NavigationService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Navigation/Bg/NavigationService.js");
const FgNavTypes_1 = __webpack_require__(/*! ./FgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavTypes.js");
const StateService_1 = __webpack_require__(/*! ./services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/StateService/StateService.js");
const DataService_1 = __webpack_require__(/*! ./services/DataService/DataService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/DataService/DataService.js");
const TabEventsProcessService_1 = __webpack_require__(/*! ./services/TabEventsProcessService/TabEventsProcessService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/TabEventsProcessService/TabEventsProcessService.js");
const QueueService_1 = __webpack_require__(/*! ./services/QueueService/QueueService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/QueueService/QueueService.js");
const TabStateLoading_1 = __webpack_require__(/*! ./listeners/internal/TabStateLoading */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/listeners/internal/TabStateLoading.js");
const TabStateCompleted_1 = __webpack_require__(/*! ./listeners/internal/TabStateCompleted */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/listeners/internal/TabStateCompleted.js");
const FgLogger_1 = __webpack_require__(/*! ./services/Logger/FgLogger */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/Logger/FgLogger.js");
class FgNavModule extends src_1.MarioModule {
    name() {
        return 'FgNavModule';
    }
    static use(mario, options) {
        return mario.registerModule(FgNavModule, options);
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this.mario().container().bind(FgNavTypes_1.FgNavTypes.FGNAV_PANALYTICS_ID).toConstantValue(options.panalyticsId);
            this.mario().container().bind(FgNavTypes_1.FgNavTypes.FGNAV_INSTANCE_ID).toConstantValue(options.pinstanceId);
            this.mario().container().bind(FgNavTypes_1.FgNavTypes.FGNAV_PARTNER_ID).toConstantValue(options.partnerId);
            this.mario().container().bind(FgNavTypes_1.FgNavTypes.FGNAV_DISTRIBUTOR_ID).toConstantValue(options.distributorId);
            this.mario().container().bind(FgNavTypes_1.FgNavTypes.FGNAV_ENABLED).toConstantValue(!!options.enabled);
            this.mario().container().bind(FgNavTypes_1.FgNavTypes.FGNAV_LOGGING).toConstantValue(!!options.logging);
            this.mario().registerService(FgNavTypes_1.FgNavTypes.FGNAV_LOGGER, FgLogger_1.FgLogger);
            this.mario().registerService(src_1.MARIO_TYPES.TAB_SERVICE, TabService_1.TabService);
            this.mario().registerService(src_1.MARIO_TYPES.NAVIGATION_SERVICE, NavigationService_1.NavigationService);
            this.mario().registerService(FgNavTypes_1.FgNavTypes.FGNAV_STATE_SERVICE, StateService_1.StateService);
            this.mario().registerService(FgNavTypes_1.FgNavTypes.FGNAV_DATA_SERVICE, DataService_1.DataService);
            this.mario().registerService(FgNavTypes_1.FgNavTypes.FGNAV_TAB_EVENTS_PROCESS_SERVICE, TabEventsProcessService_1.TabEventsProcessService);
            this.mario().registerService(FgNavTypes_1.FgNavTypes.FGNAV_QUEUE_SERVICE, QueueService_1.QueueService);
            this.mario().internalDispatcher().on(TabStateLoading_1.TabStateLoading);
            this.mario().internalDispatcher().on(TabStateCompleted_1.TabStateCompleted);
        });
    }
}
exports.FgNavModule = FgNavModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavTypes.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavTypes.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FgNavTypes = void 0;
exports.FgNavTypes = {
    FGNAV_STATE_SERVICE: Symbol.for('FGNAV_STATE_SERVICE'),
    FGNAV_DATA_SERVICE: Symbol.for('FGNAV_DATA_SERVICE'),
    FGNAV_TAB_EVENTS_PROCESS_SERVICE: Symbol.for('FGNAV_TAB_EVENTS_PROCESS_SERVICE'),
    FGNAV_QUEUE_SERVICE: Symbol.for('FGNAV_QUEUE_SERVICE'),
    FGNAV_ENABLED: Symbol.for('FGNAV_ENABLED'),
    FGNAV_PANALYTICS_ID: Symbol.for('FGNAV_PANALYTICS_ID'),
    FGNAV_INSTANCE_ID: Symbol.for('FGNAV_INSTANCE_ID'),
    FGNAV_PARTNER_ID: Symbol.for('FGNAV_PARTNER_ID'),
    FGNAV_DISTRIBUTOR_ID: Symbol.for('FGNAV_DISTRIBUTOR_ID'),
    FGNAV_LOGGING: Symbol.for('FGNAV_LOGGING'),
    FGNAV_LOGGER: Symbol.for('FGNAV_LOGGER'),
};


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/config/blankPage.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/config/blankPage.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.blankPage = void 0;
exports.blankPage = {
    'CHROME_BROWSER': 'chrome://newtab/',
    'FIREFOX_BROWSER': 'about:blank',
    'EDGE_BROWSER': 'edge://newtab/'
};


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/config/whiteListProtocols.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/config/whiteListProtocols.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.whiteListProtocols = void 0;
exports.whiteListProtocols = [
    'chrome:',
    'chrome-search:',
    'chrome-devtools',
    'about:',
    'edge:'
];


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/libs/utils.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/libs/utils.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.delay = exports.generateUIID = exports.isSameOrigin = exports.isSameDomain = exports.getDomain = exports.getBrowserBlankPageUrl = exports.isBlankPage = exports.isWhiteListUrl = exports.notConcurrent = exports.valueToPromise = void 0;
const whiteListProtocols_1 = __webpack_require__(/*! ../config/whiteListProtocols */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/config/whiteListProtocols.js");
const blankPage_1 = __webpack_require__(/*! ../config/blankPage */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/config/blankPage.js");
function valueToPromise(value) {
    return new Promise(resolve => {
        resolve(value);
    });
}
exports.valueToPromise = valueToPromise;
function notConcurrent(proc) {
    let inFlight = false;
    return () => {
        if (!inFlight) {
            inFlight = (() => __awaiter(this, void 0, void 0, function* () {
                try {
                    return yield proc();
                }
                finally {
                    inFlight = false;
                }
            }))();
        }
        return inFlight;
    };
}
exports.notConcurrent = notConcurrent;
;
function isWhiteListUrl(url) {
    if (url === '') {
        return true;
    }
    const { protocol } = new URL(url);
    return whiteListProtocols_1.whiteListProtocols.includes(protocol);
}
exports.isWhiteListUrl = isWhiteListUrl;
function isBlankPage(url) {
    return url === getBrowserBlankPageUrl();
}
exports.isBlankPage = isBlankPage;
function getBrowserBlankPageUrl() {
    const defaultUrl = 'about:blank';
    return blankPage_1.blankPage["CHROME_BROWSER"] || defaultUrl;
}
exports.getBrowserBlankPageUrl = getBrowserBlankPageUrl;
function getDomain(url) {
    try {
        const { host } = new URL(url);
        return host;
    }
    catch (err) {
        return url;
    }
}
exports.getDomain = getDomain;
function isSameDomain(url1, url2) {
    if (!url1 || !url2) {
        return;
    }
    return getDomain(url1) === getDomain(url2);
}
exports.isSameDomain = isSameDomain;
function isSameOrigin(url1, url2) {
    return new URL(url1).origin === new URL(url2).origin;
}
exports.isSameOrigin = isSameOrigin;
function generateUIID() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);
        return v.toString(16);
    });
}
exports.generateUIID = generateUIID;
function delay(ms) {
    return __awaiter(this, void 0, void 0, function* () {
        return new Promise(resolve => setTimeout(resolve, ms));
    });
}
exports.delay = delay;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/listeners/internal/TabStateCompleted.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/listeners/internal/TabStateCompleted.js ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TabStateCompleted = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const TabEventsProcessService_1 = __webpack_require__(/*! ../../services/TabEventsProcessService/TabEventsProcessService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/TabEventsProcessService/TabEventsProcessService.js");
const FgNavTypes_1 = __webpack_require__(/*! ../../FgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavTypes.js");
const TabEventsProcessServiceInterface_1 = __webpack_require__(/*! ../../services/TabEventsProcessService/TabEventsProcessServiceInterface */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/TabEventsProcessService/TabEventsProcessServiceInterface.js");
const TabStateEvents_1 = __webpack_require__(/*! ../../../tabstate-module/TabStateEvents */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateEvents.js");
let TabStateCompleted = class TabStateCompleted {
    constructor(tabEventsProcessService) {
        this.tabEventsProcessService = tabEventsProcessService;
    }
    on() {
        return TabStateEvents_1.TabStateEvents.TAB_STATE_COMPLETED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const { tabId, url } = event.data;
            this.tabEventsProcessService.process({
                type: TabEventsProcessServiceInterface_1.TAB_EVENT_TYPE.COMPLETE,
                tabId,
                url,
                tabState: event.data,
            });
        });
    }
};
TabStateCompleted = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(FgNavTypes_1.FgNavTypes.FGNAV_TAB_EVENTS_PROCESS_SERVICE)),
    __metadata("design:paramtypes", [TabEventsProcessService_1.TabEventsProcessService])
], TabStateCompleted);
exports.TabStateCompleted = TabStateCompleted;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/listeners/internal/TabStateLoading.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/listeners/internal/TabStateLoading.js ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TabStateLoading = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const TabEventsProcessService_1 = __webpack_require__(/*! ../../services/TabEventsProcessService/TabEventsProcessService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/TabEventsProcessService/TabEventsProcessService.js");
const FgNavTypes_1 = __webpack_require__(/*! ../../FgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavTypes.js");
const TabEventsProcessServiceInterface_1 = __webpack_require__(/*! ../../services/TabEventsProcessService/TabEventsProcessServiceInterface */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/TabEventsProcessService/TabEventsProcessServiceInterface.js");
const TabStateEvents_1 = __webpack_require__(/*! ../../../tabstate-module/TabStateEvents */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateEvents.js");
let TabStateLoading = class TabStateLoading {
    constructor(tabEventsProcessService) {
        this.tabEventsProcessService = tabEventsProcessService;
    }
    on() {
        return TabStateEvents_1.TabStateEvents.TAB_STATE_LOADING;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const { tabId, url } = event.data;
            this.tabEventsProcessService.process({
                type: TabEventsProcessServiceInterface_1.TAB_EVENT_TYPE.LOADING,
                tabId,
                url,
                tabState: event.data
            });
        });
    }
};
TabStateLoading = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(FgNavTypes_1.FgNavTypes.FGNAV_TAB_EVENTS_PROCESS_SERVICE)),
    __metadata("design:paramtypes", [TabEventsProcessService_1.TabEventsProcessService])
], TabStateLoading);
exports.TabStateLoading = TabStateLoading;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/models/WebEvent.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/models/WebEvent.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.WebEvent = void 0;
const utils_1 = __webpack_require__(/*! ../libs/utils */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/libs/utils.js");
class WebEvent {
    constructor() {
        this.url = '';
        this.hasData = false;
        this.navigationData = {};
        this.documentData = {};
        this.systemData = {};
        this.panalyticsData = {};
    }
    setTabId(id) {
        this.tabId = id;
    }
    setUrl(url) {
        this.url = url;
        this.domain = utils_1.getDomain(url);
    }
    setNavigationData(data) {
        Object.assign(this.navigationData, data);
    }
    getNavigationData() {
        return this.navigationData;
    }
    setDocumentData(data) {
        Object.assign(this.documentData, data);
    }
    getDocumentData() {
        return this.documentData;
    }
    setPanalyticsData(data) {
        Object.assign(this.panalyticsData, data);
    }
    getPanalyticsData() {
        return this.panalyticsData;
    }
    setSystemData(data) {
        Object.assign(this.systemData, data);
    }
    getSystemData() {
        return this.systemData;
    }
}
exports.WebEvent = WebEvent;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/models/WebEventInterface.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/models/WebEventInterface.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NavigationMethod = void 0;
var NavigationMethod;
(function (NavigationMethod) {
    NavigationMethod["REQUEST"] = "request";
    NavigationMethod["URL_REWRITE"] = "url_rewrite";
})(NavigationMethod = exports.NavigationMethod || (exports.NavigationMethod = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/DataService/DataService.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/DataService/DataService.js ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const utils_1 = __webpack_require__(/*! ../../libs/utils */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/libs/utils.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const helpers_1 = __webpack_require__(/*! ./helpers */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/DataService/helpers.js");
const FgNavTypes_1 = __webpack_require__(/*! ../../FgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavTypes.js");
let DataService = class DataService {
    constructor(externalDispatcher, panalyticsId, pinstanceId, partnerId, distributorId) {
        this.externalDispatcher = externalDispatcher;
        this.panalyticsId = panalyticsId;
        this.pinstanceId = pinstanceId;
        this.partnerId = partnerId;
        this.distributorId = distributorId;
    }
    getPanalyticsData() {
        return __awaiter(this, void 0, void 0, function* () {
            const data = {
                panalyticsId: this.panalyticsId,
                pinstanceId: this.pinstanceId,
                partnerId: this.partnerId,
                distributorId: this.distributorId,
            };
            return utils_1.valueToPromise(data);
        });
    }
    getSystemData() {
        return __awaiter(this, void 0, void 0, function* () {
            return utils_1.valueToPromise(helpers_1.getOSVersion());
        });
    }
    getTabDocumentData(tabId) {
        return __awaiter(this, void 0, void 0, function* () {
            const script = '[document.title, document.referrer, window.name]';
            return new Promise((resolve, reject) => {
                chrome.tabs.executeScript(tabId, { code: script }, (result) => {
                    if (chrome.runtime.lastError || !result || !result[0]) {
                        reject();
                    }
                    else {
                        const [title, referrer, windowName] = result[0];
                        resolve({ title, referrer, windowName });
                    }
                });
            });
        });
    }
};
DataService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.EXTERNAL_DISPATCHER)),
    __param(1, inversify_1.inject(FgNavTypes_1.FgNavTypes.FGNAV_PANALYTICS_ID)),
    __param(2, inversify_1.inject(FgNavTypes_1.FgNavTypes.FGNAV_INSTANCE_ID)),
    __param(3, inversify_1.inject(FgNavTypes_1.FgNavTypes.FGNAV_PARTNER_ID)),
    __param(4, inversify_1.inject(FgNavTypes_1.FgNavTypes.FGNAV_DISTRIBUTOR_ID)),
    __metadata("design:paramtypes", [Object, String, Number, Number, Number])
], DataService);
exports.DataService = DataService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/DataService/helpers.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/DataService/helpers.js ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.getOSVersion = void 0;
function getOSVersion() {
    const nVer = navigator.appVersion;
    const nAgt = navigator.userAgent;
    let os = '';
    const clientStrings = [
        { s: 'Windows 10', r: /(Windows 10.0|Windows NT 10.0)/ },
        { s: 'Windows 8.1', r: /(Windows 8.1|Windows NT 6.3)/ },
        { s: 'Windows 8', r: /(Windows 8|Windows NT 6.2)/ },
        { s: 'Windows 7', r: /(Windows 7|Windows NT 6.1)/ },
        { s: 'Windows Vista', r: /Windows NT 6.0/ },
        { s: 'Windows Server 2003', r: /Windows NT 5.2/ },
        { s: 'Windows XP', r: /(Windows NT 5.1|Windows XP)/ },
        { s: 'Windows 2000', r: /(Windows NT 5.0|Windows 2000)/ },
        { s: 'Windows ME', r: /(Win 9x 4.90|Windows ME)/ },
        { s: 'Windows 98', r: /(Windows 98|Win98)/ },
        { s: 'Windows 95', r: /(Windows 95|Win95|Windows_95)/ },
        { s: 'Windows NT 4.0', r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/ },
        { s: 'Windows CE', r: /Windows CE/ },
        { s: 'Windows 3.11', r: /Win16/ },
        { s: 'Android', r: /Android/ },
        { s: 'Open BSD', r: /OpenBSD/ },
        { s: 'Sun OS', r: /SunOS/ },
        { s: 'Chrome OS', r: /CrOS/ },
        { s: 'Linux', r: /(Linux|X11(?!.*CrOS))/ },
        { s: 'iOS', r: /(iPhone|iPad|iPod)/ },
        { s: 'Mac OS X', r: /Mac OS X/ },
        { s: 'Mac OS', r: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ },
        { s: 'QNX', r: /QNX/ },
        { s: 'UNIX', r: /UNIX/ },
        { s: 'BeOS', r: /BeOS/ },
        { s: 'OS/2', r: /OS\/2/ },
        { s: 'Search Bot', r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\/Teoma|ia_archiver)/ }
    ];
    for (let id in clientStrings) {
        let cs = clientStrings[id];
        if (cs.r.test(nAgt)) {
            os = cs.s;
            break;
        }
    }
    let osVersion;
    if (/Windows/.test(os)) {
        osVersion = /Windows (.*)/.exec(os)[1];
        os = 'Windows';
    }
    switch (os) {
        case 'Mac OS X':
            const parts = /Mac OS X ([\.\_\d]+)/.exec(nAgt);
            osVersion = parts ? parts[1] : 'unknown';
            break;
        case 'Android':
            osVersion = /Android ([\.\_\d]+)/.exec(nAgt)[1];
            break;
        case 'iOS':
            osVersion = /OS (\d+)_(\d+)_?(\d+)?/.exec(nVer);
            osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0);
            break;
    }
    return {
        name: os,
        version: osVersion
    };
}
exports.getOSVersion = getOSVersion;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/Logger/FgLogger.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/Logger/FgLogger.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FgLogger = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const FgNavTypes_1 = __webpack_require__(/*! ../../FgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavTypes.js");
let FgLogger = class FgLogger {
    constructor(logging) {
        this.logging = logging;
    }
    log(message, data) {
        if (this.logging) {
            console.log(message, data);
        }
    }
};
FgLogger = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(FgNavTypes_1.FgNavTypes.FGNAV_LOGGING)),
    __metadata("design:paramtypes", [Boolean])
], FgLogger);
exports.FgLogger = FgLogger;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/QueueService/QueueService.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/QueueService/QueueService.js ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.QueueService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const FgNavTypes_1 = __webpack_require__(/*! ../../FgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavTypes.js");
const utils_1 = __webpack_require__(/*! ../../libs/utils */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/libs/utils.js");
const FgLogger_1 = __webpack_require__(/*! ../Logger/FgLogger */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/Logger/FgLogger.js");
let QueueService = class QueueService {
    constructor(logger) {
        this.logger = logger;
        this.queue = [];
    }
    add(groupId, params, handler) {
        const id = utils_1.generateUIID();
        const task = {
            id,
            groupId,
            handler,
            params,
        };
        this.queue.push(task);
    }
    process(groupId) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.queue.find((item) => item.groupId === groupId && item.processing)) {
                return;
            }
            const task = this.queue.find((item) => item.groupId === groupId);
            if (!task) {
                return;
            }
            task.processing = true;
            // this.logger.log('SafeCheckModule: processing queue event', task);
            try {
                yield task.handler(task.params);
            }
            catch (e) {
                this.logger.log(e);
            }
            const removeIndex = this.queue.findIndex((item) => item.id === task.id);
            this.queue.splice(removeIndex, 1);
            setTimeout(() => {
                this.process(groupId);
            });
        });
    }
};
QueueService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(FgNavTypes_1.FgNavTypes.FGNAV_LOGGER)),
    __metadata("design:paramtypes", [FgLogger_1.FgLogger])
], QueueService);
exports.QueueService = QueueService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/StateService/StateService.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/StateService/StateService.js ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StateService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const WebEvent_1 = __webpack_require__(/*! ../../models/WebEvent */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/models/WebEvent.js");
const FgNavTypes_1 = __webpack_require__(/*! ../../FgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavTypes.js");
const FgLogger_1 = __webpack_require__(/*! ../Logger/FgLogger */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/Logger/FgLogger.js");
let StateService = class StateService {
    constructor(enabled, logger) {
        this.enabled = enabled;
        this.logger = logger;
        this.webEvents = [];
    }
    enable() {
        return __awaiter(this, void 0, void 0, function* () {
            this.enabled = true;
        });
    }
    disable() {
        return __awaiter(this, void 0, void 0, function* () {
            this.enabled = false;
        });
    }
    isEnabled() {
        return this.enabled;
    }
    getWebEvent(tabId, url) {
        return this.webEvents.find((event) => event.tabId === tabId && event.url === url);
    }
    addWebEvent(tabId, url) {
        if (this.getWebEvent(tabId, url)) {
            this.logger.log(`FgNavStateService: tab ${tabId} already exist, reusing`);
            //          throw new FgNavException('Can\'t add tab state, already exist');
        }
        const webEvent = new WebEvent_1.WebEvent();
        webEvent.setTabId(tabId);
        webEvent.setUrl(url);
        this.webEvents.push(webEvent);
        return webEvent;
    }
    removeWebEvent(tabId, url) {
        const ind = this.webEvents.findIndex((event) => event.tabId === tabId && event.url === url);
        this.webEvents.splice(ind, 1);
    }
};
StateService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(FgNavTypes_1.FgNavTypes.FGNAV_ENABLED)),
    __param(1, inversify_1.inject(FgNavTypes_1.FgNavTypes.FGNAV_LOGGER)),
    __metadata("design:paramtypes", [Boolean, FgLogger_1.FgLogger])
], StateService);
exports.StateService = StateService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/TabEventsProcessService/TabEventsProcessService.js":
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/TabEventsProcessService/TabEventsProcessService.js ***!
  \******************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TabEventsProcessService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const StateService_1 = __webpack_require__(/*! ../StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/StateService/StateService.js");
const DataService_1 = __webpack_require__(/*! ../DataService/DataService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/DataService/DataService.js");
const QueueService_1 = __webpack_require__(/*! ../QueueService/QueueService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/QueueService/QueueService.js");
const FgNavTypes_1 = __webpack_require__(/*! ../../FgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavTypes.js");
const TabEventsProcessServiceInterface_1 = __webpack_require__(/*! ./TabEventsProcessServiceInterface */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/TabEventsProcessService/TabEventsProcessServiceInterface.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/ */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const FgNavEvents_1 = __webpack_require__(/*! ../../FgNavEvents */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/FgNavEvents.js");
const TabStateTypes_1 = __webpack_require__(/*! ../../../../modules/tabstate-module/TabStateTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateTypes.js");
const TabStateService_1 = __webpack_require__(/*! ../../../../modules/tabstate-module/services/TabStateService/TabStateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/services/TabStateService/TabStateService.js");
const WebEventInterface_1 = __webpack_require__(/*! ../../models/WebEventInterface */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/models/WebEventInterface.js");
const TabStateLogger_1 = __webpack_require__(/*! ../../../tabstate-module/services/Logger/TabStateLogger */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/services/Logger/TabStateLogger.js");
const utils_1 = __webpack_require__(/*! ../../libs/utils */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/libs/utils.js");
let TabEventsProcessService = class TabEventsProcessService {
    constructor(internalDispatcher, queueService, fgStateService, fgDataService, tabStateService, logger) {
        this.internalDispatcher = internalDispatcher;
        this.queueService = queueService;
        this.fgStateService = fgStateService;
        this.fgDataService = fgDataService;
        this.tabStateService = tabStateService;
        this.logger = logger;
    }
    process(eventParams) {
        const tabId = eventParams.tabId;
        switch (eventParams.type) {
            case TabEventsProcessServiceInterface_1.TAB_EVENT_TYPE.LOADING:
                this.queueService.add(tabId, eventParams, () => __awaiter(this, void 0, void 0, function* () {
                    yield this.processTabLoadingEvent(eventParams);
                }));
                break;
            case TabEventsProcessServiceInterface_1.TAB_EVENT_TYPE.COMPLETE:
                this.queueService.add(tabId, eventParams, () => __awaiter(this, void 0, void 0, function* () {
                    yield this.processTabCompleteEvent(eventParams);
                }));
                break;
        }
        this.queueService.process(eventParams.tabId);
    }
    processTabLoadingEvent(eventParams) {
        return __awaiter(this, void 0, void 0, function* () {
            const { tabId, url } = eventParams;
            const webEvent = this.fgStateService.addWebEvent(tabId, url);
            webEvent.setUrl(url); // @todo need it?
            this.emitNavStartedEvent(webEvent);
        });
    }
    processTabCompleteEvent(eventParams) {
        return __awaiter(this, void 0, void 0, function* () {
            const { tabId, url, tabState } = eventParams;
            let webEvent = this.fgStateService.getWebEvent(tabId, url);
            if (tabState.navigationMethod === WebEventInterface_1.NavigationMethod.URL_REWRITE && !tabState.isBrowserServiceUrl) {
                yield this.processTabLoadingEvent(eventParams);
                webEvent = this.fgStateService.getWebEvent(tabId, url);
            }
            if (!tabState || tabState.isBrowserServiceUrl || !webEvent) {
                this.logger.log('So we can`t handle this complete event');
                return;
            }
            webEvent.setNavigationData({
                frameId: 0,
                parentFrameId: -1,
                method: tabState.navigationMethod,
                sequence: tabState.navigationSequence,
            });
            webEvent.setSystemData(yield this.fgDataService.getSystemData());
            webEvent.setPanalyticsData(yield this.fgDataService.getPanalyticsData());
            try {
                if (tabState.navigationMethod === WebEventInterface_1.NavigationMethod.URL_REWRITE) {
                    yield utils_1.delay(1100);
                }
                const tabDocumentData = yield this.fgDataService.getTabDocumentData(tabId);
                webEvent.setDocumentData(tabDocumentData);
                webEvent.hasData = true;
            }
            catch (err) {
                // blank page?
            }
            webEvent.setNavigationData({
                sourceTabId: tabState.sourceTabId,
            });
            const copiedEvent = this.copyEvent(webEvent);
            this.fgStateService.removeWebEvent(tabId, url);
            this.emitNavCommitedEvent(copiedEvent);
        });
    }
    copyEvent(event) {
        return JSON.parse(JSON.stringify(event));
    }
    emitNavStartedEvent(webEvent) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.internalDispatcher.emit(new src_1.MarioEvent(FgNavEvents_1.FgNavEvents.NAVIGATION_STARTED, webEvent));
        });
    }
    emitNavCommitedEvent(webEvent) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.internalDispatcher.emit(new src_1.MarioEvent(FgNavEvents_1.FgNavEvents.NAVIGATION_COMMITED, webEvent));
        });
    }
};
TabEventsProcessService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __param(1, inversify_1.inject(FgNavTypes_1.FgNavTypes.FGNAV_QUEUE_SERVICE)),
    __param(2, inversify_1.inject(FgNavTypes_1.FgNavTypes.FGNAV_STATE_SERVICE)),
    __param(3, inversify_1.inject(FgNavTypes_1.FgNavTypes.FGNAV_DATA_SERVICE)),
    __param(4, inversify_1.inject(TabStateTypes_1.TabStateTypes.TAB_STATE_SERVICE)),
    __param(5, inversify_1.inject(TabStateTypes_1.TabStateTypes.LOGGER)),
    __metadata("design:paramtypes", [Object, QueueService_1.QueueService,
        StateService_1.StateService,
        DataService_1.DataService,
        TabStateService_1.TabStateService,
        TabStateLogger_1.TabStateLogger])
], TabEventsProcessService);
exports.TabEventsProcessService = TabEventsProcessService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/TabEventsProcessService/TabEventsProcessServiceInterface.js":
/*!***************************************************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/foreground-navigation/services/TabEventsProcessService/TabEventsProcessServiceInterface.js ***!
  \***************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.TAB_EVENT_TYPE = void 0;
var TAB_EVENT_TYPE;
(function (TAB_EVENT_TYPE) {
    TAB_EVENT_TYPE["ACTIVATE"] = "ACTIVATE";
    TAB_EVENT_TYPE["LOADING"] = "LOADING";
    TAB_EVENT_TYPE["COMPLETE"] = "COMPLETE";
})(TAB_EVENT_TYPE = exports.TAB_EVENT_TYPE || (exports.TAB_EVENT_TYPE = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateEvents.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateEvents.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.TabStateEvents = void 0;
var TabStateEvents;
(function (TabStateEvents) {
    TabStateEvents["GET_NAVIGATION_METHOD_RESPONSE"] = "GET_NAVIGATION_METHOD_RESPONSE";
    TabStateEvents["TAB_STATE_LOADING"] = "TAB_STATE__LOADING";
    TabStateEvents["TAB_STATE_COMPLETED"] = "TAB_STATE__COMPLETED";
    TabStateEvents["TAB_STATE__GET_NAVIGATION_METHOD"] = "TAB_STATE__GET_NAVIGATION_METHOD";
})(TabStateEvents = exports.TabStateEvents || (exports.TabStateEvents = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateModule.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateModule.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TabStateModule = void 0;
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const WebRequestService_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/WebRequest/Bg/WebRequestService.js");
const TabService_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabService */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabService.js");
const TabStateTypes_1 = __webpack_require__(/*! ./TabStateTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateTypes.js");
const TabCreated_1 = __webpack_require__(/*! ./listeners/internal/tabs/TabCreated */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/listeners/internal/tabs/TabCreated.js");
const TabRemoved_1 = __webpack_require__(/*! ./listeners/internal/tabs/TabRemoved */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/listeners/internal/tabs/TabRemoved.js");
const TabUpdated_1 = __webpack_require__(/*! ./listeners/internal/tabs/TabUpdated */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/listeners/internal/tabs/TabUpdated.js");
const TabStateService_1 = __webpack_require__(/*! ./services/TabStateService/TabStateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/services/TabStateService/TabStateService.js");
const GetNavigationMethodResponseListener_1 = __webpack_require__(/*! ./listeners/external/GetNavigationMethodResponseListener */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/listeners/external/GetNavigationMethodResponseListener.js");
const TabStateLogger_1 = __webpack_require__(/*! ./services/Logger/TabStateLogger */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/services/Logger/TabStateLogger.js");
class TabStateModule extends src_1.MarioModule {
    name() {
        return 'TabStateModule';
    }
    static use(mario, options) {
        return mario.registerModule(TabStateModule, options);
    }
    register(options) {
        return __awaiter(this, void 0, void 0, function* () {
            this.mario().container().bind(TabStateTypes_1.TabStateTypes.PARAM_LOGGING).toConstantValue(options.logging);
            this.mario().registerService(TabStateTypes_1.TabStateTypes.LOGGER, TabStateLogger_1.TabStateLogger);
            this.mario().registerService(src_1.MARIO_TYPES.WEB_REQUEST_SERVICE, WebRequestService_1.WebRequestService);
            this.mario().registerService(src_1.MARIO_TYPES.TAB_SERVICE, TabService_1.TabService);
            this.mario().registerService(TabStateTypes_1.TabStateTypes.TAB_STATE_SERVICE, TabStateService_1.TabStateService);
            this.mario().getService(src_1.MARIO_TYPES.TAB_SERVICE).listenOnCreated();
            this.mario().getService(src_1.MARIO_TYPES.TAB_SERVICE).listenOnUpdated();
            this.mario().getService(src_1.MARIO_TYPES.TAB_SERVICE).listenOnRemoved();
            const listenerParams = { urls: ['<all_urls>'] };
            this.mario().getService(src_1.MARIO_TYPES.WEB_REQUEST_SERVICE).listenOnBeforeRequest(listenerParams);
            this.mario().getService(src_1.MARIO_TYPES.WEB_REQUEST_SERVICE).listenOnBeforeRedirect(listenerParams, ['responseHeaders']);
            this.mario().internalDispatcher().on(TabCreated_1.TabCreated);
            this.mario().internalDispatcher().on(TabUpdated_1.TabUpdated);
            this.mario().internalDispatcher().on(TabRemoved_1.TabRemoved);
            this.mario().externalDispatcher().on(GetNavigationMethodResponseListener_1.GetNavigationMethodResponseListener);
        });
    }
}
exports.TabStateModule = TabStateModule;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateTypes.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateTypes.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.TabStateTypes = void 0;
exports.TabStateTypes = {
    LOGGER: Symbol.for('TAB_STATE_LOGGER'),
    PARAM_LOGGING: Symbol.for('TAB_STATE_PARAM_LOGGING'),
    TAB_STATE_SERVICE: Symbol.for('TAB_STATE_SERVICE'),
};


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/config/blankPage.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/config/blankPage.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.blankPage = void 0;
exports.blankPage = {
    'CHROME_BROWSER': 'chrome://newtab/',
    'FIREFOX_BROWSER': 'about:blank',
    'EDGE_BROWSER': 'edge://newtab/'
};


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/config/whiteListProtocols.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/config/whiteListProtocols.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.whiteListProtocols = void 0;
exports.whiteListProtocols = [
    'chrome:',
    'chrome-search:',
    'chrome-devtools',
    'about:',
    'edge:'
];


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/interfaces/TabStateInterface.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/interfaces/TabStateInterface.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NavigationMethod = void 0;
var NavigationMethod;
(function (NavigationMethod) {
    NavigationMethod["REQUEST"] = "request";
    NavigationMethod["URL_REWRITE"] = "url_rewrite";
})(NavigationMethod = exports.NavigationMethod || (exports.NavigationMethod = {}));


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/libs/utils.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/libs/utils.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.delay = exports.generateUIID = exports.isSameOrigin = exports.isSameDomain = exports.getDomain = exports.getBrowserBlankPageUrl = exports.isBlankPage = exports.isWhiteListUrl = exports.notConcurrent = exports.valueToPromise = void 0;
const whiteListProtocols_1 = __webpack_require__(/*! ../config/whiteListProtocols */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/config/whiteListProtocols.js");
const blankPage_1 = __webpack_require__(/*! ../config/blankPage */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/config/blankPage.js");
function valueToPromise(value) {
    return new Promise(resolve => {
        resolve(value);
    });
}
exports.valueToPromise = valueToPromise;
function notConcurrent(proc) {
    let inFlight = false;
    return () => {
        if (!inFlight) {
            inFlight = (() => __awaiter(this, void 0, void 0, function* () {
                try {
                    return yield proc();
                }
                finally {
                    inFlight = false;
                }
            }))();
        }
        return inFlight;
    };
}
exports.notConcurrent = notConcurrent;
;
function isWhiteListUrl(url) {
    if (url === '') {
        return true;
    }
    const { protocol } = new URL(url);
    return whiteListProtocols_1.whiteListProtocols.includes(protocol);
}
exports.isWhiteListUrl = isWhiteListUrl;
function isBlankPage(url) {
    return url === getBrowserBlankPageUrl();
}
exports.isBlankPage = isBlankPage;
function getBrowserBlankPageUrl() {
    const defaultUrl = 'about:blank';
    return blankPage_1.blankPage["CHROME_BROWSER"] || defaultUrl;
}
exports.getBrowserBlankPageUrl = getBrowserBlankPageUrl;
function getDomain(url) {
    try {
        const { host } = new URL(url);
        return host;
    }
    catch (err) {
        return url;
    }
}
exports.getDomain = getDomain;
function isSameDomain(url1, url2) {
    if (!url1 || !url2) {
        return;
    }
    return getDomain(url1) === getDomain(url2);
}
exports.isSameDomain = isSameDomain;
function isSameOrigin(url1, url2) {
    return new URL(url1).origin === new URL(url2).origin;
}
exports.isSameOrigin = isSameOrigin;
function generateUIID() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);
        return v.toString(16);
    });
}
exports.generateUIID = generateUIID;
function delay(ms) {
    return __awaiter(this, void 0, void 0, function* () {
        return new Promise(resolve => setTimeout(resolve, ms));
    });
}
exports.delay = delay;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/listeners/external/GetNavigationMethodResponseListener.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/listeners/external/GetNavigationMethodResponseListener.js ***!
  \**********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetNavigationMethodResponseListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const TabStateTypes_1 = __webpack_require__(/*! ../../TabStateTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateTypes.js");
const TabStateService_1 = __webpack_require__(/*! ../../services/TabStateService/TabStateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/services/TabStateService/TabStateService.js");
const TabStateEvents_1 = __webpack_require__(/*! ../../TabStateEvents */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateEvents.js");
let GetNavigationMethodResponseListener = class GetNavigationMethodResponseListener {
    constructor(stateService) {
        this.stateService = stateService;
    }
    on() {
        return TabStateEvents_1.TabStateEvents.GET_NAVIGATION_METHOD_RESPONSE;
    }
    handle(event, sender, sendResponse) {
        return __awaiter(this, void 0, void 0, function* () {
            if (sender.tab) {
                this.stateService.onGetNavigationMethodResponse(sender.tab, event.data);
            }
        });
    }
};
GetNavigationMethodResponseListener = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(TabStateTypes_1.TabStateTypes.TAB_STATE_SERVICE)),
    __metadata("design:paramtypes", [TabStateService_1.TabStateService])
], GetNavigationMethodResponseListener);
exports.GetNavigationMethodResponseListener = GetNavigationMethodResponseListener;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/listeners/internal/tabs/TabCreated.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/listeners/internal/tabs/TabCreated.js ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TabCreated = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const TabServiceEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabServiceEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabServiceEvents.js");
const TabStateService_1 = __webpack_require__(/*! ../../../services/TabStateService/TabStateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/services/TabStateService/TabStateService.js");
const TabStateTypes_1 = __webpack_require__(/*! ../../../TabStateTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateTypes.js");
let TabCreated = class TabCreated {
    constructor(stateService) {
        this.stateService = stateService;
    }
    on() {
        return TabServiceEvents_1.TabServiceEvents.ON_TAB_CREATED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            this.stateService.onTabCreated(event.data);
        });
    }
};
TabCreated = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(TabStateTypes_1.TabStateTypes.TAB_STATE_SERVICE)),
    __metadata("design:paramtypes", [TabStateService_1.TabStateService])
], TabCreated);
exports.TabCreated = TabCreated;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/listeners/internal/tabs/TabRemoved.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/listeners/internal/tabs/TabRemoved.js ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TabRemoved = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const TabStateService_1 = __webpack_require__(/*! ../../../services/TabStateService/TabStateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/services/TabStateService/TabStateService.js");
const TabStateTypes_1 = __webpack_require__(/*! ../../../TabStateTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateTypes.js");
const TabServiceEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabServiceEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabServiceEvents.js");
let TabRemoved = class TabRemoved {
    constructor(stateService) {
        this.stateService = stateService;
    }
    on() {
        return TabServiceEvents_1.TabServiceEvents.ON_TAB_REMOVED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            this.stateService.onTabRemoved(event.data);
        });
    }
};
TabRemoved = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(TabStateTypes_1.TabStateTypes.TAB_STATE_SERVICE)),
    __metadata("design:paramtypes", [TabStateService_1.TabStateService])
], TabRemoved);
exports.TabRemoved = TabRemoved;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/listeners/internal/tabs/TabUpdated.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/listeners/internal/tabs/TabUpdated.js ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TabUpdated = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const TabStateTypes_1 = __webpack_require__(/*! ../../../TabStateTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateTypes.js");
const TabServiceEvents_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabServiceEvents */ "./node_modules/@urbandevs/mario-core/dist/src/Packages/Tab/Bg/TabServiceEvents.js");
const TabStateService_1 = __webpack_require__(/*! ../../../services/TabStateService/TabStateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/services/TabStateService/TabStateService.js");
let TabUpdated = class TabUpdated {
    constructor(stateService, dispatcher) {
        this.stateService = stateService;
        this.dispatcher = dispatcher;
    }
    on() {
        return TabServiceEvents_1.TabServiceEvents.ON_TAB_UPDATED;
    }
    handle(event) {
        return __awaiter(this, void 0, void 0, function* () {
            this.stateService.onTabUpdated(event.data);
        });
    }
};
TabUpdated = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(TabStateTypes_1.TabStateTypes.TAB_STATE_SERVICE)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.EXTERNAL_DISPATCHER)),
    __metadata("design:paramtypes", [TabStateService_1.TabStateService, Object])
], TabUpdated);
exports.TabUpdated = TabUpdated;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/models/Tab.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/models/Tab.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tab = void 0;
const guid_typescript_1 = __webpack_require__(/*! guid-typescript */ "./node_modules/guid-typescript/dist/guid.js");
const TabStateInterface_1 = __webpack_require__(/*! ../interfaces/TabStateInterface */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/interfaces/TabStateInterface.js");
class Tab {
    constructor() {
        this.navigationSequence = 0;
        // time to wait after browser's tab update event occured and emit out event
        this.urlRewriteWaitDelay = 500;
    }
    setTabId(tabId) {
        this.tabId = tabId;
    }
    setUrl(url) {
        this.prevUrl = this.url;
        this.url = url;
    }
    setSourceTabId(id) {
        this.sourceTabId = id;
    }
    setLastUpdated(timestamp) {
        this.lastUpdated = timestamp;
    }
    setLastStatus(status) {
        this.lastStatus = status;
    }
    setNavigationMethod(method) {
        this.navigationMethod = method;
        this.ifNeedResolveNavigationMethod();
    }
    incNavigationSequence() {
        this.navigationSequence++;
    }
    getNavigationSequence() {
        return this.navigationSequence;
    }
    getNavigationMethod() {
        return this.navigationMethod;
    }
    getSourceTabId() {
        return this.sourceTabId;
    }
    getData() {
        return this;
    }
    resetSession() {
        this.sessionId = guid_typescript_1.Guid.create().toString();
        this.navigationMethod = null;
    }
    resetNavigationMethod() {
        this.navigationMethod = null;
    }
    initNavigationMethod() {
        return __awaiter(this, void 0, void 0, function* () {
            this.ifNeedResolveNavigationMethod();
            if (this.navigationMethod) {
                return Promise.resolve();
            }
            return new Promise((resolve) => {
                this.resolver = resolve;
                this.timerId = setTimeout(() => {
                    this.navigationMethod = TabStateInterface_1.NavigationMethod.REQUEST;
                    resolve();
                }, this.urlRewriteWaitDelay);
            });
        });
    }
    toJSON() {
        return this.toDTO();
    }
    toDTO() {
        return {
            tabId: this.tabId,
            url: this.url,
            prevUrl: this.prevUrl,
            navigationMethod: this.navigationMethod,
            navigationSequence: this.navigationSequence,
            isBrowserServiceUrl: this.isBrowserServiceUrl,
            sourceTabId: this.sourceTabId,
            sessionId: this.sessionId,
            lastUpdated: this.lastUpdated,
            lastStatus: this.lastStatus,
        };
    }
    ifNeedResolveNavigationMethod() {
        if (this.resolver) {
            clearTimeout(this.timerId);
            this.timerId = null;
            this.resolver();
            this.resolver = null;
        }
    }
}
exports.Tab = Tab;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/services/Logger/TabStateLogger.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/services/Logger/TabStateLogger.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TabStateLogger = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const TabStateTypes_1 = __webpack_require__(/*! ../../TabStateTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateTypes.js");
let TabStateLogger = class TabStateLogger {
    constructor(logging) {
        this.logging = logging;
    }
    log(message, data) {
        if (this.logging) {
            console.log(message, data);
        }
    }
};
TabStateLogger = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(TabStateTypes_1.TabStateTypes.PARAM_LOGGING)),
    __metadata("design:paramtypes", [Boolean])
], TabStateLogger);
exports.TabStateLogger = TabStateLogger;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/services/TabStateService/TabStateService.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/services/TabStateService/TabStateService.js ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TabStateService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/ */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const Tab_1 = __webpack_require__(/*! ../../models/Tab */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/models/Tab.js");
const TabStateInterface_1 = __webpack_require__(/*! ../../interfaces/TabStateInterface */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/interfaces/TabStateInterface.js");
const utils_1 = __webpack_require__(/*! ../../libs/utils */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/libs/utils.js");
const TabStateEvents_1 = __webpack_require__(/*! ../../TabStateEvents */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateEvents.js");
const TabStateLogger_1 = __webpack_require__(/*! ../Logger/TabStateLogger */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/services/Logger/TabStateLogger.js");
const TabStateTypes_1 = __webpack_require__(/*! ../../TabStateTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/tabstate-module/TabStateTypes.js");
const helpers_1 = __webpack_require__(/*! ../../../background-navigation/services/DataService/helpers */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/DataService/helpers.js");
let TabStateService = class TabStateService {
    constructor(internalDispatcher, externalDispatcher, logger) {
        this.internalDispatcher = internalDispatcher;
        this.externalDispatcher = externalDispatcher;
        this.logger = logger;
        this.tabs = [];
        // ingore tab updates with the same url earlier than <sameUrlUpdateThreshold> milliseconds
        // used for skipping duplicates
        this.sameUrlUpdateThreshold = 500;
        this.resetOpenerTabIdForNewNavigation = false;
    }
    onTabCreated(tabEventData) {
        const { tab } = tabEventData;
        const { id, openerTabId, url, pendingUrl } = tab;
        const tabState = this.addTabState(id);
        // reset sourceTabId for the blank page
        const sourceTabId = utils_1.isBlankPage(pendingUrl) ? undefined : openerTabId;
        tabState.setUrl(url);
        tabState.setSourceTabId(sourceTabId);
        this.logger.log(`TabStateService: tab create event, tabId: ${id}, url: "${url}", openedTabId: ${sourceTabId}`);
    }
    onTabUpdated(tabEventData) {
        const { tab, changeInfo } = tabEventData;
        if (!changeInfo.status) {
            return;
        }
        else if (changeInfo.status === 'loading' && !changeInfo.hasOwnProperty('url')) {
            // status is loading but url is not changed
            return;
        }
        if (changeInfo.hasOwnProperty('url')) {
            this.emitGetNavMethodEvent(tab.id);
        }
        const { id, url } = tab;
        const { status } = changeInfo;
        this.logger.log(`TabStateService: tab update event (${changeInfo.status}), tabId: ${id}, url: ${url}`);
        const tabState = this.getTabStateOrCreate(id, url);
        if (!this.isStateChanged(tabState, url, status)) {
            return;
        }
        tabState.setUrl(url);
        tabState.isBrowserServiceUrl = utils_1.isWhiteListUrl(url) || utils_1.isBlankPage(url);
        if (status === 'loading') {
            // @todo why do we need reset session?
            // need investigate more
            tabState.resetSession();
            this.logger.log(`TabStateService: url change/reload detected, tabId: ${id}, url: ${url}`);
            if (!tabState.isBrowserServiceUrl) {
                tabState.incNavigationSequence();
                this.logger.log(`TabStateService: tab navigation sequence incremented, tabId: ${tabState.tabId}, value: ${tabState.navigationSequence}`);
            }
            this.emitLoadingEvent(tabState);
        }
        tabState.setLastStatus(status);
        tabState.setLastUpdated(Date.now());
        if (status === 'complete') {
            this.emitCompleteEvent(tabState);
            // clear openerTabId for new navigation
            if (this.resetOpenerTabIdForNewNavigation) {
                tabState.setSourceTabId(undefined);
            }
        }
    }
    onGetNavigationMethodResponse(tabEventData, data) {
        const { id, url } = tabEventData;
        const tabState = this.getTabState(id);
        this.logger.log(`TabStateService: get nav method response, tabId: ${id}, url: ${url}`, data);
        const method = data.urlRewrite ? TabStateInterface_1.NavigationMethod.URL_REWRITE : TabStateInterface_1.NavigationMethod.REQUEST;
        tabState.setNavigationMethod(method);
    }
    onTabRemoved(tabEventData) {
        const { tabId } = tabEventData;
        this.removeTabState(tabId);
        this.logger.log(`TabStateService: tab remove event, tabId: ${tabId}`);
    }
    getTabState(tabId) {
        return this.tabs.find((item) => item.tabId === tabId);
    }
    getTabStateOrCreate(tabId, url) {
        let tabState = this.getTabState(tabId);
        if (!tabState) {
            this.logger.log(`TabStateService: adding tab, tabId: ${tabId}, url: ${url}`);
            tabState = this.addTabState(tabId);
        }
        return tabState;
    }
    addTabState(tabId) {
        this.logger.log(`TabStateService: addTabState, tabId: ${tabId}`);
        const tabState = new Tab_1.Tab();
        tabState.setTabId(tabId);
        tabState.resetSession();
        this.tabs.push(tabState);
        return tabState;
    }
    removeTabState(tabId) {
        const ind = this.tabs.findIndex((item) => item.tabId === tabId);
        if (ind !== -1) {
            this.tabs.splice(ind, 1);
        }
    }
    isStateChanged(tabState, url, status) {
        return tabState.url !== url ||
            (Date.now() - tabState.lastUpdated > this.sameUrlUpdateThreshold) ||
            tabState.lastStatus !== status;
    }
    emitGetNavMethodEvent(tabId) {
        return __awaiter(this, void 0, void 0, function* () {
            this.logger.log(`TabStateService: emit get nav method`);
            const event = new src_1.MarioEvent(TabStateEvents_1.TabStateEvents.TAB_STATE__GET_NAVIGATION_METHOD);
            this.externalDispatcher.emit(tabId, event);
        });
    }
    emitLoadingEvent(tabState) {
        const dto = tabState.toDTO();
        this.logger.log('TabStateService: emitting tabState event: loading', dto);
        this.logger.log('***************************loading******************************', dto);
        this.internalDispatcher.emit(new src_1.MarioEvent(TabStateEvents_1.TabStateEvents.TAB_STATE_LOADING, dto));
    }
    emitCompleteEvent(tabState) {
        return __awaiter(this, void 0, void 0, function* () {
            if (tabState.isBrowserServiceUrl) {
                return;
            }
            yield tabState.initNavigationMethod();
            if (tabState.getNavigationMethod() === TabStateInterface_1.NavigationMethod.URL_REWRITE) {
                /**
                 * Firefox does not fire loading event for url_rewrite requests
                 * so we should emulate it manually
                 */
                if ((yield this.getBrowserData()).name.trim() === 'Firefox') {
                    tabState.incNavigationSequence();
                    yield this.emitLoadingEvent(tabState);
                }
            }
            const dto = tabState.toDTO();
            tabState.resetNavigationMethod();
            this.logger.log('TabStateService: emitting tabState event: completed', dto);
            this.internalDispatcher.emit(new src_1.MarioEvent(TabStateEvents_1.TabStateEvents.TAB_STATE_COMPLETED, dto));
        });
    }
    getBrowserData() {
        return __awaiter(this, void 0, void 0, function* () {
            return helpers_1.getBrowserVersion();
        });
    }
};
TabStateService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.EXTERNAL_DISPATCHER)),
    __param(2, inversify_1.inject(TabStateTypes_1.TabStateTypes.LOGGER)),
    __metadata("design:paramtypes", [Object, Object, TabStateLogger_1.TabStateLogger])
], TabStateService);
exports.TabStateService = TabStateService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/CheckSafeService/CheckSafeService.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/services/CheckSafeService/CheckSafeService.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckSafeService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! ../../UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const RequestService_1 = __webpack_require__(/*! ../RequestService/RequestService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/RequestService/RequestService.js");
const SensitiveDataFilterService_1 = __webpack_require__(/*! @urbandevs/mario-sensitive-data-filter/dist/services/SensitiveDataFilterService */ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/services/SensitiveDataFilterService.js");
const SensitiveDataFilterTypes_1 = __webpack_require__(/*! @urbandevs/mario-sensitive-data-filter/dist/SensitiveDataFilterTypes */ "./node_modules/@urbandevs/mario-sensitive-data-filter/dist/SensitiveDataFilterTypes.js");
const CheckSafeException_1 = __webpack_require__(/*! ../../exceptions/CheckSafeException */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/exceptions/CheckSafeException.js");
const lz_string_1 = __webpack_require__(/*! ../../libs/lz-string */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/libs/lz-string.js");
const utils_1 = __webpack_require__(/*! ../../libs/utils */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/libs/utils.js");
const WebEventInterface_1 = __webpack_require__(/*! ../../modules/background-navigation/models/WebEventInterface */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/models/WebEventInterface.js");
const js_base64_1 = __webpack_require__(/*! js-base64 */ "./node_modules/js-base64/base64.mjs");
const UscLogger_1 = __webpack_require__(/*! ../Logger/UscLogger */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/Logger/UscLogger.js");
const checkSafeGenericUrl = '/api/rest/v2/secure/urls/checkSafety';
const checkSafeBasicUrl = '/api/rest/v2/secure/urls/checkSafety/basic';
let CheckSafeService = class CheckSafeService {
    constructor(requestService, apiUrl, logger, sensitiveDataService, compressRequest) {
        this.requestService = requestService;
        this.apiUrl = apiUrl;
        this.logger = logger;
        this.sensitiveDataService = sensitiveDataService;
        this.compressRequest = compressRequest;
    }
    checkTabUrlSafety(tab, mode) {
        return __awaiter(this, void 0, void 0, function* () {
            const sendNavigationData = tab.fgNavData.hasData && mode !== UrlsSafeCheckTypes_1.MODE.NO_NAVIGATION;
            const url = sendNavigationData ? checkSafeGenericUrl : checkSafeBasicUrl;
            const requestData = sendNavigationData ? this.serializeGenericRequest(tab, mode) : this.serializeBasicRequest(tab);
            const requestOptions = {
                method: RequestService_1.RequestMethods.POST,
                contentType: RequestService_1.ContentTypes.JSON,
            };
            if (!this.isValidData(requestData, sendNavigationData)) {
                throw new CheckSafeException_1.CheckSafeException('Incorrect safe check request: ' + JSON.stringify(requestData));
            }
            this.logger.log('Check safe state request', requestData);
            let data = requestData;
            if (this.compressRequest) {
                data = this.processRequestCompress(requestData);
                requestOptions.contentType = RequestService_1.ContentTypes.OCTET_STREAM;
            }
            let status;
            try {
                const response = yield this.requestService.fetchRequest(this.apiUrl + url, data, requestOptions);
                status = response.safe ? UrlsSafeCheckTypes_1.STATUS.SAFE : UrlsSafeCheckTypes_1.STATUS.UNSAFE;
            }
            catch (err) {
                throw new CheckSafeException_1.CheckSafeException('Error checking url safety');
            }
            return status;
        });
    }
    serializeBasicRequest(tab) {
        return {
            url: {
                value: this.sensitiveDataService.transformUrl(tab.url),
                encoded: false,
            },
        };
    }
    serializeGenericRequest(tab, mode) {
        const fgNavData = tab.fgNavData;
        const navigation = fgNavData.navigationData;
        const document = fgNavData.documentData;
        const panalyticsData = fgNavData.panalyticsData;
        const system = fgNavData.systemData;
        const bgNavData = mode === UrlsSafeCheckTypes_1.MODE.FULL_NAVIGATION ? this.serializeBgNavData(tab.bgNavData) : [];
        const payload = {
            url: {
                value: this.sensitiveDataService.transformUrl(tab.url),
                encoded: false,
            },
            timestamp: Date.now().toString(),
            pageAttributes: {
                title: this.sensitiveDataService.transformTitle(fgNavData.domain, document.title),
                name: this.sensitiveDataService.transformTitle(fgNavData.domain, document.windowName),
            },
            contextAttributes: {
                referrer: this.sensitiveDataService.transformUrl(document.referrer),
            },
            method: navigation.method,
            tab: {
                id: tab.id,
                initiatorId: navigation.sourceTabId,
            },
            frame: {
                id: navigation.frameId,
                parentId: navigation.parentFrameId,
            },
            os: {
                name: system.name,
                version: system.version,
            },
            mainFrame: {
                navigationSequence: navigation.sequence || 1,
            },
            type: 'INTERNAL_BROWSER_EXTENSION',
            partition: 'fg',
            nested: bgNavData,
        };
        payload[js_base64_1.decode('cGFuZWxpc3REZWY=')] = {
            [js_base64_1.decode('cGFuZWxpc3RJZA==')]: panalyticsData.panalyticsId,
            [js_base64_1.decode('cGFuZWxJZA==')]: panalyticsData.pinstanceId,
            partnerId: panalyticsData.partnerId,
            distributorId: panalyticsData.distributorId,
        };
        return payload;
    }
    serializeBgNavData(data) {
        return data.map(event => {
            const urlDomain = utils_1.getDomain(event.url);
            const result = {
                url: {
                    value: this.sensitiveDataService.transformUrl(event.url),
                    encoded: false,
                },
                timestamp: event.timeStamp,
                pageAttributes: {
                    title: this.sensitiveDataService.transformTitle(urlDomain, event.pageDocumentTitle),
                    name: this.sensitiveDataService.transformTitle(urlDomain, event.pageWindowName),
                },
                contextAttributes: {
                    referrer: this.sensitiveDataService.transformUrl(event.pageDocumentReferrer),
                },
                method: event.navigationMethod,
                tab: {
                    id: event.tabId,
                    initiatorId: event.sourceTabId,
                },
                frame: {
                    id: event.frameId,
                    parentId: event.parentFrameId,
                },
                os: {
                    name: event.requestOs,
                    version: event.requestOsVersion,
                },
                server: {
                    api: event.serverIp,
                },
                mainFrame: {
                    navigationSequence: event.navigationSequence || 1,
                },
                browser: {
                    name: event.requestBrowser,
                    version: event.requestBrowserVersion,
                },
                request: {
                    headers: event.requestHeaders,
                    method: event.requestMethod,
                    userAgent: event.requestUserAgent,
                    acceptLanguage: event.requestAcceptLanguage,
                },
                response: {
                    headers: event.responseHeaders,
                    isFromCache: event.responseIsFromCache,
                    error: event.responseError,
                    redirectUrl: event.responseRedirectUrl,
                },
                eventDef: {
                    id: event.eventId,
                    type: event.eventType,
                    subType: event.eventSubType,
                },
                partition: 'bg',
                type: 'INTERNAL_BROWSER_EXTENSION',
            };
            if (event.eventSubType === 'main_frame') {
                //              result.pageAttributes.dom = event.pageDomData;
            }
            else {
                //              result.mainFrameRequestEventId = event.mainFrameRequestEventId;
            }
            if (event.navigationMethod === WebEventInterface_1.NavigationMethod.REQUEST) {
                result.response.statusCode = event.responseStatusCode;
                result.response.statusLine = event.responseStatusLine;
            }
            result[js_base64_1.decode('cGFuZWxpc3REZWY=')] = {
                [js_base64_1.decode('cGFuZWxpc3RJZA==')]: event.panalyticsId,
                [js_base64_1.decode('cGFuZWxJZA==')]: event.pinstanceId,
                partnerId: event.partnerId,
                distributorId: event.distributorId,
            };
            return result;
        });
    }
    isValidData(data, sendNavigationData) {
        if (!data.url.value) {
            return false;
        }
        if (sendNavigationData) {
            return data.method && data.tab.id && data.type;
        }
        return true;
    }
    processRequestCompress(data) {
        return lz_string_1.default.compressToUTF16(JSON.stringify(data));
    }
};
CheckSafeService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_REQUEST_SERVICE)),
    __param(1, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_ENDPOINT_DOMAIN)),
    __param(2, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_LOGGER)),
    __param(3, inversify_1.inject(SensitiveDataFilterTypes_1.SensitiveDataFilterTypes.SDF_SERVICE)),
    __param(4, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_COMPRESS_REQUEST)),
    __metadata("design:paramtypes", [RequestService_1.RequestService, String, UscLogger_1.UscLogger,
        SensitiveDataFilterService_1.SensitiveDataFilterService, Boolean])
], CheckSafeService);
exports.CheckSafeService = CheckSafeService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/LibStateService/LibStateService.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/services/LibStateService/LibStateService.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LibStateService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const UrlsSafeCheckEvents_1 = __webpack_require__(/*! ../../UrlsSafeCheckEvents */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckEvents.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! ../../UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const StateService_1 = __webpack_require__(/*! ../StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js");
const BgNavTypes_1 = __webpack_require__(/*! ../../modules/background-navigation/BgNavTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/BgNavTypes.js");
const StateService_2 = __webpack_require__(/*! ../../modules/background-navigation/services/StateService/StateService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/modules/background-navigation/services/StateService/StateService.js");
const StateDataService_1 = __webpack_require__(/*! ../StateDataService/StateDataService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateDataService/StateDataService.js");
let LibStateService = class LibStateService {
    constructor(bgStateService, dispatcher, usfStateService, mode, stateDataService) {
        this.bgStateService = bgStateService;
        this.dispatcher = dispatcher;
        this.usfStateService = usfStateService;
        this.mode = mode;
        this.stateDataService = stateDataService;
    }
    restoreState() {
        return __awaiter(this, void 0, void 0, function* () {
            if (yield this.stateDataService.getEnabledState()) {
                yield this.usfStateService.enable();
                if (this.mode === UrlsSafeCheckTypes_1.MODE.FULL_NAVIGATION) {
                    this.bgStateService.enable();
                }
            }
            else {
                yield this.usfStateService.disable();
                this.bgStateService.disable();
            }
            if (yield this.stateDataService.getNotificationEnabledState()) {
                yield this.usfStateService.enableNotification();
            }
            else {
                yield this.usfStateService.disableNotification();
            }
        });
    }
    enable() {
        return __awaiter(this, void 0, void 0, function* () {
            const event = new src_1.MarioEvent(UrlsSafeCheckEvents_1.UrlsSafeCheckEvents.ENABLE_LIB);
            return this.dispatcher.emit(event);
        });
    }
    disable() {
        return __awaiter(this, void 0, void 0, function* () {
            const event = new src_1.MarioEvent(UrlsSafeCheckEvents_1.UrlsSafeCheckEvents.DISABLE_LIB);
            return this.dispatcher.emit(event);
        });
    }
};
LibStateService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(BgNavTypes_1.BgNavTypes.STATE_SERVICE)),
    __param(1, inversify_1.inject(src_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __param(2, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_SERVICE)),
    __param(3, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_MODE)),
    __param(4, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_DATA_SERVICE)),
    __metadata("design:paramtypes", [StateService_2.StateService, Object, StateService_1.StateService, String, StateDataService_1.StateDataService])
], LibStateService);
exports.LibStateService = LibStateService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/Logger/UscLogger.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/services/Logger/UscLogger.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UscLogger = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! ../../UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
let UscLogger = class UscLogger {
    constructor(logging) {
        this.logging = logging;
    }
    log(message, data) {
        if (this.logging) {
            console.log(message, data);
        }
    }
};
UscLogger = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_LOGGING)),
    __metadata("design:paramtypes", [String])
], UscLogger);
exports.UscLogger = UscLogger;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/RequestService/RequestService.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/services/RequestService/RequestService.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestService = exports.ContentTypes = exports.RequestMethods = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var RequestMethods;
(function (RequestMethods) {
    RequestMethods["GET"] = "GET";
    RequestMethods["POST"] = "POST";
})(RequestMethods = exports.RequestMethods || (exports.RequestMethods = {}));
var ContentTypes;
(function (ContentTypes) {
    ContentTypes["JSON"] = "application/json;charset=utf-8";
    ContentTypes["OCTET_STREAM"] = "application/octet-stream";
})(ContentTypes = exports.ContentTypes || (exports.ContentTypes = {}));
let RequestService = class RequestService {
    fetchRequest(url, data, options) {
        return __awaiter(this, void 0, void 0, function* () {
            const method = options.method || RequestMethods.GET;
            const contentType = options.contentType || ContentTypes.JSON;
            const headers = {
                'Content-type': contentType,
            };
            const body = contentType === ContentTypes.JSON ? JSON.stringify(data) : data;
            const response = yield fetch(url, {
                method,
                headers,
                body,
            });
            if (response.status !== 200) {
                throw response;
            }
            return response.json();
        });
    }
};
RequestService = __decorate([
    inversify_1.injectable()
], RequestService);
exports.RequestService = RequestService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateDataService/StateDataService.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateDataService/StateDataService.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StateDataService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const utils_1 = __webpack_require__(/*! ../../libs/utils */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/libs/utils.js");
const maxItemsCount = 1000;
const domainsStorageKey = 'SAFESEARCH_STATE_DATA';
const enabledStorageKey = 'SAFESEARCH_ENABLED';
const notificationEnabledStorageKey = 'SAFESEARCH_NOTIFICATION_ENABLED';
let StateDataService = class StateDataService {
    constructor(storageService) {
        this.storageService = storageService;
    }
    setEnabledState(enabled) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.storageService.set(enabledStorageKey, enabled ? '1' : '0');
        });
    }
    getEnabledState() {
        return __awaiter(this, void 0, void 0, function* () {
            return (yield this.storageService.get(enabledStorageKey)) === '1';
        });
    }
    setNotificationEnabledState(enabled) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.storageService.set(notificationEnabledStorageKey, enabled ? '1' : '0');
        });
    }
    getNotificationEnabledState() {
        return __awaiter(this, void 0, void 0, function* () {
            return (yield this.storageService.get(notificationEnabledStorageKey)) === '1';
        });
    }
    getDomainPersistedData(url) {
        return __awaiter(this, void 0, void 0, function* () {
            const domain = utils_1.getDomain(url);
            const list = yield this.getList();
            return list.find(item => item.domain === domain);
        });
    }
    setDomainPersistedValue(url, field, value) {
        return __awaiter(this, void 0, void 0, function* () {
            const domain = utils_1.getDomain(url);
            const list = yield this.getList();
            const item = list.find(item => item.domain === domain);
            if (item) {
                item[field] = value;
            }
            else {
                list.push({
                    domain,
                    [field]: value
                });
            }
            yield this.saveList(list);
        });
    }
    getList() {
        return __awaiter(this, void 0, void 0, function* () {
            const data = yield this.storageService.get(domainsStorageKey);
            return data ? JSON.parse(data) : [];
        });
    }
    saveList(items = []) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(items);
            return yield this.storageService.set(domainsStorageKey, data);
        });
    }
};
StateDataService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(src_1.MARIO_TYPES.STORAGE_SERVICE)),
    __metadata("design:paramtypes", [Object])
], StateDataService);
exports.StateDataService = StateDataService;


/***/ }),

/***/ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateService/StateService.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StateService = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const TabState_1 = __webpack_require__(/*! ../../models/TabState */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/models/TabState.js");
const src_1 = __webpack_require__(/*! @urbandevs/mario-core/dist/src/ */ "./node_modules/@urbandevs/mario-core/dist/src/index.js");
const UrlsSafeCheckTypes_1 = __webpack_require__(/*! ../../UrlsSafeCheckTypes */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckTypes.js");
const CheckSafeService_1 = __webpack_require__(/*! ../CheckSafeService/CheckSafeService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/CheckSafeService/CheckSafeService.js");
const StateDataService_1 = __webpack_require__(/*! ../StateDataService/StateDataService */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/StateDataService/StateDataService.js");
const UrlsSafeCheckEvents_1 = __webpack_require__(/*! ../../UrlsSafeCheckEvents */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/UrlsSafeCheckEvents.js");
const utils_1 = __webpack_require__(/*! ../../libs/utils */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/libs/utils.js");
const UscLogger_1 = __webpack_require__(/*! ../Logger/UscLogger */ "./node_modules/@urbandevs/mario-urls-safe-check/dist/services/Logger/UscLogger.js");
let StateService = class StateService {
    constructor(checkSafeService, stateDataService, internalDispatcher, externalDispatcher, tabService, enabled, logging, logger, trackLoadingState, mode) {
        this.checkSafeService = checkSafeService;
        this.stateDataService = stateDataService;
        this.internalDispatcher = internalDispatcher;
        this.externalDispatcher = externalDispatcher;
        this.tabService = tabService;
        this.enabled = enabled;
        this.logging = logging;
        this.logger = logger;
        this.trackLoadingState = trackLoadingState;
        this.mode = mode;
        this.tabsState = [];
        this.bgNavItems = [];
        this.notificationEnabled = true;
    }
    enable() {
        return __awaiter(this, void 0, void 0, function* () {
            this.enabled = true;
            yield this.stateDataService.setEnabledState(this.enabled);
        });
    }
    disable() {
        return __awaiter(this, void 0, void 0, function* () {
            this.enabled = false;
            yield this.stateDataService.setEnabledState(this.enabled);
        });
    }
    isEnabled() {
        return this.enabled;
    }
    setMode(mode) {
        this.mode = mode;
    }
    getMode() {
        return this.mode;
    }
    enableNotification() {
        return __awaiter(this, void 0, void 0, function* () {
            this.notificationEnabled = true;
            yield this.stateDataService.setNotificationEnabledState(this.notificationEnabled);
        });
    }
    disableNotification() {
        return __awaiter(this, void 0, void 0, function* () {
            this.notificationEnabled = false;
            yield this.stateDataService.setNotificationEnabledState(this.notificationEnabled);
        });
    }
    isEnabledNotification() {
        return this.notificationEnabled;
    }
    getTabState(tabId) {
        return this.tabsState.find((tab) => tab.id === tabId);
    }
    getActiveTabState() {
        return __awaiter(this, void 0, void 0, function* () {
            const activeTabQuery = yield this.tabService.query({ active: true, currentWindow: true });
            const activeTab = !chrome.runtime.lastError && activeTabQuery[0];
            if (!activeTab) {
                return;
            }
            return this.getOrAddTabState(activeTab.id, activeTab.url);
        });
    }
    removeTabState(tabId) {
        const ind = this.tabsState.findIndex(tab => tab.id === tabId);
        this.tabsState.splice(ind, 1);
    }
    onFgNavStarted(event) {
        return __awaiter(this, void 0, void 0, function* () {
            if (utils_1.isBlankPage(event.url)) {
                return;
            }
            const tabState = yield this.getOrAddTabState(event.tabId, event.url);
            tabState.setUrl(event.url);
            tabState.setLoadingState(true);
            tabState.setCheckedState(false);
            if (this.trackLoadingState) {
                tabState.setStatus(UrlsSafeCheckTypes_1.STATUS.UNKNOWN);
                setTimeout(() => {
                    this.sendSafetyNotificationStatus(tabState);
                });
            }
            if (utils_1.isWhiteListUrl(event.url)) {
                this.updateTabSafetyStatus(tabState);
            }
        });
    }
    onFgNavCommited(event) {
        return __awaiter(this, void 0, void 0, function* () {
            if (utils_1.isBlankPage(event.url)) {
                return;
            }
            const tabState = this.getTabState(event.tabId);
            tabState.setLoadingState(false);
            tabState.setLastUrl(tabState.url);
            tabState.setFgNavData(event);
            if (event.hasData) {
                this.applyBgData(event);
            }
            this.fixBgNavMainFramePageAttrs(tabState);
            this.updateTabSafetyStatus(tabState);
            tabState.clearFgNavData();
            tabState.clearBgNavData();
        });
    }
    onBgNavStarted(event) {
        return __awaiter(this, void 0, void 0, function* () {
        });
    }
    onBgNavCommited(event) {
        return __awaiter(this, void 0, void 0, function* () {
            if (event.eventType === 'resource') {
                this.logger.log(`[USC] StateService: Ignore a BgNav event because it's a resource`);
                return;
            }
            if (event.eventSubType === 'main_frame' && !event.responseRedirectUrl) {
                this.logger.log(`[USC] StateService: ignore a BgNav event  because it's main_frame`);
                return;
            }
            const tabState = this.getTabState(event.tabId);
            if (!tabState || !tabState.hasFgNavData()) {
                this.logger.log(`[USC] StateService: BgNav postponed request: ${event.url}`);
            }
            this.bgNavItems.push(event);
        });
    }
    updateTabSafetyStatusByTabId(tabId) {
        const tabState = this.getTabState(tabId);
        this.updateTabSafetyStatus(tabState);
    }
    updateTabSafetyStatus(tabState) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.enabled) {
                return;
            }
            const isBrowserServiceUrl = utils_1.isWhiteListUrl(tabState.url) || utils_1.isBlankPage(tabState.url);
            if (!tabState) {
                return;
            }
            if (tabState.checked) {
                this.sendSafetyNotificationStatus(tabState);
                return;
            }
            if (tabState._loading) {
                tabState.setStatus(UrlsSafeCheckTypes_1.STATUS.UNKNOWN);
                this.sendSafetyNotificationStatus(tabState);
                return;
            }
            if (isBrowserServiceUrl) {
                tabState.setStatus(UrlsSafeCheckTypes_1.STATUS.SAFE);
                this.sendSafetyNotificationStatus(tabState);
                return;
            }
            this.logger.log('');
            this.logger.log(`Senging FgNav request for: ${tabState.url}`);
            this.logger.log('BgNav entities:');
            tabState.bgNavData.forEach((v) => {
                this.logger.log(` - ${v.url}${v.responseRedirectUrl ? ' [redirect]' : ''}`);
            });
            this.logger.log('--------------------------------------------------------------------------------------');
            const copiedTabState = this.copyTabState(tabState);
            setTimeout(() => __awaiter(this, void 0, void 0, function* () {
                const status = yield this.fetchTabSafetyStatus(copiedTabState);
                tabState.setCheckedState(true);
                tabState.setStatus(status);
                this.sendSafetyNotificationStatus(tabState);
            }));
        });
    }
    getTabSafetyStatus(tabId) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {
                const tabState = this.getTabState(tabId);
                const status = tabState.checked ? tabState.status : yield this.fetchTabSafetyStatus(tabState);
                resolve(status);
            }));
        });
    }
    sendSafetyNotificationStatus(tab) {
        if (!this.notificationEnabled) {
            return;
        }
        const data = {
            tabId: tab.id,
            url: tab.url,
            status: tab.status,
            notificationMuted: tab.notificationMuted,
        };
        this.externalDispatcher.emit(tab.id, new src_1.MarioEvent(UrlsSafeCheckEvents_1.UrlsSafeCheckEvents.SAFE_STATUS_UPDATED, data));
        this.internalDispatcher.emit(new src_1.MarioEvent(UrlsSafeCheckEvents_1.UrlsSafeCheckEvents.SAFE_STATUS_UPDATED, data));
    }
    muteTabNofitication(tabId, persist) {
        const tab = this.getTabState(tabId);
        tab.notificationMuted = true;
        if (persist) {
            this.stateDataService.setDomainPersistedValue(tab.url, 'notificationMuted', true);
        }
    }
    getOrAddTabState(tabId, url) {
        return __awaiter(this, void 0, void 0, function* () {
            let state = this.getTabState(tabId);
            if (!state) {
                state = new TabState_1.TabState();
                state.setUrl(url);
                this.tabsState.push(state);
            }
            const domainPersistedData = yield this.stateDataService.getDomainPersistedData(url);
            const notificationMuted = !!domainPersistedData && domainPersistedData.notificationMuted;
            state.setId(tabId);
            state.setNotificationMute(notificationMuted);
            return state;
        });
    }
    fetchTabSafetyStatus(tabState) {
        return __awaiter(this, void 0, void 0, function* () {
            let status;
            if (utils_1.isWhiteListUrl(tabState.url)) {
                return utils_1.valueToPromise(UrlsSafeCheckTypes_1.STATUS.SAFE);
            }
            try {
                status = yield this.checkSafeService.checkTabUrlSafety(tabState, this.mode);
            }
            catch (err) {
                status = UrlsSafeCheckTypes_1.STATUS.UNKNOWN;
            }
            return status;
        });
    }
    applyBgData(event) {
        const tabState = this.getTabState(event.tabId);
        this.bgNavItems.forEach((v) => tabState.addBgNavData(v));
        this.bgNavItems = [];
    }
    fixBgNavMainFramePageAttrs(state) {
        state.bgNavData.forEach((bgEvent) => {
            if (bgEvent.eventSubType === 'main_frame') {
                bgEvent.pageDocumentTitle = '';
                bgEvent.pageDocumentReferrer = '';
                bgEvent.pageWindowName = '';
            }
        });
    }
    copyTabState(tabState) {
        return JSON.parse(JSON.stringify(tabState));
    }
};
StateService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_CHECK_SERVICE)),
    __param(1, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_STATE_DATA_SERVICE)),
    __param(2, inversify_1.inject(src_1.MARIO_TYPES.INTERNAL_DISPATCHER)),
    __param(3, inversify_1.inject(src_1.MARIO_TYPES.EXTERNAL_DISPATCHER)),
    __param(4, inversify_1.inject(src_1.MARIO_TYPES.TAB_SERVICE)),
    __param(5, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_ENABLED)),
    __param(6, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_LOGGING)),
    __param(7, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_LOGGER)),
    __param(8, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_TRACK_LOADING_STATE)),
    __param(9, inversify_1.inject(UrlsSafeCheckTypes_1.UrlsSafeCheckTypes.USC_MODE)),
    __metadata("design:paramtypes", [CheckSafeService_1.CheckSafeService,
        StateDataService_1.StateDataService, Object, Object, Object, Boolean, String, UscLogger_1.UscLogger, Boolean, String])
], StateService);
exports.StateService = StateService;


/***/ }),

/***/ "./node_modules/@urbandevs/panalytics-utility/dist/panalytics-utility.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@urbandevs/panalytics-utility/dist/panalytics-utility.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
class PanalyticsUtility {
    constructor(config = {}) {
        this.storageSyncKey = 'panalyticsid';
        this.userKeyCacheHeader = 'X-PANEL-USER-KEY';
        this.userKeySymbolsCount = 22;
        if (typeof config.host !== 'string') {
            throw 'Server host is undefined';
        }
        if (config.storageKey) {
            this.storageSyncKey = config.storageKey;
        }
        this.host = config.host;
        this.logging = !!config.logging;
        this.cacheResourceUrl = this.host + '/api/identity/cache';
        this.cookieResourceUrl = this.host + '/api/identity/cookie';
    }
    generateKey() {
        let result = '';
        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        const charactersLength = characters.length;
        for (let i = 0; i < this.userKeySymbolsCount; i++) {
            result += characters.charAt(Math.floor(Math.random() * charactersLength));
        }
        this.log('key generated locally: ' + result);
        return result;
    }
    setKey(value) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.globalSetter(value);
        });
    }
    synchronize() {
        return __awaiter(this, void 0, void 0, function* () {
            const key = yield this.loadKey();
            yield this.globalSetter(key);
        });
    }
    loadKey() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {
                let key;
                if (!key) {
                    key = yield this.cacheGetter();
                }
                if (!key) {
                    key = yield this.cookieGetter();
                }
                if (!key) {
                    key = this.localStorageGetter();
                }
                resolve(key);
            }));
        });
    }
    getKey(callback, sync) {
        this.getKeyAsync(sync).then(callback);
    }
    getKeyAsync(sync = true) {
        return __awaiter(this, void 0, void 0, function* () {
            const key = (yield this.loadKey()) || this.generateKey();
            if (sync) {
                yield this.setKey(key);
            }
            return key;
        });
    }
    localStorageGetter() {
        this.log('localStorageGetter: try to get ' + this.storageSyncKey + ' from localStorage.');
        const key = localStorage.getItem(this.storageSyncKey);
        if (key) {
            this.log('localStorageGetter: ' + this.storageSyncKey + ' has been found in localStorage. Value: ' + key);
        }
        else {
            this.log('localStorageGetter: ' + this.storageSyncKey + ' has not been found in localStorage.');
        }
        return key;
    }
    localStorageSetter(value) {
        this.log('localStorageSetter: ' + this.storageSyncKey + ' are going to be stored in localStorage.');
        localStorage.setItem(this.storageSyncKey, value);
    }
    cacheGetter() {
        return __awaiter(this, void 0, void 0, function* () {
            this.log('CacheGetter: try to get ' + this.storageSyncKey + ' from cache.');
            const _this = this;
            return new Promise((resolve) => {
                const xhr = new XMLHttpRequest();
                xhr.open('GET', this.cacheResourceUrl);
                xhr.timeout = 1000;
                xhr.ontimeout = function () {
                    _this.log('CacheGetter: Caching request is timed out.');
                    resolve();
                };
                xhr.onload = function () {
                    if (xhr.status === 200) {
                        try {
                            const responseValue = JSON.parse(xhr.response);
                            const key = responseValue.userKey;
                            if (key) {
                                _this.log('CacheGetter: ' + _this.storageSyncKey + ' has been found in cache. Value: ' + key);
                                resolve(key);
                            }
                            else {
                                resolve();
                            }
                        }
                        catch (e) {
                            _this.log('CacheGetter: Error occurred while retrieving ' + _this.storageSyncKey + ' from cache.');
                            resolve();
                        }
                    }
                    else {
                        _this.log('CacheGetter: Caching request has been failed.');
                        resolve();
                    }
                };
                xhr.onerror = function () {
                    resolve();
                };
                xhr.send();
            });
        });
    }
    cacheSetter(value) {
        this.log('CacheSetter: ' + this.storageSyncKey + ' are going to be stored in cache.');
        const _this = this;
        return new Promise((resolve) => {
            const xhr = new XMLHttpRequest();
            xhr.open('GET', this.cacheResourceUrl);
            xhr.setRequestHeader(this.userKeyCacheHeader, value);
            xhr.setRequestHeader('Cache-Control', 'no-cache');
            xhr.responseType = 'json';
            xhr.send();
            xhr.onload = function () {
                if (xhr.status === 200) {
                    _this.log('CacheSetter: Caching request to server has been succeeded.');
                    resolve(value);
                }
                else {
                    _this.log('CacheSetter: Caching request has been failed.');
                    resolve();
                }
            };
            xhr.onerror = function () {
                resolve();
            };
        });
    }
    cookieGetter() {
        return __awaiter(this, void 0, void 0, function* () {
            this.log('CookieGetter: try to get ' + this.storageSyncKey + ' from cookie.');
            const _this = this;
            return new Promise((resolve) => {
                const xhr = new XMLHttpRequest();
                xhr.withCredentials = true;
                xhr.open("GET", this.cookieResourceUrl);
                xhr.timeout = 5000;
                xhr.ontimeout = function () {
                    _this.log('CookieGetter: Request is timed out.');
                    resolve();
                };
                xhr.onload = function () {
                    let key;
                    if (xhr.status === 200) {
                        try {
                            const responseValue = JSON.parse(xhr.response);
                            key = responseValue.userKey;
                            if (key) {
                                _this.log('CookieGetter: ' + _this.storageSyncKey + ' has been found in cookie. Value:' + key);
                                resolve(key);
                            }
                            else {
                                _this.log('CookieGetter: ' + _this.storageSyncKey + ' has not been found in cookie. ');
                                resolve();
                            }
                        }
                        catch (e) {
                            _this.log('CookieGetter: Error occurred while retrieving ' + _this.storageSyncKey + ' from cookie.');
                            resolve();
                        }
                    }
                    else {
                        _this.log('CookieGetter: Cookie request has been failed.');
                        resolve();
                    }
                };
                xhr.onerror = function () {
                    resolve();
                };
                xhr.send();
            });
        });
    }
    cookieSetter(value) {
        this.log('CookieSetter: ' + this.storageSyncKey + ' are going to be stored in cookie.');
        const _this = this;
        return new Promise((resolve) => {
            const xhr = new XMLHttpRequest();
            xhr.withCredentials = true;
            xhr.open('POST', this.cookieResourceUrl + '?userKey=' + value);
            xhr.send();
            xhr.onload = function () {
                if (xhr.status === 200) {
                    _this.log('CookieSetter: cookie request has been succeeded.');
                    resolve(value);
                }
                else {
                    _this.log('CookieSetter: cookie request has been failed.');
                    resolve();
                }
            };
            xhr.onerror = function () {
                resolve();
            };
        });
    }
    cookieClear() {
        return __awaiter(this, void 0, void 0, function* () {
            this.log('CookieClearer: ' + this.storageSyncKey + ' are going to be deleted.');
            const _this = this;
            return new Promise((resolve) => {
                const xhr = new XMLHttpRequest();
                xhr.withCredentials = true;
                xhr.open('DELETE', this.cookieResourceUrl);
                xhr.send();
                xhr.onload = function () {
                    if (xhr.status === 200) {
                        _this.log('CookieClearer: cookie request has been succeeded.');
                        resolve();
                    }
                    else {
                        _this.log('CookieClearer: cookie request has been failed.');
                        resolve();
                    }
                };
                xhr.onerror = function () {
                    resolve();
                };
            });
        });
    }
    globalSetter(value) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!value) {
                this.log('Value provided to global setter is invalid.');
                return;
            }
            this.localStorageSetter(value);
            yield this.cacheSetter(value);
            yield this.cookieClear();
            yield this.cookieSetter(value);
        });
    }
    log(text) {
        if (this.logging) {
            console.log(text);
        }
    }
}
exports.default = PanalyticsUtility;


/***/ }),

/***/ "./node_modules/@urbandevs/panelist-utility/dist/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@urbandevs/panelist-utility/dist/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const panelist_utility_1 = __webpack_require__(/*! ./panelist-utility */ "./node_modules/@urbandevs/panelist-utility/dist/panelist-utility.js");
exports.default = panelist_utility_1.default;


/***/ }),

/***/ "./node_modules/@urbandevs/panelist-utility/dist/panelist-utility.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@urbandevs/panelist-utility/dist/panelist-utility.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
class PanelistUtility {
    constructor(config = {}) {
        this.storageSyncKey = 'panellistid';
        this.userKeyCacheHeader = 'X-PANEL-USER-KEY';
        this.userKeySymbolsCount = 22;
        if (typeof config.host !== 'string') {
            throw 'Server host is undefined';
        }
        this.host = config.host;
        this.logging = !!config.logging;
        this.cacheResourceUrl = this.host + '/api/identity/cache';
        this.cookieResourceUrl = this.host + '/api/identity/cookie';
    }
    generateKey() {
        let result = '';
        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        const charactersLength = characters.length;
        for (let i = 0; i < this.userKeySymbolsCount; i++) {
            result += characters.charAt(Math.floor(Math.random() * charactersLength));
        }
        this.log('key generated locally: ' + result);
        return result;
    }
    setKey(value) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.globalSetter(value);
        });
    }
    synchronize() {
        return __awaiter(this, void 0, void 0, function* () {
            const key = yield this.loadKey();
            yield this.globalSetter(key);
        });
    }
    loadKey() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {
                let key;
                if (!key) {
                    key = yield this.cacheGetter();
                }
                if (!key) {
                    key = yield this.cookieGetter();
                }
                if (!key) {
                    key = this.localStorageGetter();
                }
                resolve(key);
            }));
        });
    }
    getKey(callback, sync) {
        this.getKeyAsync(sync).then(callback);
    }
    getKeyAsync(sync = true) {
        return __awaiter(this, void 0, void 0, function* () {
            const key = (yield this.loadKey()) || this.generateKey();
            if (sync) {
                yield this.setKey(key);
            }
            return key;
        });
    }
    localStorageGetter() {
        this.log('localStorageGetter: try to get ' + this.storageSyncKey + ' from localStorage.');
        const key = localStorage.getItem(this.storageSyncKey);
        if (key) {
            this.log('localStorageGetter: ' + this.storageSyncKey + ' has been found in localStorage. Value: ' + key);
        }
        else {
            this.log('localStorageGetter: ' + this.storageSyncKey + ' has not been found in localStorage.');
        }
        return key;
    }
    localStorageSetter(value) {
        this.log('localStorageSetter: ' + this.storageSyncKey + ' are going to be stored in localStorage.');
        localStorage.setItem(this.storageSyncKey, value);
    }
    cacheGetter() {
        return __awaiter(this, void 0, void 0, function* () {
            this.log('CacheGetter: try to get ' + this.storageSyncKey + ' from cache.');
            const _this = this;
            return new Promise(resolve => {
                const xhr = new XMLHttpRequest();
                xhr.open('GET', this.cacheResourceUrl);
                xhr.timeout = 1000;
                xhr.ontimeout = function () {
                    _this.log('CacheGetter: Caching request is timed out.');
                    resolve();
                };
                xhr.onload = function () {
                    if (xhr.status === 200) {
                        try {
                            const responseValue = JSON.parse(xhr.response);
                            const key = responseValue.userKey;
                            if (key) {
                                _this.log('CacheGetter: ' + _this.storageSyncKey + ' has been found in cache. Value: ' + key);
                                resolve(key);
                            }
                            else {
                                resolve();
                            }
                        }
                        catch (e) {
                            _this.log('CacheGetter: Error occurred while retrieving ' + _this.storageSyncKey + ' from cache.');
                            resolve();
                        }
                    }
                    else {
                        _this.log('CacheGetter: Caching request has been failed.');
                        resolve();
                    }
                };
                xhr.onerror = function () {
                    resolve();
                };
                xhr.send();
            });
        });
    }
    cacheSetter(value) {
        this.log('CacheSetter: ' + this.storageSyncKey + ' are going to be stored in cache.');
        const _this = this;
        return new Promise(resolve => {
            const xhr = new XMLHttpRequest();
            xhr.open('GET', this.cacheResourceUrl);
            xhr.setRequestHeader(this.userKeyCacheHeader, value);
            xhr.setRequestHeader('Cache-Control', 'no-cache');
            xhr.responseType = 'json';
            xhr.send();
            xhr.onload = function () {
                if (xhr.status === 200) {
                    _this.log('CacheSetter: Caching request to server has been succeeded.');
                    resolve(value);
                }
                else {
                    _this.log('CacheSetter: Caching request has been failed.');
                    resolve();
                }
            };
            xhr.onerror = function () {
                resolve();
            };
        });
    }
    cookieGetter() {
        return __awaiter(this, void 0, void 0, function* () {
            this.log('CookieGetter: try to get ' + this.storageSyncKey + ' from cookie.');
            const _this = this;
            return new Promise(resolve => {
                const xhr = new XMLHttpRequest();
                xhr.withCredentials = true;
                xhr.open("GET", this.cookieResourceUrl);
                xhr.timeout = 5000;
                xhr.ontimeout = function () {
                    _this.log('CookieGetter: Request is timed out.');
                    resolve();
                };
                xhr.onload = function () {
                    let key;
                    if (xhr.status === 200) {
                        try {
                            const responseValue = JSON.parse(xhr.response);
                            key = responseValue.userKey;
                            if (key) {
                                _this.log('CookieGetter: ' + _this.storageSyncKey + ' has been found in cookie. Value:' + key);
                                resolve(key);
                            }
                            else {
                                _this.log('CookieGetter: ' + _this.storageSyncKey + ' has not been found in cookie. ');
                                resolve();
                            }
                        }
                        catch (e) {
                            _this.log('CookieGetter: Error occurred while retrieving ' + _this.storageSyncKey + ' from cookie.');
                            resolve();
                        }
                    }
                    else {
                        _this.log('CookieGetter: Cookie request has been failed.');
                        resolve();
                    }
                };
                xhr.onerror = function () {
                    resolve();
                };
                xhr.send();
            });
        });
    }
    cookieSetter(value) {
        this.log('CookieSetter: ' + this.storageSyncKey + ' are going to be stored in cookie.');
        const _this = this;
        return new Promise(resolve => {
            const xhr = new XMLHttpRequest();
            xhr.withCredentials = true;
            xhr.open('POST', this.cookieResourceUrl + '?userKey=' + value);
            xhr.send();
            xhr.onload = function () {
                if (xhr.status === 200) {
                    _this.log('CookieSetter: cookie request has been succeeded.');
                    resolve(value);
                }
                else {
                    _this.log('CookieSetter: cookie request has been failed.');
                    resolve();
                }
            };
            xhr.onerror = function () {
                resolve();
            };
        });
    }
    cookieClear() {
        return __awaiter(this, void 0, void 0, function* () {
            this.log('CookieClearer: ' + this.storageSyncKey + ' are going to be deleted.');
            const _this = this;
            return new Promise(resolve => {
                const xhr = new XMLHttpRequest();
                xhr.withCredentials = true;
                xhr.open('DELETE', this.cookieResourceUrl);
                xhr.send();
                xhr.onload = function () {
                    if (xhr.status === 200) {
                        _this.log('CookieClearer: cookie request has been succeeded.');
                        resolve();
                    }
                    else {
                        _this.log('CookieClearer: cookie request has been failed.');
                        resolve();
                    }
                };
                xhr.onerror = function () {
                    resolve();
                };
            });
        });
    }
    globalSetter(value) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!value) {
                this.log('Value provided to global setter is invalid.');
                return;
            }
            this.localStorageSetter(value);
            yield this.cacheSetter(value);
            yield this.cookieClear();
            yield this.cookieSetter(value);
        });
    }
    log(text) {
        if (this.logging) {
            console.log(text);
        }
    }
}
exports.default = PanelistUtility;


/***/ }),

/***/ "./node_modules/@urbandevs/sensitive-data-filter/dist/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@urbandevs/sensitive-data-filter/dist/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const rulesListEndpoint = '/api/privacy/data/rules/exclusions';
const valueReplacePattern = '*****';
const logPrefix = 'SensitiveDataFilter:';
class SensitiveDataFilter {
    constructor(config) {
        if (typeof config.host !== 'string') {
            throw 'Server host is undefined';
        }
        this.host = config.host;
        this.logging = !!config.logging;
    }
    init() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.updateRules();
        });
    }
    transformUrl(value) {
        if (!value || !this.rules || !this.rules.filters) {
            return value;
        }
        const tempUrl = new URL(value);
        const domain = tempUrl.host;
        if (tempUrl.password.length) {
            tempUrl.password = valueReplacePattern;
        }
        if (tempUrl.username.length) {
            tempUrl.username = valueReplacePattern;
        }
        const urlRules = this.rules.filters;
        urlRules.forEach(item => {
            if (!domain.match(item.domain)) {
                return;
            }
            tempUrl.pathname = this.processFilterRules(item.rules, tempUrl.pathname);
            tempUrl.search = this.processFilterRules(item.rules, tempUrl.search);
            tempUrl.hash = this.processFilterRules(item.rules, tempUrl.hash);
        });
        const result = tempUrl.toString();
        if (this.logging) {
            this.log(`${logPrefix} Transformed url: ${value} -> ${result}`);
        }
        return result;
    }
    transformTitle(domain, value) {
        if (!value || !this.rules || !this.rules.titles) {
            return value;
        }
        const titleRules = this.rules.titles;
        let resultTitle = value;
        titleRules.forEach(item => {
            if (!domain.match(item.domain)) {
                return;
            }
            item.rules.forEach(rule => {
                if (rule.value) {
                    resultTitle = this.applyRegexp(rule.value, resultTitle, valueReplacePattern);
                }
            });
        });
        if (this.logging) {
            this.log(`${logPrefix} Transformed title: ${value} -> ${resultTitle}`);
        }
        return resultTitle;
    }
    updateRules() {
        return __awaiter(this, void 0, void 0, function* () {
            const rulesListUrl = this.host + rulesListEndpoint;
            try {
                const response = yield fetch(rulesListUrl, {
                    headers: {
                        'Content-type': 'application/json;charset=utf-8'
                    }
                });
                this.rules = (yield response.json());
            }
            catch (e) {
                throw new Error(e);
            }
        });
    }
    processFilterRules(rules, value) {
        let result = value;
        rules.forEach(rule => {
            if (rule.value && rule.type) {
                switch (rule.type) {
                    case 'parameter':
                        result = this.applyRegexp('([?&]' + rule.value + '=)([^&]+)', result, '$1' + valueReplacePattern);
                        break;
                    case 'path':
                        result = this.applyPathFilter(rule.value, result, valueReplacePattern);
                        break;
                    default:
                        if (this.logging) {
                            this.log(`${logPrefix} Unknown rule type: ${rule.type}`);
                        }
                }
            }
        });
        return result;
    }
    applyPathFilter(rule, value, newValue) {
        const regExp = new RegExp(rule, 'i');
        let replaceValue;
        const m = value.match(regExp);
        if (!m) {
            return value;
        }
        const [fullStr, matchStr] = m;
        replaceValue = newValue + matchStr + newValue;
        if (fullStr.indexOf(matchStr) === 0) {
            replaceValue = matchStr + newValue;
        }
        if (fullStr.indexOf(matchStr) === (fullStr.length - matchStr.length)) {
            replaceValue = newValue + matchStr;
        }
        return value.replace(fullStr, replaceValue);
    }
    applyRegexp(r, value, newValue) {
        const regExp = new RegExp(r, 'ig');
        return value.replace(regExp, newValue);
    }
    log(value) {
        console.log(value);
    }
}
exports.default = SensitiveDataFilter;


/***/ }),

/***/ "./node_modules/@urbandevs/urban-analytics/dist/urban-analytics.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@urbandevs/urban-analytics/dist/urban-analytics.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UrbanAnalytics = void 0;
class UrbanAnalytics {
    constructor(options) {
        this.api = options.api;
        this.appName = options.appName;
        this.clientVersion = options.clientVersion;
    }
    async track(event) {
        const payload = this.buildPayload(event);
        const endpoint = `${this.api}/analytics/event`;
        const requestOptions = {
            method: 'POST',
            cache: 'no-cache',
            headers: {
                'Content-Type': 'application/json',
            },
            credentials: 'include',
            body: JSON.stringify(payload)
        };
        await fetch(endpoint, requestOptions);
        return payload;
    }
    buildPayload(event) {
        const payload = {
            eventSource: this.appName,
            eventAction: event.action,
            clientVersion: this.clientVersion,
        };
        if ('packageId' in event) {
            payload.userPackageId = event.packageId;
        }
        if ('manual' in event) {
            payload.manualEvent = event.manual;
        }
        if ('details' in event) {
            payload.eventDetails = event.details;
        }
        return payload;
    }
}
exports.UrbanAnalytics = UrbanAnalytics;


/***/ }),

/***/ "./node_modules/guid-typescript/dist/guid.js":
/*!***************************************************!*\
  !*** ./node_modules/guid-typescript/dist/guid.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.__esModule = true;
var Guid = /** @class */ (function () {
    function Guid(guid) {
        if (!guid) {
            throw new TypeError("Invalid argument; `value` has no value.");
        }
        this.value = Guid.EMPTY;
        if (guid && Guid.isGuid(guid)) {
            this.value = guid;
        }
    }
    Guid.isGuid = function (guid) {
        var value = guid.toString();
        return guid && (guid instanceof Guid || Guid.validator.test(value));
    };
    Guid.create = function () {
        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join("-"));
    };
    Guid.createEmpty = function () {
        return new Guid("emptyguid");
    };
    Guid.parse = function (guid) {
        return new Guid(guid);
    };
    Guid.raw = function () {
        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join("-");
    };
    Guid.gen = function (count) {
        var out = "";
        for (var i = 0; i < count; i++) {
            // tslint:disable-next-line:no-bitwise
            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
        }
        return out;
    };
    Guid.prototype.equals = function (other) {
        // Comparing string `value` against provided `guid` will auto-call
        // toString on `guid` for comparison
        return Guid.isGuid(other) && this.value === other.toString();
    };
    Guid.prototype.isEmpty = function () {
        return this.value === Guid.EMPTY;
    };
    Guid.prototype.toString = function () {
        return this.value;
    };
    Guid.prototype.toJSON = function () {
        return {
            value: this.value
        };
    };
    Guid.validator = new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$", "i");
    Guid.EMPTY = "00000000-0000-0000-0000-000000000000";
    return Guid;
}());
exports.Guid = Guid;


/***/ }),

/***/ "./node_modules/inversify/lib/annotation/decorator_utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/decorator_utils.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.tagProperty = exports.tagParameter = exports.decorate = void 0;
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
function tagParameter(annotationTarget, propertyName, parameterIndex, metadata) {
    var metadataKey = METADATA_KEY.TAGGED;
    _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex);
}
exports.tagParameter = tagParameter;
function tagProperty(annotationTarget, propertyName, metadata) {
    var metadataKey = METADATA_KEY.TAGGED_PROP;
    _tagParameterOrProperty(metadataKey, annotationTarget.constructor, propertyName, metadata);
}
exports.tagProperty = tagProperty;
function _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex) {
    var paramsOrPropertiesMetadata = {};
    var isParameterDecorator = (typeof parameterIndex === "number");
    var key = (parameterIndex !== undefined && isParameterDecorator) ? parameterIndex.toString() : propertyName;
    if (isParameterDecorator && propertyName !== undefined) {
        throw new Error(ERROR_MSGS.INVALID_DECORATOR_OPERATION);
    }
    if (Reflect.hasOwnMetadata(metadataKey, annotationTarget)) {
        paramsOrPropertiesMetadata = Reflect.getMetadata(metadataKey, annotationTarget);
    }
    var paramOrPropertyMetadata = paramsOrPropertiesMetadata[key];
    if (!Array.isArray(paramOrPropertyMetadata)) {
        paramOrPropertyMetadata = [];
    }
    else {
        for (var _i = 0, paramOrPropertyMetadata_1 = paramOrPropertyMetadata; _i < paramOrPropertyMetadata_1.length; _i++) {
            var m = paramOrPropertyMetadata_1[_i];
            if (m.key === metadata.key) {
                throw new Error(ERROR_MSGS.DUPLICATED_METADATA + " " + m.key.toString());
            }
        }
    }
    paramOrPropertyMetadata.push(metadata);
    paramsOrPropertiesMetadata[key] = paramOrPropertyMetadata;
    Reflect.defineMetadata(metadataKey, paramsOrPropertiesMetadata, annotationTarget);
}
function _decorate(decorators, target) {
    Reflect.decorate(decorators, target);
}
function _param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); };
}
function decorate(decorator, target, parameterIndex) {
    if (typeof parameterIndex === "number") {
        _decorate([_param(parameterIndex, decorator)], target);
    }
    else if (typeof parameterIndex === "string") {
        Reflect.decorate([decorator], target, parameterIndex);
    }
    else {
        _decorate([decorator], target);
    }
}
exports.decorate = decorate;
//# sourceMappingURL=decorator_utils.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/annotation/inject.js":
/*!*********************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/inject.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.inject = exports.LazyServiceIdentifer = void 0;
var error_msgs_1 = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "./node_modules/inversify/lib/annotation/decorator_utils.js");
var LazyServiceIdentifer = (function () {
    function LazyServiceIdentifer(cb) {
        this._cb = cb;
    }
    LazyServiceIdentifer.prototype.unwrap = function () {
        return this._cb();
    };
    return LazyServiceIdentifer;
}());
exports.LazyServiceIdentifer = LazyServiceIdentifer;
function inject(serviceIdentifier) {
    return function (target, targetKey, index) {
        if (serviceIdentifier === undefined) {
            throw new Error(error_msgs_1.UNDEFINED_INJECT_ANNOTATION(target.name));
        }
        var metadata = new metadata_1.Metadata(METADATA_KEY.INJECT_TAG, serviceIdentifier);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.inject = inject;
//# sourceMappingURL=inject.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/annotation/injectable.js":
/*!*************************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/injectable.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.injectable = void 0;
var ERRORS_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
function injectable() {
    return function (target) {
        if (Reflect.hasOwnMetadata(METADATA_KEY.PARAM_TYPES, target)) {
            throw new Error(ERRORS_MSGS.DUPLICATED_INJECTABLE_DECORATOR);
        }
        var types = Reflect.getMetadata(METADATA_KEY.DESIGN_PARAM_TYPES, target) || [];
        Reflect.defineMetadata(METADATA_KEY.PARAM_TYPES, types, target);
        return target;
    };
}
exports.injectable = injectable;
//# sourceMappingURL=injectable.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/annotation/multi_inject.js":
/*!***************************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/multi_inject.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.multiInject = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "./node_modules/inversify/lib/annotation/decorator_utils.js");
function multiInject(serviceIdentifier) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.MULTI_INJECT_TAG, serviceIdentifier);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.multiInject = multiInject;
//# sourceMappingURL=multi_inject.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/annotation/named.js":
/*!********************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/named.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.named = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "./node_modules/inversify/lib/annotation/decorator_utils.js");
function named(name) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, name);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.named = named;
//# sourceMappingURL=named.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/annotation/optional.js":
/*!***********************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/optional.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.optional = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "./node_modules/inversify/lib/annotation/decorator_utils.js");
function optional() {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.OPTIONAL_TAG, true);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.optional = optional;
//# sourceMappingURL=optional.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/annotation/post_construct.js":
/*!*****************************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/post_construct.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.postConstruct = void 0;
var ERRORS_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
function postConstruct() {
    return function (target, propertyKey, descriptor) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.POST_CONSTRUCT, propertyKey);
        if (Reflect.hasOwnMetadata(METADATA_KEY.POST_CONSTRUCT, target.constructor)) {
            throw new Error(ERRORS_MSGS.MULTIPLE_POST_CONSTRUCT_METHODS);
        }
        Reflect.defineMetadata(METADATA_KEY.POST_CONSTRUCT, metadata, target.constructor);
    };
}
exports.postConstruct = postConstruct;
//# sourceMappingURL=post_construct.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/annotation/tagged.js":
/*!*********************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/tagged.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.tagged = void 0;
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "./node_modules/inversify/lib/annotation/decorator_utils.js");
function tagged(metadataKey, metadataValue) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(metadataKey, metadataValue);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.tagged = tagged;
//# sourceMappingURL=tagged.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/annotation/target_name.js":
/*!**************************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/target_name.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.targetName = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "./node_modules/inversify/lib/annotation/decorator_utils.js");
function targetName(name) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.NAME_TAG, name);
        decorator_utils_1.tagParameter(target, targetKey, index, metadata);
    };
}
exports.targetName = targetName;
//# sourceMappingURL=target_name.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/annotation/unmanaged.js":
/*!************************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/unmanaged.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.unmanaged = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "./node_modules/inversify/lib/annotation/decorator_utils.js");
function unmanaged() {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.UNMANAGED_TAG, true);
        decorator_utils_1.tagParameter(target, targetKey, index, metadata);
    };
}
exports.unmanaged = unmanaged;
//# sourceMappingURL=unmanaged.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/bindings/binding.js":
/*!********************************************************!*\
  !*** ./node_modules/inversify/lib/bindings/binding.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Binding = void 0;
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
var id_1 = __webpack_require__(/*! ../utils/id */ "./node_modules/inversify/lib/utils/id.js");
var Binding = (function () {
    function Binding(serviceIdentifier, scope) {
        this.id = id_1.id();
        this.activated = false;
        this.serviceIdentifier = serviceIdentifier;
        this.scope = scope;
        this.type = literal_types_1.BindingTypeEnum.Invalid;
        this.constraint = function (request) { return true; };
        this.implementationType = null;
        this.cache = null;
        this.factory = null;
        this.provider = null;
        this.onActivation = null;
        this.dynamicValue = null;
    }
    Binding.prototype.clone = function () {
        var clone = new Binding(this.serviceIdentifier, this.scope);
        clone.activated = (clone.scope === literal_types_1.BindingScopeEnum.Singleton) ? this.activated : false;
        clone.implementationType = this.implementationType;
        clone.dynamicValue = this.dynamicValue;
        clone.scope = this.scope;
        clone.type = this.type;
        clone.factory = this.factory;
        clone.provider = this.provider;
        clone.constraint = this.constraint;
        clone.onActivation = this.onActivation;
        clone.cache = this.cache;
        return clone;
    };
    return Binding;
}());
exports.Binding = Binding;
//# sourceMappingURL=binding.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/bindings/binding_count.js":
/*!**************************************************************!*\
  !*** ./node_modules/inversify/lib/bindings/binding_count.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BindingCount = void 0;
var BindingCount = {
    MultipleBindingsAvailable: 2,
    NoBindingsAvailable: 0,
    OnlyOneBindingAvailable: 1
};
exports.BindingCount = BindingCount;
//# sourceMappingURL=binding_count.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/constants/error_msgs.js":
/*!************************************************************!*\
  !*** ./node_modules/inversify/lib/constants/error_msgs.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.STACK_OVERFLOW = exports.CIRCULAR_DEPENDENCY_IN_FACTORY = exports.POST_CONSTRUCT_ERROR = exports.MULTIPLE_POST_CONSTRUCT_METHODS = exports.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK = exports.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE = exports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = exports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = exports.ARGUMENTS_LENGTH_MISMATCH = exports.INVALID_DECORATOR_OPERATION = exports.INVALID_TO_SELF_VALUE = exports.INVALID_FUNCTION_BINDING = exports.INVALID_MIDDLEWARE_RETURN = exports.NO_MORE_SNAPSHOTS_AVAILABLE = exports.INVALID_BINDING_TYPE = exports.NOT_IMPLEMENTED = exports.CIRCULAR_DEPENDENCY = exports.UNDEFINED_INJECT_ANNOTATION = exports.MISSING_INJECT_ANNOTATION = exports.MISSING_INJECTABLE_ANNOTATION = exports.NOT_REGISTERED = exports.CANNOT_UNBIND = exports.AMBIGUOUS_MATCH = exports.KEY_NOT_FOUND = exports.NULL_ARGUMENT = exports.DUPLICATED_METADATA = exports.DUPLICATED_INJECTABLE_DECORATOR = void 0;
exports.DUPLICATED_INJECTABLE_DECORATOR = "Cannot apply @injectable decorator multiple times.";
exports.DUPLICATED_METADATA = "Metadata key was used more than once in a parameter:";
exports.NULL_ARGUMENT = "NULL argument";
exports.KEY_NOT_FOUND = "Key Not Found";
exports.AMBIGUOUS_MATCH = "Ambiguous match found for serviceIdentifier:";
exports.CANNOT_UNBIND = "Could not unbind serviceIdentifier:";
exports.NOT_REGISTERED = "No matching bindings found for serviceIdentifier:";
exports.MISSING_INJECTABLE_ANNOTATION = "Missing required @injectable annotation in:";
exports.MISSING_INJECT_ANNOTATION = "Missing required @inject or @multiInject annotation in:";
var UNDEFINED_INJECT_ANNOTATION = function (name) {
    return "@inject called with undefined this could mean that the class " + name + " has " +
        "a circular dependency problem. You can use a LazyServiceIdentifer to  " +
        "overcome this limitation.";
};
exports.UNDEFINED_INJECT_ANNOTATION = UNDEFINED_INJECT_ANNOTATION;
exports.CIRCULAR_DEPENDENCY = "Circular dependency found:";
exports.NOT_IMPLEMENTED = "Sorry, this feature is not fully implemented yet.";
exports.INVALID_BINDING_TYPE = "Invalid binding type:";
exports.NO_MORE_SNAPSHOTS_AVAILABLE = "No snapshot available to restore.";
exports.INVALID_MIDDLEWARE_RETURN = "Invalid return type in middleware. Middleware must return!";
exports.INVALID_FUNCTION_BINDING = "Value provided to function binding must be a function!";
exports.INVALID_TO_SELF_VALUE = "The toSelf function can only be applied when a constructor is " +
    "used as service identifier";
exports.INVALID_DECORATOR_OPERATION = "The @inject @multiInject @tagged and @named decorators " +
    "must be applied to the parameters of a class constructor or a class property.";
var ARGUMENTS_LENGTH_MISMATCH = function () {
    var values = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
    }
    return "The number of constructor arguments in the derived class " +
        (values[0] + " must be >= than the number of constructor arguments of its base class.");
};
exports.ARGUMENTS_LENGTH_MISMATCH = ARGUMENTS_LENGTH_MISMATCH;
exports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = "Invalid Container constructor argument. Container options " +
    "must be an object.";
exports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = "Invalid Container option. Default scope must " +
    "be a string ('singleton' or 'transient').";
exports.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE = "Invalid Container option. Auto bind injectable must " +
    "be a boolean";
exports.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK = "Invalid Container option. Skip base check must " +
    "be a boolean";
exports.MULTIPLE_POST_CONSTRUCT_METHODS = "Cannot apply @postConstruct decorator multiple times in the same class";
var POST_CONSTRUCT_ERROR = function () {
    var values = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
    }
    return "@postConstruct error in class " + values[0] + ": " + values[1];
};
exports.POST_CONSTRUCT_ERROR = POST_CONSTRUCT_ERROR;
var CIRCULAR_DEPENDENCY_IN_FACTORY = function () {
    var values = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
    }
    return "It looks like there is a circular dependency " +
        ("in one of the '" + values[0] + "' bindings. Please investigate bindings with") +
        ("service identifier '" + values[1] + "'.");
};
exports.CIRCULAR_DEPENDENCY_IN_FACTORY = CIRCULAR_DEPENDENCY_IN_FACTORY;
exports.STACK_OVERFLOW = "Maximum call stack size exceeded";
//# sourceMappingURL=error_msgs.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/constants/literal_types.js":
/*!***************************************************************!*\
  !*** ./node_modules/inversify/lib/constants/literal_types.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.TargetTypeEnum = exports.BindingTypeEnum = exports.BindingScopeEnum = void 0;
var BindingScopeEnum = {
    Request: "Request",
    Singleton: "Singleton",
    Transient: "Transient"
};
exports.BindingScopeEnum = BindingScopeEnum;
var BindingTypeEnum = {
    ConstantValue: "ConstantValue",
    Constructor: "Constructor",
    DynamicValue: "DynamicValue",
    Factory: "Factory",
    Function: "Function",
    Instance: "Instance",
    Invalid: "Invalid",
    Provider: "Provider"
};
exports.BindingTypeEnum = BindingTypeEnum;
var TargetTypeEnum = {
    ClassProperty: "ClassProperty",
    ConstructorArgument: "ConstructorArgument",
    Variable: "Variable"
};
exports.TargetTypeEnum = TargetTypeEnum;
//# sourceMappingURL=literal_types.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/constants/metadata_keys.js":
/*!***************************************************************!*\
  !*** ./node_modules/inversify/lib/constants/metadata_keys.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NON_CUSTOM_TAG_KEYS = exports.POST_CONSTRUCT = exports.DESIGN_PARAM_TYPES = exports.PARAM_TYPES = exports.TAGGED_PROP = exports.TAGGED = exports.MULTI_INJECT_TAG = exports.INJECT_TAG = exports.OPTIONAL_TAG = exports.UNMANAGED_TAG = exports.NAME_TAG = exports.NAMED_TAG = void 0;
exports.NAMED_TAG = "named";
exports.NAME_TAG = "name";
exports.UNMANAGED_TAG = "unmanaged";
exports.OPTIONAL_TAG = "optional";
exports.INJECT_TAG = "inject";
exports.MULTI_INJECT_TAG = "multi_inject";
exports.TAGGED = "inversify:tagged";
exports.TAGGED_PROP = "inversify:tagged_props";
exports.PARAM_TYPES = "inversify:paramtypes";
exports.DESIGN_PARAM_TYPES = "design:paramtypes";
exports.POST_CONSTRUCT = "post_construct";
function getNonCustomTagKeys() {
    return [
        exports.INJECT_TAG,
        exports.MULTI_INJECT_TAG,
        exports.NAME_TAG,
        exports.UNMANAGED_TAG,
        exports.NAMED_TAG,
        exports.OPTIONAL_TAG,
    ];
}
exports.NON_CUSTOM_TAG_KEYS = getNonCustomTagKeys();
//# sourceMappingURL=metadata_keys.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/container/container.js":
/*!***********************************************************!*\
  !*** ./node_modules/inversify/lib/container/container.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Container = void 0;
var binding_1 = __webpack_require__(/*! ../bindings/binding */ "./node_modules/inversify/lib/bindings/binding.js");
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_reader_1 = __webpack_require__(/*! ../planning/metadata_reader */ "./node_modules/inversify/lib/planning/metadata_reader.js");
var planner_1 = __webpack_require__(/*! ../planning/planner */ "./node_modules/inversify/lib/planning/planner.js");
var resolver_1 = __webpack_require__(/*! ../resolution/resolver */ "./node_modules/inversify/lib/resolution/resolver.js");
var binding_to_syntax_1 = __webpack_require__(/*! ../syntax/binding_to_syntax */ "./node_modules/inversify/lib/syntax/binding_to_syntax.js");
var id_1 = __webpack_require__(/*! ../utils/id */ "./node_modules/inversify/lib/utils/id.js");
var serialization_1 = __webpack_require__(/*! ../utils/serialization */ "./node_modules/inversify/lib/utils/serialization.js");
var container_snapshot_1 = __webpack_require__(/*! ./container_snapshot */ "./node_modules/inversify/lib/container/container_snapshot.js");
var lookup_1 = __webpack_require__(/*! ./lookup */ "./node_modules/inversify/lib/container/lookup.js");
var Container = (function () {
    function Container(containerOptions) {
        this._appliedMiddleware = [];
        var options = containerOptions || {};
        if (typeof options !== "object") {
            throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT);
        }
        if (options.defaultScope === undefined) {
            options.defaultScope = literal_types_1.BindingScopeEnum.Transient;
        }
        else if (options.defaultScope !== literal_types_1.BindingScopeEnum.Singleton &&
            options.defaultScope !== literal_types_1.BindingScopeEnum.Transient &&
            options.defaultScope !== literal_types_1.BindingScopeEnum.Request) {
            throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE);
        }
        if (options.autoBindInjectable === undefined) {
            options.autoBindInjectable = false;
        }
        else if (typeof options.autoBindInjectable !== "boolean") {
            throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE);
        }
        if (options.skipBaseClassChecks === undefined) {
            options.skipBaseClassChecks = false;
        }
        else if (typeof options.skipBaseClassChecks !== "boolean") {
            throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK);
        }
        this.options = {
            autoBindInjectable: options.autoBindInjectable,
            defaultScope: options.defaultScope,
            skipBaseClassChecks: options.skipBaseClassChecks
        };
        this.id = id_1.id();
        this._bindingDictionary = new lookup_1.Lookup();
        this._snapshots = [];
        this._middleware = null;
        this.parent = null;
        this._metadataReader = new metadata_reader_1.MetadataReader();
    }
    Container.merge = function (container1, container2) {
        var container3 = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            container3[_i - 2] = arguments[_i];
        }
        var container = new Container();
        var targetContainers = __spreadArray([container1, container2], container3).map(function (targetContainer) { return planner_1.getBindingDictionary(targetContainer); });
        var bindingDictionary = planner_1.getBindingDictionary(container);
        function copyDictionary(origin, destination) {
            origin.traverse(function (key, value) {
                value.forEach(function (binding) {
                    destination.add(binding.serviceIdentifier, binding.clone());
                });
            });
        }
        targetContainers.forEach(function (targetBindingDictionary) {
            copyDictionary(targetBindingDictionary, bindingDictionary);
        });
        return container;
    };
    Container.prototype.load = function () {
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        var getHelpers = this._getContainerModuleHelpersFactory();
        for (var _a = 0, modules_1 = modules; _a < modules_1.length; _a++) {
            var currentModule = modules_1[_a];
            var containerModuleHelpers = getHelpers(currentModule.id);
            currentModule.registry(containerModuleHelpers.bindFunction, containerModuleHelpers.unbindFunction, containerModuleHelpers.isboundFunction, containerModuleHelpers.rebindFunction);
        }
    };
    Container.prototype.loadAsync = function () {
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, void 0, function () {
            var getHelpers, _a, modules_2, currentModule, containerModuleHelpers;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        getHelpers = this._getContainerModuleHelpersFactory();
                        _a = 0, modules_2 = modules;
                        _b.label = 1;
                    case 1:
                        if (!(_a < modules_2.length)) return [3, 4];
                        currentModule = modules_2[_a];
                        containerModuleHelpers = getHelpers(currentModule.id);
                        return [4, currentModule.registry(containerModuleHelpers.bindFunction, containerModuleHelpers.unbindFunction, containerModuleHelpers.isboundFunction, containerModuleHelpers.rebindFunction)];
                    case 2:
                        _b.sent();
                        _b.label = 3;
                    case 3:
                        _a++;
                        return [3, 1];
                    case 4: return [2];
                }
            });
        });
    };
    Container.prototype.unload = function () {
        var _this = this;
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        var conditionFactory = function (expected) { return function (item) {
            return item.moduleId === expected;
        }; };
        modules.forEach(function (module) {
            var condition = conditionFactory(module.id);
            _this._bindingDictionary.removeByCondition(condition);
        });
    };
    Container.prototype.bind = function (serviceIdentifier) {
        var scope = this.options.defaultScope || literal_types_1.BindingScopeEnum.Transient;
        var binding = new binding_1.Binding(serviceIdentifier, scope);
        this._bindingDictionary.add(serviceIdentifier, binding);
        return new binding_to_syntax_1.BindingToSyntax(binding);
    };
    Container.prototype.rebind = function (serviceIdentifier) {
        this.unbind(serviceIdentifier);
        return this.bind(serviceIdentifier);
    };
    Container.prototype.unbind = function (serviceIdentifier) {
        try {
            this._bindingDictionary.remove(serviceIdentifier);
        }
        catch (e) {
            throw new Error(ERROR_MSGS.CANNOT_UNBIND + " " + serialization_1.getServiceIdentifierAsString(serviceIdentifier));
        }
    };
    Container.prototype.unbindAll = function () {
        this._bindingDictionary = new lookup_1.Lookup();
    };
    Container.prototype.isBound = function (serviceIdentifier) {
        var bound = this._bindingDictionary.hasKey(serviceIdentifier);
        if (!bound && this.parent) {
            bound = this.parent.isBound(serviceIdentifier);
        }
        return bound;
    };
    Container.prototype.isBoundNamed = function (serviceIdentifier, named) {
        return this.isBoundTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
    };
    Container.prototype.isBoundTagged = function (serviceIdentifier, key, value) {
        var bound = false;
        if (this._bindingDictionary.hasKey(serviceIdentifier)) {
            var bindings = this._bindingDictionary.get(serviceIdentifier);
            var request_1 = planner_1.createMockRequest(this, serviceIdentifier, key, value);
            bound = bindings.some(function (b) { return b.constraint(request_1); });
        }
        if (!bound && this.parent) {
            bound = this.parent.isBoundTagged(serviceIdentifier, key, value);
        }
        return bound;
    };
    Container.prototype.snapshot = function () {
        this._snapshots.push(container_snapshot_1.ContainerSnapshot.of(this._bindingDictionary.clone(), this._middleware));
    };
    Container.prototype.restore = function () {
        var snapshot = this._snapshots.pop();
        if (snapshot === undefined) {
            throw new Error(ERROR_MSGS.NO_MORE_SNAPSHOTS_AVAILABLE);
        }
        this._bindingDictionary = snapshot.bindings;
        this._middleware = snapshot.middleware;
    };
    Container.prototype.createChild = function (containerOptions) {
        var child = new Container(containerOptions || this.options);
        child.parent = this;
        return child;
    };
    Container.prototype.applyMiddleware = function () {
        var middlewares = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            middlewares[_i] = arguments[_i];
        }
        this._appliedMiddleware = this._appliedMiddleware.concat(middlewares);
        var initial = (this._middleware) ? this._middleware : this._planAndResolve();
        this._middleware = middlewares.reduce(function (prev, curr) { return curr(prev); }, initial);
    };
    Container.prototype.applyCustomMetadataReader = function (metadataReader) {
        this._metadataReader = metadataReader;
    };
    Container.prototype.get = function (serviceIdentifier) {
        return this._get(false, false, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier);
    };
    Container.prototype.getTagged = function (serviceIdentifier, key, value) {
        return this._get(false, false, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier, key, value);
    };
    Container.prototype.getNamed = function (serviceIdentifier, named) {
        return this.getTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
    };
    Container.prototype.getAll = function (serviceIdentifier) {
        return this._get(true, true, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier);
    };
    Container.prototype.getAllTagged = function (serviceIdentifier, key, value) {
        return this._get(false, true, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier, key, value);
    };
    Container.prototype.getAllNamed = function (serviceIdentifier, named) {
        return this.getAllTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
    };
    Container.prototype.resolve = function (constructorFunction) {
        var tempContainer = this.createChild();
        tempContainer.bind(constructorFunction).toSelf();
        this._appliedMiddleware.forEach(function (m) {
            tempContainer.applyMiddleware(m);
        });
        return tempContainer.get(constructorFunction);
    };
    Container.prototype._getContainerModuleHelpersFactory = function () {
        var _this = this;
        var setModuleId = function (bindingToSyntax, moduleId) {
            bindingToSyntax._binding.moduleId = moduleId;
        };
        var getBindFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _bind = _this.bind.bind(_this);
                var bindingToSyntax = _bind(serviceIdentifier);
                setModuleId(bindingToSyntax, moduleId);
                return bindingToSyntax;
            };
        };
        var getUnbindFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _unbind = _this.unbind.bind(_this);
                _unbind(serviceIdentifier);
            };
        };
        var getIsboundFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _isBound = _this.isBound.bind(_this);
                return _isBound(serviceIdentifier);
            };
        };
        var getRebindFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _rebind = _this.rebind.bind(_this);
                var bindingToSyntax = _rebind(serviceIdentifier);
                setModuleId(bindingToSyntax, moduleId);
                return bindingToSyntax;
            };
        };
        return function (mId) { return ({
            bindFunction: getBindFunction(mId),
            isboundFunction: getIsboundFunction(mId),
            rebindFunction: getRebindFunction(mId),
            unbindFunction: getUnbindFunction(mId)
        }); };
    };
    Container.prototype._get = function (avoidConstraints, isMultiInject, targetType, serviceIdentifier, key, value) {
        var result = null;
        var defaultArgs = {
            avoidConstraints: avoidConstraints,
            contextInterceptor: function (context) { return context; },
            isMultiInject: isMultiInject,
            key: key,
            serviceIdentifier: serviceIdentifier,
            targetType: targetType,
            value: value
        };
        if (this._middleware) {
            result = this._middleware(defaultArgs);
            if (result === undefined || result === null) {
                throw new Error(ERROR_MSGS.INVALID_MIDDLEWARE_RETURN);
            }
        }
        else {
            result = this._planAndResolve()(defaultArgs);
        }
        return result;
    };
    Container.prototype._planAndResolve = function () {
        var _this = this;
        return function (args) {
            var context = planner_1.plan(_this._metadataReader, _this, args.isMultiInject, args.targetType, args.serviceIdentifier, args.key, args.value, args.avoidConstraints);
            context = args.contextInterceptor(context);
            var result = resolver_1.resolve(context);
            return result;
        };
    };
    return Container;
}());
exports.Container = Container;
//# sourceMappingURL=container.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/container/container_module.js":
/*!******************************************************************!*\
  !*** ./node_modules/inversify/lib/container/container_module.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AsyncContainerModule = exports.ContainerModule = void 0;
var id_1 = __webpack_require__(/*! ../utils/id */ "./node_modules/inversify/lib/utils/id.js");
var ContainerModule = (function () {
    function ContainerModule(registry) {
        this.id = id_1.id();
        this.registry = registry;
    }
    return ContainerModule;
}());
exports.ContainerModule = ContainerModule;
var AsyncContainerModule = (function () {
    function AsyncContainerModule(registry) {
        this.id = id_1.id();
        this.registry = registry;
    }
    return AsyncContainerModule;
}());
exports.AsyncContainerModule = AsyncContainerModule;
//# sourceMappingURL=container_module.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/container/container_snapshot.js":
/*!********************************************************************!*\
  !*** ./node_modules/inversify/lib/container/container_snapshot.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ContainerSnapshot = void 0;
var ContainerSnapshot = (function () {
    function ContainerSnapshot() {
    }
    ContainerSnapshot.of = function (bindings, middleware) {
        var snapshot = new ContainerSnapshot();
        snapshot.bindings = bindings;
        snapshot.middleware = middleware;
        return snapshot;
    };
    return ContainerSnapshot;
}());
exports.ContainerSnapshot = ContainerSnapshot;
//# sourceMappingURL=container_snapshot.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/container/lookup.js":
/*!********************************************************!*\
  !*** ./node_modules/inversify/lib/container/lookup.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Lookup = void 0;
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var Lookup = (function () {
    function Lookup() {
        this._map = new Map();
    }
    Lookup.prototype.getMap = function () {
        return this._map;
    };
    Lookup.prototype.add = function (serviceIdentifier, value) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        if (value === null || value === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        var entry = this._map.get(serviceIdentifier);
        if (entry !== undefined) {
            entry.push(value);
            this._map.set(serviceIdentifier, entry);
        }
        else {
            this._map.set(serviceIdentifier, [value]);
        }
    };
    Lookup.prototype.get = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        var entry = this._map.get(serviceIdentifier);
        if (entry !== undefined) {
            return entry;
        }
        else {
            throw new Error(ERROR_MSGS.KEY_NOT_FOUND);
        }
    };
    Lookup.prototype.remove = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        if (!this._map.delete(serviceIdentifier)) {
            throw new Error(ERROR_MSGS.KEY_NOT_FOUND);
        }
    };
    Lookup.prototype.removeByCondition = function (condition) {
        var _this = this;
        this._map.forEach(function (entries, key) {
            var updatedEntries = entries.filter(function (entry) { return !condition(entry); });
            if (updatedEntries.length > 0) {
                _this._map.set(key, updatedEntries);
            }
            else {
                _this._map.delete(key);
            }
        });
    };
    Lookup.prototype.hasKey = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        return this._map.has(serviceIdentifier);
    };
    Lookup.prototype.clone = function () {
        var copy = new Lookup();
        this._map.forEach(function (value, key) {
            value.forEach(function (b) { return copy.add(key, b.clone()); });
        });
        return copy;
    };
    Lookup.prototype.traverse = function (func) {
        this._map.forEach(function (value, key) {
            func(key, value);
        });
    };
    return Lookup;
}());
exports.Lookup = Lookup;
//# sourceMappingURL=lookup.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/inversify.js":
/*!*************************************************!*\
  !*** ./node_modules/inversify/lib/inversify.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.multiBindToService = exports.getServiceIdentifierAsString = exports.typeConstraint = exports.namedConstraint = exports.taggedConstraint = exports.traverseAncerstors = exports.decorate = exports.id = exports.MetadataReader = exports.postConstruct = exports.targetName = exports.multiInject = exports.unmanaged = exports.optional = exports.LazyServiceIdentifer = exports.inject = exports.named = exports.tagged = exports.injectable = exports.ContainerModule = exports.AsyncContainerModule = exports.TargetTypeEnum = exports.BindingTypeEnum = exports.BindingScopeEnum = exports.Container = exports.METADATA_KEY = void 0;
var keys = __webpack_require__(/*! ./constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
exports.METADATA_KEY = keys;
var container_1 = __webpack_require__(/*! ./container/container */ "./node_modules/inversify/lib/container/container.js");
Object.defineProperty(exports, "Container", { enumerable: true, get: function () { return container_1.Container; } });
var literal_types_1 = __webpack_require__(/*! ./constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
Object.defineProperty(exports, "BindingScopeEnum", { enumerable: true, get: function () { return literal_types_1.BindingScopeEnum; } });
Object.defineProperty(exports, "BindingTypeEnum", { enumerable: true, get: function () { return literal_types_1.BindingTypeEnum; } });
Object.defineProperty(exports, "TargetTypeEnum", { enumerable: true, get: function () { return literal_types_1.TargetTypeEnum; } });
var container_module_1 = __webpack_require__(/*! ./container/container_module */ "./node_modules/inversify/lib/container/container_module.js");
Object.defineProperty(exports, "AsyncContainerModule", { enumerable: true, get: function () { return container_module_1.AsyncContainerModule; } });
Object.defineProperty(exports, "ContainerModule", { enumerable: true, get: function () { return container_module_1.ContainerModule; } });
var injectable_1 = __webpack_require__(/*! ./annotation/injectable */ "./node_modules/inversify/lib/annotation/injectable.js");
Object.defineProperty(exports, "injectable", { enumerable: true, get: function () { return injectable_1.injectable; } });
var tagged_1 = __webpack_require__(/*! ./annotation/tagged */ "./node_modules/inversify/lib/annotation/tagged.js");
Object.defineProperty(exports, "tagged", { enumerable: true, get: function () { return tagged_1.tagged; } });
var named_1 = __webpack_require__(/*! ./annotation/named */ "./node_modules/inversify/lib/annotation/named.js");
Object.defineProperty(exports, "named", { enumerable: true, get: function () { return named_1.named; } });
var inject_1 = __webpack_require__(/*! ./annotation/inject */ "./node_modules/inversify/lib/annotation/inject.js");
Object.defineProperty(exports, "inject", { enumerable: true, get: function () { return inject_1.inject; } });
Object.defineProperty(exports, "LazyServiceIdentifer", { enumerable: true, get: function () { return inject_1.LazyServiceIdentifer; } });
var optional_1 = __webpack_require__(/*! ./annotation/optional */ "./node_modules/inversify/lib/annotation/optional.js");
Object.defineProperty(exports, "optional", { enumerable: true, get: function () { return optional_1.optional; } });
var unmanaged_1 = __webpack_require__(/*! ./annotation/unmanaged */ "./node_modules/inversify/lib/annotation/unmanaged.js");
Object.defineProperty(exports, "unmanaged", { enumerable: true, get: function () { return unmanaged_1.unmanaged; } });
var multi_inject_1 = __webpack_require__(/*! ./annotation/multi_inject */ "./node_modules/inversify/lib/annotation/multi_inject.js");
Object.defineProperty(exports, "multiInject", { enumerable: true, get: function () { return multi_inject_1.multiInject; } });
var target_name_1 = __webpack_require__(/*! ./annotation/target_name */ "./node_modules/inversify/lib/annotation/target_name.js");
Object.defineProperty(exports, "targetName", { enumerable: true, get: function () { return target_name_1.targetName; } });
var post_construct_1 = __webpack_require__(/*! ./annotation/post_construct */ "./node_modules/inversify/lib/annotation/post_construct.js");
Object.defineProperty(exports, "postConstruct", { enumerable: true, get: function () { return post_construct_1.postConstruct; } });
var metadata_reader_1 = __webpack_require__(/*! ./planning/metadata_reader */ "./node_modules/inversify/lib/planning/metadata_reader.js");
Object.defineProperty(exports, "MetadataReader", { enumerable: true, get: function () { return metadata_reader_1.MetadataReader; } });
var id_1 = __webpack_require__(/*! ./utils/id */ "./node_modules/inversify/lib/utils/id.js");
Object.defineProperty(exports, "id", { enumerable: true, get: function () { return id_1.id; } });
var decorator_utils_1 = __webpack_require__(/*! ./annotation/decorator_utils */ "./node_modules/inversify/lib/annotation/decorator_utils.js");
Object.defineProperty(exports, "decorate", { enumerable: true, get: function () { return decorator_utils_1.decorate; } });
var constraint_helpers_1 = __webpack_require__(/*! ./syntax/constraint_helpers */ "./node_modules/inversify/lib/syntax/constraint_helpers.js");
Object.defineProperty(exports, "traverseAncerstors", { enumerable: true, get: function () { return constraint_helpers_1.traverseAncerstors; } });
Object.defineProperty(exports, "taggedConstraint", { enumerable: true, get: function () { return constraint_helpers_1.taggedConstraint; } });
Object.defineProperty(exports, "namedConstraint", { enumerable: true, get: function () { return constraint_helpers_1.namedConstraint; } });
Object.defineProperty(exports, "typeConstraint", { enumerable: true, get: function () { return constraint_helpers_1.typeConstraint; } });
var serialization_1 = __webpack_require__(/*! ./utils/serialization */ "./node_modules/inversify/lib/utils/serialization.js");
Object.defineProperty(exports, "getServiceIdentifierAsString", { enumerable: true, get: function () { return serialization_1.getServiceIdentifierAsString; } });
var binding_utils_1 = __webpack_require__(/*! ./utils/binding_utils */ "./node_modules/inversify/lib/utils/binding_utils.js");
Object.defineProperty(exports, "multiBindToService", { enumerable: true, get: function () { return binding_utils_1.multiBindToService; } });
//# sourceMappingURL=inversify.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/planning/context.js":
/*!********************************************************!*\
  !*** ./node_modules/inversify/lib/planning/context.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Context = void 0;
var id_1 = __webpack_require__(/*! ../utils/id */ "./node_modules/inversify/lib/utils/id.js");
var Context = (function () {
    function Context(container) {
        this.id = id_1.id();
        this.container = container;
    }
    Context.prototype.addPlan = function (plan) {
        this.plan = plan;
    };
    Context.prototype.setCurrentRequest = function (currentRequest) {
        this.currentRequest = currentRequest;
    };
    return Context;
}());
exports.Context = Context;
//# sourceMappingURL=context.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/planning/metadata.js":
/*!*********************************************************!*\
  !*** ./node_modules/inversify/lib/planning/metadata.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Metadata = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var Metadata = (function () {
    function Metadata(key, value) {
        this.key = key;
        this.value = value;
    }
    Metadata.prototype.toString = function () {
        if (this.key === METADATA_KEY.NAMED_TAG) {
            return "named: " + this.value.toString() + " ";
        }
        else {
            return "tagged: { key:" + this.key.toString() + ", value: " + this.value + " }";
        }
    };
    return Metadata;
}());
exports.Metadata = Metadata;
//# sourceMappingURL=metadata.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/planning/metadata_reader.js":
/*!****************************************************************!*\
  !*** ./node_modules/inversify/lib/planning/metadata_reader.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MetadataReader = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var MetadataReader = (function () {
    function MetadataReader() {
    }
    MetadataReader.prototype.getConstructorMetadata = function (constructorFunc) {
        var compilerGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.PARAM_TYPES, constructorFunc);
        var userGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED, constructorFunc);
        return {
            compilerGeneratedMetadata: compilerGeneratedMetadata,
            userGeneratedMetadata: userGeneratedMetadata || {}
        };
    };
    MetadataReader.prototype.getPropertiesMetadata = function (constructorFunc) {
        var userGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED_PROP, constructorFunc) || [];
        return userGeneratedMetadata;
    };
    return MetadataReader;
}());
exports.MetadataReader = MetadataReader;
//# sourceMappingURL=metadata_reader.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/planning/plan.js":
/*!*****************************************************!*\
  !*** ./node_modules/inversify/lib/planning/plan.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Plan = void 0;
var Plan = (function () {
    function Plan(parentContext, rootRequest) {
        this.parentContext = parentContext;
        this.rootRequest = rootRequest;
    }
    return Plan;
}());
exports.Plan = Plan;
//# sourceMappingURL=plan.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/planning/planner.js":
/*!********************************************************!*\
  !*** ./node_modules/inversify/lib/planning/planner.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.getBindingDictionary = exports.createMockRequest = exports.plan = void 0;
var binding_count_1 = __webpack_require__(/*! ../bindings/binding_count */ "./node_modules/inversify/lib/bindings/binding_count.js");
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var exceptions_1 = __webpack_require__(/*! ../utils/exceptions */ "./node_modules/inversify/lib/utils/exceptions.js");
var serialization_1 = __webpack_require__(/*! ../utils/serialization */ "./node_modules/inversify/lib/utils/serialization.js");
var context_1 = __webpack_require__(/*! ./context */ "./node_modules/inversify/lib/planning/context.js");
var metadata_1 = __webpack_require__(/*! ./metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var plan_1 = __webpack_require__(/*! ./plan */ "./node_modules/inversify/lib/planning/plan.js");
var reflection_utils_1 = __webpack_require__(/*! ./reflection_utils */ "./node_modules/inversify/lib/planning/reflection_utils.js");
var request_1 = __webpack_require__(/*! ./request */ "./node_modules/inversify/lib/planning/request.js");
var target_1 = __webpack_require__(/*! ./target */ "./node_modules/inversify/lib/planning/target.js");
function getBindingDictionary(cntnr) {
    return cntnr._bindingDictionary;
}
exports.getBindingDictionary = getBindingDictionary;
function _createTarget(isMultiInject, targetType, serviceIdentifier, name, key, value) {
    var metadataKey = isMultiInject ? METADATA_KEY.MULTI_INJECT_TAG : METADATA_KEY.INJECT_TAG;
    var injectMetadata = new metadata_1.Metadata(metadataKey, serviceIdentifier);
    var target = new target_1.Target(targetType, name, serviceIdentifier, injectMetadata);
    if (key !== undefined) {
        var tagMetadata = new metadata_1.Metadata(key, value);
        target.metadata.push(tagMetadata);
    }
    return target;
}
function _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target) {
    var bindings = getBindings(context.container, target.serviceIdentifier);
    var activeBindings = [];
    if (bindings.length === binding_count_1.BindingCount.NoBindingsAvailable &&
        context.container.options.autoBindInjectable &&
        typeof target.serviceIdentifier === "function" &&
        metadataReader.getConstructorMetadata(target.serviceIdentifier).compilerGeneratedMetadata) {
        context.container.bind(target.serviceIdentifier).toSelf();
        bindings = getBindings(context.container, target.serviceIdentifier);
    }
    if (!avoidConstraints) {
        activeBindings = bindings.filter(function (binding) {
            var request = new request_1.Request(binding.serviceIdentifier, context, parentRequest, binding, target);
            return binding.constraint(request);
        });
    }
    else {
        activeBindings = bindings;
    }
    _validateActiveBindingCount(target.serviceIdentifier, activeBindings, target, context.container);
    return activeBindings;
}
function _validateActiveBindingCount(serviceIdentifier, bindings, target, container) {
    switch (bindings.length) {
        case binding_count_1.BindingCount.NoBindingsAvailable:
            if (target.isOptional()) {
                return bindings;
            }
            else {
                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);
                var msg = ERROR_MSGS.NOT_REGISTERED;
                msg += serialization_1.listMetadataForTarget(serviceIdentifierString, target);
                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);
                throw new Error(msg);
            }
        case binding_count_1.BindingCount.OnlyOneBindingAvailable:
            if (!target.isArray()) {
                return bindings;
            }
        case binding_count_1.BindingCount.MultipleBindingsAvailable:
        default:
            if (!target.isArray()) {
                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);
                var msg = ERROR_MSGS.AMBIGUOUS_MATCH + " " + serviceIdentifierString;
                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);
                throw new Error(msg);
            }
            else {
                return bindings;
            }
    }
}
function _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, parentRequest, target) {
    var activeBindings;
    var childRequest;
    if (parentRequest === null) {
        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, null, target);
        childRequest = new request_1.Request(serviceIdentifier, context, null, activeBindings, target);
        var thePlan = new plan_1.Plan(context, childRequest);
        context.addPlan(thePlan);
    }
    else {
        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target);
        childRequest = parentRequest.addChildRequest(target.serviceIdentifier, activeBindings, target);
    }
    activeBindings.forEach(function (binding) {
        var subChildRequest = null;
        if (target.isArray()) {
            subChildRequest = childRequest.addChildRequest(binding.serviceIdentifier, binding, target);
        }
        else {
            if (binding.cache) {
                return;
            }
            subChildRequest = childRequest;
        }
        if (binding.type === literal_types_1.BindingTypeEnum.Instance && binding.implementationType !== null) {
            var dependencies = reflection_utils_1.getDependencies(metadataReader, binding.implementationType);
            if (!context.container.options.skipBaseClassChecks) {
                var baseClassDependencyCount = reflection_utils_1.getBaseClassDependencyCount(metadataReader, binding.implementationType);
                if (dependencies.length < baseClassDependencyCount) {
                    var error = ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH(reflection_utils_1.getFunctionName(binding.implementationType));
                    throw new Error(error);
                }
            }
            dependencies.forEach(function (dependency) {
                _createSubRequests(metadataReader, false, dependency.serviceIdentifier, context, subChildRequest, dependency);
            });
        }
    });
}
function getBindings(container, serviceIdentifier) {
    var bindings = [];
    var bindingDictionary = getBindingDictionary(container);
    if (bindingDictionary.hasKey(serviceIdentifier)) {
        bindings = bindingDictionary.get(serviceIdentifier);
    }
    else if (container.parent !== null) {
        bindings = getBindings(container.parent, serviceIdentifier);
    }
    return bindings;
}
function plan(metadataReader, container, isMultiInject, targetType, serviceIdentifier, key, value, avoidConstraints) {
    if (avoidConstraints === void 0) { avoidConstraints = false; }
    var context = new context_1.Context(container);
    var target = _createTarget(isMultiInject, targetType, serviceIdentifier, "", key, value);
    try {
        _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, null, target);
        return context;
    }
    catch (error) {
        if (exceptions_1.isStackOverflowExeption(error)) {
            if (context.plan) {
                serialization_1.circularDependencyToException(context.plan.rootRequest);
            }
        }
        throw error;
    }
}
exports.plan = plan;
function createMockRequest(container, serviceIdentifier, key, value) {
    var target = new target_1.Target(literal_types_1.TargetTypeEnum.Variable, "", serviceIdentifier, new metadata_1.Metadata(key, value));
    var context = new context_1.Context(container);
    var request = new request_1.Request(serviceIdentifier, context, null, [], target);
    return request;
}
exports.createMockRequest = createMockRequest;
//# sourceMappingURL=planner.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/planning/queryable_string.js":
/*!*****************************************************************!*\
  !*** ./node_modules/inversify/lib/planning/queryable_string.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.QueryableString = void 0;
var QueryableString = (function () {
    function QueryableString(str) {
        this.str = str;
    }
    QueryableString.prototype.startsWith = function (searchString) {
        return this.str.indexOf(searchString) === 0;
    };
    QueryableString.prototype.endsWith = function (searchString) {
        var reverseString = "";
        var reverseSearchString = searchString.split("").reverse().join("");
        reverseString = this.str.split("").reverse().join("");
        return this.startsWith.call({ str: reverseString }, reverseSearchString);
    };
    QueryableString.prototype.contains = function (searchString) {
        return (this.str.indexOf(searchString) !== -1);
    };
    QueryableString.prototype.equals = function (compareString) {
        return this.str === compareString;
    };
    QueryableString.prototype.value = function () {
        return this.str;
    };
    return QueryableString;
}());
exports.QueryableString = QueryableString;
//# sourceMappingURL=queryable_string.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/planning/reflection_utils.js":
/*!*****************************************************************!*\
  !*** ./node_modules/inversify/lib/planning/reflection_utils.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFunctionName = exports.getBaseClassDependencyCount = exports.getDependencies = void 0;
var inject_1 = __webpack_require__(/*! ../annotation/inject */ "./node_modules/inversify/lib/annotation/inject.js");
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var serialization_1 = __webpack_require__(/*! ../utils/serialization */ "./node_modules/inversify/lib/utils/serialization.js");
Object.defineProperty(exports, "getFunctionName", { enumerable: true, get: function () { return serialization_1.getFunctionName; } });
var target_1 = __webpack_require__(/*! ./target */ "./node_modules/inversify/lib/planning/target.js");
function getDependencies(metadataReader, func) {
    var constructorName = serialization_1.getFunctionName(func);
    var targets = getTargets(metadataReader, constructorName, func, false);
    return targets;
}
exports.getDependencies = getDependencies;
function getTargets(metadataReader, constructorName, func, isBaseClass) {
    var metadata = metadataReader.getConstructorMetadata(func);
    var serviceIdentifiers = metadata.compilerGeneratedMetadata;
    if (serviceIdentifiers === undefined) {
        var msg = ERROR_MSGS.MISSING_INJECTABLE_ANNOTATION + " " + constructorName + ".";
        throw new Error(msg);
    }
    var constructorArgsMetadata = metadata.userGeneratedMetadata;
    var keys = Object.keys(constructorArgsMetadata);
    var hasUserDeclaredUnknownInjections = (func.length === 0 && keys.length > 0);
    var hasOptionalParameters = keys.length > func.length;
    var iterations = (hasUserDeclaredUnknownInjections || hasOptionalParameters) ? keys.length : func.length;
    var constructorTargets = getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations);
    var propertyTargets = getClassPropsAsTargets(metadataReader, func);
    var targets = __spreadArray(__spreadArray([], constructorTargets), propertyTargets);
    return targets;
}
function getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata) {
    var targetMetadata = constructorArgsMetadata[index.toString()] || [];
    var metadata = formatTargetMetadata(targetMetadata);
    var isManaged = metadata.unmanaged !== true;
    var serviceIdentifier = serviceIdentifiers[index];
    var injectIdentifier = (metadata.inject || metadata.multiInject);
    serviceIdentifier = (injectIdentifier) ? (injectIdentifier) : serviceIdentifier;
    if (serviceIdentifier instanceof inject_1.LazyServiceIdentifer) {
        serviceIdentifier = serviceIdentifier.unwrap();
    }
    if (isManaged) {
        var isObject = serviceIdentifier === Object;
        var isFunction = serviceIdentifier === Function;
        var isUndefined = serviceIdentifier === undefined;
        var isUnknownType = (isObject || isFunction || isUndefined);
        if (!isBaseClass && isUnknownType) {
            var msg = ERROR_MSGS.MISSING_INJECT_ANNOTATION + " argument " + index + " in class " + constructorName + ".";
            throw new Error(msg);
        }
        var target = new target_1.Target(literal_types_1.TargetTypeEnum.ConstructorArgument, metadata.targetName, serviceIdentifier);
        target.metadata = targetMetadata;
        return target;
    }
    return null;
}
function getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations) {
    var targets = [];
    for (var i = 0; i < iterations; i++) {
        var index = i;
        var target = getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata);
        if (target !== null) {
            targets.push(target);
        }
    }
    return targets;
}
function getClassPropsAsTargets(metadataReader, constructorFunc) {
    var classPropsMetadata = metadataReader.getPropertiesMetadata(constructorFunc);
    var targets = [];
    var keys = Object.keys(classPropsMetadata);
    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var key = keys_1[_i];
        var targetMetadata = classPropsMetadata[key];
        var metadata = formatTargetMetadata(classPropsMetadata[key]);
        var targetName = metadata.targetName || key;
        var serviceIdentifier = (metadata.inject || metadata.multiInject);
        var target = new target_1.Target(literal_types_1.TargetTypeEnum.ClassProperty, targetName, serviceIdentifier);
        target.metadata = targetMetadata;
        targets.push(target);
    }
    var baseConstructor = Object.getPrototypeOf(constructorFunc.prototype).constructor;
    if (baseConstructor !== Object) {
        var baseTargets = getClassPropsAsTargets(metadataReader, baseConstructor);
        targets = __spreadArray(__spreadArray([], targets), baseTargets);
    }
    return targets;
}
function getBaseClassDependencyCount(metadataReader, func) {
    var baseConstructor = Object.getPrototypeOf(func.prototype).constructor;
    if (baseConstructor !== Object) {
        var baseConstructorName = serialization_1.getFunctionName(baseConstructor);
        var targets = getTargets(metadataReader, baseConstructorName, baseConstructor, true);
        var metadata = targets.map(function (t) {
            return t.metadata.filter(function (m) {
                return m.key === METADATA_KEY.UNMANAGED_TAG;
            });
        });
        var unmanagedCount = [].concat.apply([], metadata).length;
        var dependencyCount = targets.length - unmanagedCount;
        if (dependencyCount > 0) {
            return dependencyCount;
        }
        else {
            return getBaseClassDependencyCount(metadataReader, baseConstructor);
        }
    }
    else {
        return 0;
    }
}
exports.getBaseClassDependencyCount = getBaseClassDependencyCount;
function formatTargetMetadata(targetMetadata) {
    var targetMetadataMap = {};
    targetMetadata.forEach(function (m) {
        targetMetadataMap[m.key.toString()] = m.value;
    });
    return {
        inject: targetMetadataMap[METADATA_KEY.INJECT_TAG],
        multiInject: targetMetadataMap[METADATA_KEY.MULTI_INJECT_TAG],
        targetName: targetMetadataMap[METADATA_KEY.NAME_TAG],
        unmanaged: targetMetadataMap[METADATA_KEY.UNMANAGED_TAG]
    };
}
//# sourceMappingURL=reflection_utils.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/planning/request.js":
/*!********************************************************!*\
  !*** ./node_modules/inversify/lib/planning/request.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Request = void 0;
var id_1 = __webpack_require__(/*! ../utils/id */ "./node_modules/inversify/lib/utils/id.js");
var Request = (function () {
    function Request(serviceIdentifier, parentContext, parentRequest, bindings, target) {
        this.id = id_1.id();
        this.serviceIdentifier = serviceIdentifier;
        this.parentContext = parentContext;
        this.parentRequest = parentRequest;
        this.target = target;
        this.childRequests = [];
        this.bindings = (Array.isArray(bindings) ? bindings : [bindings]);
        this.requestScope = parentRequest === null
            ? new Map()
            : null;
    }
    Request.prototype.addChildRequest = function (serviceIdentifier, bindings, target) {
        var child = new Request(serviceIdentifier, this.parentContext, this, bindings, target);
        this.childRequests.push(child);
        return child;
    };
    return Request;
}());
exports.Request = Request;
//# sourceMappingURL=request.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/planning/target.js":
/*!*******************************************************!*\
  !*** ./node_modules/inversify/lib/planning/target.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Target = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var id_1 = __webpack_require__(/*! ../utils/id */ "./node_modules/inversify/lib/utils/id.js");
var metadata_1 = __webpack_require__(/*! ./metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var queryable_string_1 = __webpack_require__(/*! ./queryable_string */ "./node_modules/inversify/lib/planning/queryable_string.js");
var Target = (function () {
    function Target(type, name, serviceIdentifier, namedOrTagged) {
        this.id = id_1.id();
        this.type = type;
        this.serviceIdentifier = serviceIdentifier;
        this.name = new queryable_string_1.QueryableString(name || "");
        this.metadata = new Array();
        var metadataItem = null;
        if (typeof namedOrTagged === "string") {
            metadataItem = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, namedOrTagged);
        }
        else if (namedOrTagged instanceof metadata_1.Metadata) {
            metadataItem = namedOrTagged;
        }
        if (metadataItem !== null) {
            this.metadata.push(metadataItem);
        }
    }
    Target.prototype.hasTag = function (key) {
        for (var _i = 0, _a = this.metadata; _i < _a.length; _i++) {
            var m = _a[_i];
            if (m.key === key) {
                return true;
            }
        }
        return false;
    };
    Target.prototype.isArray = function () {
        return this.hasTag(METADATA_KEY.MULTI_INJECT_TAG);
    };
    Target.prototype.matchesArray = function (name) {
        return this.matchesTag(METADATA_KEY.MULTI_INJECT_TAG)(name);
    };
    Target.prototype.isNamed = function () {
        return this.hasTag(METADATA_KEY.NAMED_TAG);
    };
    Target.prototype.isTagged = function () {
        return this.metadata.some(function (metadata) { return METADATA_KEY.NON_CUSTOM_TAG_KEYS.every(function (key) { return metadata.key !== key; }); });
    };
    Target.prototype.isOptional = function () {
        return this.matchesTag(METADATA_KEY.OPTIONAL_TAG)(true);
    };
    Target.prototype.getNamedTag = function () {
        if (this.isNamed()) {
            return this.metadata.filter(function (m) { return m.key === METADATA_KEY.NAMED_TAG; })[0];
        }
        return null;
    };
    Target.prototype.getCustomTags = function () {
        if (this.isTagged()) {
            return this.metadata.filter(function (metadata) { return METADATA_KEY.NON_CUSTOM_TAG_KEYS.every(function (key) { return metadata.key !== key; }); });
        }
        else {
            return null;
        }
    };
    Target.prototype.matchesNamedTag = function (name) {
        return this.matchesTag(METADATA_KEY.NAMED_TAG)(name);
    };
    Target.prototype.matchesTag = function (key) {
        var _this = this;
        return function (value) {
            for (var _i = 0, _a = _this.metadata; _i < _a.length; _i++) {
                var m = _a[_i];
                if (m.key === key && m.value === value) {
                    return true;
                }
            }
            return false;
        };
    };
    return Target;
}());
exports.Target = Target;
//# sourceMappingURL=target.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/resolution/instantiation.js":
/*!****************************************************************!*\
  !*** ./node_modules/inversify/lib/resolution/instantiation.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveInstance = void 0;
var error_msgs_1 = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
function _injectProperties(instance, childRequests, resolveRequest) {
    var propertyInjectionsRequests = childRequests.filter(function (childRequest) {
        return (childRequest.target !== null &&
            childRequest.target.type === literal_types_1.TargetTypeEnum.ClassProperty);
    });
    var propertyInjections = propertyInjectionsRequests.map(resolveRequest);
    propertyInjectionsRequests.forEach(function (r, index) {
        var propertyName = "";
        propertyName = r.target.name.value();
        var injection = propertyInjections[index];
        instance[propertyName] = injection;
    });
    return instance;
}
function _createInstance(Func, injections) {
    return new (Func.bind.apply(Func, __spreadArray([void 0], injections)))();
}
function _postConstruct(constr, result) {
    if (Reflect.hasMetadata(METADATA_KEY.POST_CONSTRUCT, constr)) {
        var data = Reflect.getMetadata(METADATA_KEY.POST_CONSTRUCT, constr);
        try {
            result[data.value]();
        }
        catch (e) {
            throw new Error(error_msgs_1.POST_CONSTRUCT_ERROR(constr.name, e.message));
        }
    }
}
function resolveInstance(constr, childRequests, resolveRequest) {
    var result = null;
    if (childRequests.length > 0) {
        var constructorInjectionsRequests = childRequests.filter(function (childRequest) {
            return (childRequest.target !== null && childRequest.target.type === literal_types_1.TargetTypeEnum.ConstructorArgument);
        });
        var constructorInjections = constructorInjectionsRequests.map(resolveRequest);
        result = _createInstance(constr, constructorInjections);
        result = _injectProperties(result, childRequests, resolveRequest);
    }
    else {
        result = new constr();
    }
    _postConstruct(constr, result);
    return result;
}
exports.resolveInstance = resolveInstance;
//# sourceMappingURL=instantiation.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/resolution/resolver.js":
/*!***********************************************************!*\
  !*** ./node_modules/inversify/lib/resolution/resolver.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.resolve = void 0;
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
var exceptions_1 = __webpack_require__(/*! ../utils/exceptions */ "./node_modules/inversify/lib/utils/exceptions.js");
var serialization_1 = __webpack_require__(/*! ../utils/serialization */ "./node_modules/inversify/lib/utils/serialization.js");
var instantiation_1 = __webpack_require__(/*! ./instantiation */ "./node_modules/inversify/lib/resolution/instantiation.js");
var invokeFactory = function (factoryType, serviceIdentifier, fn) {
    try {
        return fn();
    }
    catch (error) {
        if (exceptions_1.isStackOverflowExeption(error)) {
            throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY_IN_FACTORY(factoryType, serviceIdentifier.toString()));
        }
        else {
            throw error;
        }
    }
};
var _resolveRequest = function (requestScope) {
    return function (request) {
        request.parentContext.setCurrentRequest(request);
        var bindings = request.bindings;
        var childRequests = request.childRequests;
        var targetIsAnArray = request.target && request.target.isArray();
        var targetParentIsNotAnArray = !request.parentRequest ||
            !request.parentRequest.target ||
            !request.target ||
            !request.parentRequest.target.matchesArray(request.target.serviceIdentifier);
        if (targetIsAnArray && targetParentIsNotAnArray) {
            return childRequests.map(function (childRequest) {
                var _f = _resolveRequest(requestScope);
                return _f(childRequest);
            });
        }
        else {
            var result = null;
            if (request.target.isOptional() && bindings.length === 0) {
                return undefined;
            }
            var binding_1 = bindings[0];
            var isSingleton = binding_1.scope === literal_types_1.BindingScopeEnum.Singleton;
            var isRequestSingleton = binding_1.scope === literal_types_1.BindingScopeEnum.Request;
            if (isSingleton && binding_1.activated) {
                return binding_1.cache;
            }
            if (isRequestSingleton &&
                requestScope !== null &&
                requestScope.has(binding_1.id)) {
                return requestScope.get(binding_1.id);
            }
            if (binding_1.type === literal_types_1.BindingTypeEnum.ConstantValue) {
                result = binding_1.cache;
                binding_1.activated = true;
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Function) {
                result = binding_1.cache;
                binding_1.activated = true;
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Constructor) {
                result = binding_1.implementationType;
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.DynamicValue && binding_1.dynamicValue !== null) {
                result = invokeFactory("toDynamicValue", binding_1.serviceIdentifier, function () { return binding_1.dynamicValue(request.parentContext); });
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Factory && binding_1.factory !== null) {
                result = invokeFactory("toFactory", binding_1.serviceIdentifier, function () { return binding_1.factory(request.parentContext); });
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Provider && binding_1.provider !== null) {
                result = invokeFactory("toProvider", binding_1.serviceIdentifier, function () { return binding_1.provider(request.parentContext); });
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Instance && binding_1.implementationType !== null) {
                result = instantiation_1.resolveInstance(binding_1.implementationType, childRequests, _resolveRequest(requestScope));
            }
            else {
                var serviceIdentifier = serialization_1.getServiceIdentifierAsString(request.serviceIdentifier);
                throw new Error(ERROR_MSGS.INVALID_BINDING_TYPE + " " + serviceIdentifier);
            }
            if (typeof binding_1.onActivation === "function") {
                result = binding_1.onActivation(request.parentContext, result);
            }
            if (isSingleton) {
                binding_1.cache = result;
                binding_1.activated = true;
            }
            if (isRequestSingleton &&
                requestScope !== null &&
                !requestScope.has(binding_1.id)) {
                requestScope.set(binding_1.id, result);
            }
            return result;
        }
    };
};
function resolve(context) {
    var _f = _resolveRequest(context.plan.rootRequest.requestScope);
    return _f(context.plan.rootRequest);
}
exports.resolve = resolve;
//# sourceMappingURL=resolver.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/syntax/binding_in_syntax.js":
/*!****************************************************************!*\
  !*** ./node_modules/inversify/lib/syntax/binding_in_syntax.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BindingInSyntax = void 0;
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
var binding_when_on_syntax_1 = __webpack_require__(/*! ./binding_when_on_syntax */ "./node_modules/inversify/lib/syntax/binding_when_on_syntax.js");
var BindingInSyntax = (function () {
    function BindingInSyntax(binding) {
        this._binding = binding;
    }
    BindingInSyntax.prototype.inRequestScope = function () {
        this._binding.scope = literal_types_1.BindingScopeEnum.Request;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingInSyntax.prototype.inSingletonScope = function () {
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingInSyntax.prototype.inTransientScope = function () {
        this._binding.scope = literal_types_1.BindingScopeEnum.Transient;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    return BindingInSyntax;
}());
exports.BindingInSyntax = BindingInSyntax;
//# sourceMappingURL=binding_in_syntax.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/syntax/binding_in_when_on_syntax.js":
/*!************************************************************************!*\
  !*** ./node_modules/inversify/lib/syntax/binding_in_when_on_syntax.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BindingInWhenOnSyntax = void 0;
var binding_in_syntax_1 = __webpack_require__(/*! ./binding_in_syntax */ "./node_modules/inversify/lib/syntax/binding_in_syntax.js");
var binding_on_syntax_1 = __webpack_require__(/*! ./binding_on_syntax */ "./node_modules/inversify/lib/syntax/binding_on_syntax.js");
var binding_when_syntax_1 = __webpack_require__(/*! ./binding_when_syntax */ "./node_modules/inversify/lib/syntax/binding_when_syntax.js");
var BindingInWhenOnSyntax = (function () {
    function BindingInWhenOnSyntax(binding) {
        this._binding = binding;
        this._bindingWhenSyntax = new binding_when_syntax_1.BindingWhenSyntax(this._binding);
        this._bindingOnSyntax = new binding_on_syntax_1.BindingOnSyntax(this._binding);
        this._bindingInSyntax = new binding_in_syntax_1.BindingInSyntax(binding);
    }
    BindingInWhenOnSyntax.prototype.inRequestScope = function () {
        return this._bindingInSyntax.inRequestScope();
    };
    BindingInWhenOnSyntax.prototype.inSingletonScope = function () {
        return this._bindingInSyntax.inSingletonScope();
    };
    BindingInWhenOnSyntax.prototype.inTransientScope = function () {
        return this._bindingInSyntax.inTransientScope();
    };
    BindingInWhenOnSyntax.prototype.when = function (constraint) {
        return this._bindingWhenSyntax.when(constraint);
    };
    BindingInWhenOnSyntax.prototype.whenTargetNamed = function (name) {
        return this._bindingWhenSyntax.whenTargetNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenTargetIsDefault = function () {
        return this._bindingWhenSyntax.whenTargetIsDefault();
    };
    BindingInWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenTargetTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenInjectedInto = function (parent) {
        return this._bindingWhenSyntax.whenInjectedInto(parent);
    };
    BindingInWhenOnSyntax.prototype.whenParentNamed = function (name) {
        return this._bindingWhenSyntax.whenParentNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenParentTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenNoAncestorNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);
    };
    BindingInWhenOnSyntax.prototype.onActivation = function (handler) {
        return this._bindingOnSyntax.onActivation(handler);
    };
    return BindingInWhenOnSyntax;
}());
exports.BindingInWhenOnSyntax = BindingInWhenOnSyntax;
//# sourceMappingURL=binding_in_when_on_syntax.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/syntax/binding_on_syntax.js":
/*!****************************************************************!*\
  !*** ./node_modules/inversify/lib/syntax/binding_on_syntax.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BindingOnSyntax = void 0;
var binding_when_syntax_1 = __webpack_require__(/*! ./binding_when_syntax */ "./node_modules/inversify/lib/syntax/binding_when_syntax.js");
var BindingOnSyntax = (function () {
    function BindingOnSyntax(binding) {
        this._binding = binding;
    }
    BindingOnSyntax.prototype.onActivation = function (handler) {
        this._binding.onActivation = handler;
        return new binding_when_syntax_1.BindingWhenSyntax(this._binding);
    };
    return BindingOnSyntax;
}());
exports.BindingOnSyntax = BindingOnSyntax;
//# sourceMappingURL=binding_on_syntax.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/syntax/binding_to_syntax.js":
/*!****************************************************************!*\
  !*** ./node_modules/inversify/lib/syntax/binding_to_syntax.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BindingToSyntax = void 0;
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
var binding_in_when_on_syntax_1 = __webpack_require__(/*! ./binding_in_when_on_syntax */ "./node_modules/inversify/lib/syntax/binding_in_when_on_syntax.js");
var binding_when_on_syntax_1 = __webpack_require__(/*! ./binding_when_on_syntax */ "./node_modules/inversify/lib/syntax/binding_when_on_syntax.js");
var BindingToSyntax = (function () {
    function BindingToSyntax(binding) {
        this._binding = binding;
    }
    BindingToSyntax.prototype.to = function (constructor) {
        this._binding.type = literal_types_1.BindingTypeEnum.Instance;
        this._binding.implementationType = constructor;
        return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toSelf = function () {
        if (typeof this._binding.serviceIdentifier !== "function") {
            throw new Error("" + ERROR_MSGS.INVALID_TO_SELF_VALUE);
        }
        var self = this._binding.serviceIdentifier;
        return this.to(self);
    };
    BindingToSyntax.prototype.toConstantValue = function (value) {
        this._binding.type = literal_types_1.BindingTypeEnum.ConstantValue;
        this._binding.cache = value;
        this._binding.dynamicValue = null;
        this._binding.implementationType = null;
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toDynamicValue = function (func) {
        this._binding.type = literal_types_1.BindingTypeEnum.DynamicValue;
        this._binding.cache = null;
        this._binding.dynamicValue = func;
        this._binding.implementationType = null;
        return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toConstructor = function (constructor) {
        this._binding.type = literal_types_1.BindingTypeEnum.Constructor;
        this._binding.implementationType = constructor;
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toFactory = function (factory) {
        this._binding.type = literal_types_1.BindingTypeEnum.Factory;
        this._binding.factory = factory;
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toFunction = function (func) {
        if (typeof func !== "function") {
            throw new Error(ERROR_MSGS.INVALID_FUNCTION_BINDING);
        }
        var bindingWhenOnSyntax = this.toConstantValue(func);
        this._binding.type = literal_types_1.BindingTypeEnum.Function;
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return bindingWhenOnSyntax;
    };
    BindingToSyntax.prototype.toAutoFactory = function (serviceIdentifier) {
        this._binding.type = literal_types_1.BindingTypeEnum.Factory;
        this._binding.factory = function (context) {
            var autofactory = function () { return context.container.get(serviceIdentifier); };
            return autofactory;
        };
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toProvider = function (provider) {
        this._binding.type = literal_types_1.BindingTypeEnum.Provider;
        this._binding.provider = provider;
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toService = function (service) {
        this.toDynamicValue(function (context) { return context.container.get(service); });
    };
    return BindingToSyntax;
}());
exports.BindingToSyntax = BindingToSyntax;
//# sourceMappingURL=binding_to_syntax.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/syntax/binding_when_on_syntax.js":
/*!*********************************************************************!*\
  !*** ./node_modules/inversify/lib/syntax/binding_when_on_syntax.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BindingWhenOnSyntax = void 0;
var binding_on_syntax_1 = __webpack_require__(/*! ./binding_on_syntax */ "./node_modules/inversify/lib/syntax/binding_on_syntax.js");
var binding_when_syntax_1 = __webpack_require__(/*! ./binding_when_syntax */ "./node_modules/inversify/lib/syntax/binding_when_syntax.js");
var BindingWhenOnSyntax = (function () {
    function BindingWhenOnSyntax(binding) {
        this._binding = binding;
        this._bindingWhenSyntax = new binding_when_syntax_1.BindingWhenSyntax(this._binding);
        this._bindingOnSyntax = new binding_on_syntax_1.BindingOnSyntax(this._binding);
    }
    BindingWhenOnSyntax.prototype.when = function (constraint) {
        return this._bindingWhenSyntax.when(constraint);
    };
    BindingWhenOnSyntax.prototype.whenTargetNamed = function (name) {
        return this._bindingWhenSyntax.whenTargetNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenTargetIsDefault = function () {
        return this._bindingWhenSyntax.whenTargetIsDefault();
    };
    BindingWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenTargetTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenInjectedInto = function (parent) {
        return this._bindingWhenSyntax.whenInjectedInto(parent);
    };
    BindingWhenOnSyntax.prototype.whenParentNamed = function (name) {
        return this._bindingWhenSyntax.whenParentNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenParentTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenNoAncestorNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);
    };
    BindingWhenOnSyntax.prototype.onActivation = function (handler) {
        return this._bindingOnSyntax.onActivation(handler);
    };
    return BindingWhenOnSyntax;
}());
exports.BindingWhenOnSyntax = BindingWhenOnSyntax;
//# sourceMappingURL=binding_when_on_syntax.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/syntax/binding_when_syntax.js":
/*!******************************************************************!*\
  !*** ./node_modules/inversify/lib/syntax/binding_when_syntax.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BindingWhenSyntax = void 0;
var binding_on_syntax_1 = __webpack_require__(/*! ./binding_on_syntax */ "./node_modules/inversify/lib/syntax/binding_on_syntax.js");
var constraint_helpers_1 = __webpack_require__(/*! ./constraint_helpers */ "./node_modules/inversify/lib/syntax/constraint_helpers.js");
var BindingWhenSyntax = (function () {
    function BindingWhenSyntax(binding) {
        this._binding = binding;
    }
    BindingWhenSyntax.prototype.when = function (constraint) {
        this._binding.constraint = constraint;
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetNamed = function (name) {
        this._binding.constraint = constraint_helpers_1.namedConstraint(name);
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetIsDefault = function () {
        this._binding.constraint = function (request) {
            var targetIsDefault = (request.target !== null) &&
                (!request.target.isNamed()) &&
                (!request.target.isTagged());
            return targetIsDefault;
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetTagged = function (tag, value) {
        this._binding.constraint = constraint_helpers_1.taggedConstraint(tag)(value);
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenInjectedInto = function (parent) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.typeConstraint(parent)(request.parentRequest);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenParentNamed = function (name) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.namedConstraint(name)(request.parentRequest);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenParentTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.taggedConstraint(tag)(value)(request.parentRequest);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorNamed = function (name) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorNamed = function (name) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    return BindingWhenSyntax;
}());
exports.BindingWhenSyntax = BindingWhenSyntax;
//# sourceMappingURL=binding_when_syntax.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/syntax/constraint_helpers.js":
/*!*****************************************************************!*\
  !*** ./node_modules/inversify/lib/syntax/constraint_helpers.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.typeConstraint = exports.namedConstraint = exports.taggedConstraint = exports.traverseAncerstors = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var traverseAncerstors = function (request, constraint) {
    var parent = request.parentRequest;
    if (parent !== null) {
        return constraint(parent) ? true : traverseAncerstors(parent, constraint);
    }
    else {
        return false;
    }
};
exports.traverseAncerstors = traverseAncerstors;
var taggedConstraint = function (key) { return function (value) {
    var constraint = function (request) {
        return request !== null && request.target !== null && request.target.matchesTag(key)(value);
    };
    constraint.metaData = new metadata_1.Metadata(key, value);
    return constraint;
}; };
exports.taggedConstraint = taggedConstraint;
var namedConstraint = taggedConstraint(METADATA_KEY.NAMED_TAG);
exports.namedConstraint = namedConstraint;
var typeConstraint = function (type) { return function (request) {
    var binding = null;
    if (request !== null) {
        binding = request.bindings[0];
        if (typeof type === "string") {
            var serviceIdentifier = binding.serviceIdentifier;
            return serviceIdentifier === type;
        }
        else {
            var constructor = request.bindings[0].implementationType;
            return type === constructor;
        }
    }
    return false;
}; };
exports.typeConstraint = typeConstraint;
//# sourceMappingURL=constraint_helpers.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/utils/binding_utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/inversify/lib/utils/binding_utils.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.multiBindToService = void 0;
var multiBindToService = function (container) {
    return function (service) {
        return function () {
            var types = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                types[_i] = arguments[_i];
            }
            return types.forEach(function (t) { return container.bind(t).toService(service); });
        };
    };
};
exports.multiBindToService = multiBindToService;
//# sourceMappingURL=binding_utils.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/utils/exceptions.js":
/*!********************************************************!*\
  !*** ./node_modules/inversify/lib/utils/exceptions.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isStackOverflowExeption = void 0;
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
function isStackOverflowExeption(error) {
    return (error instanceof RangeError ||
        error.message === ERROR_MSGS.STACK_OVERFLOW);
}
exports.isStackOverflowExeption = isStackOverflowExeption;
//# sourceMappingURL=exceptions.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/utils/id.js":
/*!************************************************!*\
  !*** ./node_modules/inversify/lib/utils/id.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.id = void 0;
var idCounter = 0;
function id() {
    return idCounter++;
}
exports.id = id;
//# sourceMappingURL=id.js.map

/***/ }),

/***/ "./node_modules/inversify/lib/utils/serialization.js":
/*!***********************************************************!*\
  !*** ./node_modules/inversify/lib/utils/serialization.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.circularDependencyToException = exports.listMetadataForTarget = exports.listRegisteredBindingsForServiceIdentifier = exports.getServiceIdentifierAsString = exports.getFunctionName = void 0;
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
function getServiceIdentifierAsString(serviceIdentifier) {
    if (typeof serviceIdentifier === "function") {
        var _serviceIdentifier = serviceIdentifier;
        return _serviceIdentifier.name;
    }
    else if (typeof serviceIdentifier === "symbol") {
        return serviceIdentifier.toString();
    }
    else {
        var _serviceIdentifier = serviceIdentifier;
        return _serviceIdentifier;
    }
}
exports.getServiceIdentifierAsString = getServiceIdentifierAsString;
function listRegisteredBindingsForServiceIdentifier(container, serviceIdentifier, getBindings) {
    var registeredBindingsList = "";
    var registeredBindings = getBindings(container, serviceIdentifier);
    if (registeredBindings.length !== 0) {
        registeredBindingsList = "\nRegistered bindings:";
        registeredBindings.forEach(function (binding) {
            var name = "Object";
            if (binding.implementationType !== null) {
                name = getFunctionName(binding.implementationType);
            }
            registeredBindingsList = registeredBindingsList + "\n " + name;
            if (binding.constraint.metaData) {
                registeredBindingsList = registeredBindingsList + " - " + binding.constraint.metaData;
            }
        });
    }
    return registeredBindingsList;
}
exports.listRegisteredBindingsForServiceIdentifier = listRegisteredBindingsForServiceIdentifier;
function alreadyDependencyChain(request, serviceIdentifier) {
    if (request.parentRequest === null) {
        return false;
    }
    else if (request.parentRequest.serviceIdentifier === serviceIdentifier) {
        return true;
    }
    else {
        return alreadyDependencyChain(request.parentRequest, serviceIdentifier);
    }
}
function dependencyChainToString(request) {
    function _createStringArr(req, result) {
        if (result === void 0) { result = []; }
        var serviceIdentifier = getServiceIdentifierAsString(req.serviceIdentifier);
        result.push(serviceIdentifier);
        if (req.parentRequest !== null) {
            return _createStringArr(req.parentRequest, result);
        }
        return result;
    }
    var stringArr = _createStringArr(request);
    return stringArr.reverse().join(" --> ");
}
function circularDependencyToException(request) {
    request.childRequests.forEach(function (childRequest) {
        if (alreadyDependencyChain(childRequest, childRequest.serviceIdentifier)) {
            var services = dependencyChainToString(childRequest);
            throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY + " " + services);
        }
        else {
            circularDependencyToException(childRequest);
        }
    });
}
exports.circularDependencyToException = circularDependencyToException;
function listMetadataForTarget(serviceIdentifierString, target) {
    if (target.isTagged() || target.isNamed()) {
        var m_1 = "";
        var namedTag = target.getNamedTag();
        var otherTags = target.getCustomTags();
        if (namedTag !== null) {
            m_1 += namedTag.toString() + "\n";
        }
        if (otherTags !== null) {
            otherTags.forEach(function (tag) {
                m_1 += tag.toString() + "\n";
            });
        }
        return " " + serviceIdentifierString + "\n " + serviceIdentifierString + " - " + m_1;
    }
    else {
        return " " + serviceIdentifierString;
    }
}
exports.listMetadataForTarget = listMetadataForTarget;
function getFunctionName(v) {
    if (v.name) {
        return v.name;
    }
    else {
        var name_1 = v.toString();
        var match = name_1.match(/^function\s*([^\s(]+)/);
        return match ? match[1] : "Anonymous function: " + name_1;
    }
}
exports.getFunctionName = getFunctionName;
//# sourceMappingURL=serialization.js.map

/***/ }),

/***/ "./node_modules/js-base64/base64.mjs":
/*!*******************************************!*\
  !*** ./node_modules/js-base64/base64.mjs ***!
  \*******************************************/
/*! exports provided: version, VERSION, atob, atobPolyfill, btoa, btoaPolyfill, fromBase64, toBase64, utob, encode, encodeURI, encodeURL, btou, decode, isValid, fromUint8Array, toUint8Array, extendString, extendUint8Array, extendBuiltins, Base64 */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "version", function() { return version; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atob", function() { return _atob; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atobPolyfill", function() { return atobPolyfill; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "btoa", function() { return _btoa; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "btoaPolyfill", function() { return btoaPolyfill; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromBase64", function() { return decode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toBase64", function() { return encode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utob", function() { return utob; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encode", function() { return encode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encodeURI", function() { return encodeURI; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encodeURL", function() { return encodeURI; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "btou", function() { return btou; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decode", function() { return decode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValid", function() { return isValid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromUint8Array", function() { return fromUint8Array; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toUint8Array", function() { return toUint8Array; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extendString", function() { return extendString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extendUint8Array", function() { return extendUint8Array; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extendBuiltins", function() { return extendBuiltins; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Base64", function() { return gBase64; });
/**
 *  base64.ts
 *
 *  Licensed under the BSD 3-Clause License.
 *    http://opensource.org/licenses/BSD-3-Clause
 *
 *  References:
 *    http://en.wikipedia.org/wiki/Base64
 *
 * @author Dan Kogai (https://github.com/dankogai)
 */
const version = '3.7.2';
/**
 * @deprecated use lowercase `version`.
 */
const VERSION = version;
const _hasatob = typeof atob === 'function';
const _hasbtoa = typeof btoa === 'function';
const _hasBuffer = typeof Buffer === 'function';
const _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;
const _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;
const b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
const b64chs = Array.prototype.slice.call(b64ch);
const b64tab = ((a) => {
    let tab = {};
    a.forEach((c, i) => tab[c] = i);
    return tab;
})(b64chs);
const b64re = /^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/;
const _fromCC = String.fromCharCode.bind(String);
const _U8Afrom = typeof Uint8Array.from === 'function'
    ? Uint8Array.from.bind(Uint8Array)
    : (it, fn = (x) => x) => new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));
const _mkUriSafe = (src) => src
    .replace(/=/g, '').replace(/[+\/]/g, (m0) => m0 == '+' ? '-' : '_');
const _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\+\/]/g, '');
/**
 * polyfill version of `btoa`
 */
const btoaPolyfill = (bin) => {
    // console.log('polyfilled');
    let u32, c0, c1, c2, asc = '';
    const pad = bin.length % 3;
    for (let i = 0; i < bin.length;) {
        if ((c0 = bin.charCodeAt(i++)) > 255 ||
            (c1 = bin.charCodeAt(i++)) > 255 ||
            (c2 = bin.charCodeAt(i++)) > 255)
            throw new TypeError('invalid character found');
        u32 = (c0 << 16) | (c1 << 8) | c2;
        asc += b64chs[u32 >> 18 & 63]
            + b64chs[u32 >> 12 & 63]
            + b64chs[u32 >> 6 & 63]
            + b64chs[u32 & 63];
    }
    return pad ? asc.slice(0, pad - 3) + "===".substring(pad) : asc;
};
/**
 * does what `window.btoa` of web browsers do.
 * @param {String} bin binary string
 * @returns {string} Base64-encoded string
 */
const _btoa = _hasbtoa ? (bin) => btoa(bin)
    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')
        : btoaPolyfill;
const _fromUint8Array = _hasBuffer
    ? (u8a) => Buffer.from(u8a).toString('base64')
    : (u8a) => {
        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326
        const maxargs = 0x1000;
        let strs = [];
        for (let i = 0, l = u8a.length; i < l; i += maxargs) {
            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));
        }
        return _btoa(strs.join(''));
    };
/**
 * converts a Uint8Array to a Base64 string.
 * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5
 * @returns {string} Base64 string
 */
const fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);
// This trick is found broken https://github.com/dankogai/js-base64/issues/130
// const utob = (src: string) => unescape(encodeURIComponent(src));
// reverting good old fationed regexp
const cb_utob = (c) => {
    if (c.length < 2) {
        var cc = c.charCodeAt(0);
        return cc < 0x80 ? c
            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))
                + _fromCC(0x80 | (cc & 0x3f)))
                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))
                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))
                    + _fromCC(0x80 | (cc & 0x3f)));
    }
    else {
        var cc = 0x10000
            + (c.charCodeAt(0) - 0xD800) * 0x400
            + (c.charCodeAt(1) - 0xDC00);
        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))
            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))
            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))
            + _fromCC(0x80 | (cc & 0x3f)));
    }
};
const re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;
/**
 * @deprecated should have been internal use only.
 * @param {string} src UTF-8 string
 * @returns {string} UTF-16 string
 */
const utob = (u) => u.replace(re_utob, cb_utob);
//
const _encode = _hasBuffer
    ? (s) => Buffer.from(s, 'utf8').toString('base64')
    : _TE
        ? (s) => _fromUint8Array(_TE.encode(s))
        : (s) => _btoa(utob(s));
/**
 * converts a UTF-8-encoded string to a Base64 string.
 * @param {boolean} [urlsafe] if `true` make the result URL-safe
 * @returns {string} Base64 string
 */
const encode = (src, urlsafe = false) => urlsafe
    ? _mkUriSafe(_encode(src))
    : _encode(src);
/**
 * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.
 * @returns {string} Base64 string
 */
const encodeURI = (src) => encode(src, true);
// This trick is found broken https://github.com/dankogai/js-base64/issues/130
// const btou = (src: string) => decodeURIComponent(escape(src));
// reverting good old fationed regexp
const re_btou = /[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g;
const cb_btou = (cccc) => {
    switch (cccc.length) {
        case 4:
            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)
                | ((0x3f & cccc.charCodeAt(1)) << 12)
                | ((0x3f & cccc.charCodeAt(2)) << 6)
                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;
            return (_fromCC((offset >>> 10) + 0xD800)
                + _fromCC((offset & 0x3FF) + 0xDC00));
        case 3:
            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)
                | ((0x3f & cccc.charCodeAt(1)) << 6)
                | (0x3f & cccc.charCodeAt(2)));
        default:
            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)
                | (0x3f & cccc.charCodeAt(1)));
    }
};
/**
 * @deprecated should have been internal use only.
 * @param {string} src UTF-16 string
 * @returns {string} UTF-8 string
 */
const btou = (b) => b.replace(re_btou, cb_btou);
/**
 * polyfill version of `atob`
 */
const atobPolyfill = (asc) => {
    // console.log('polyfilled');
    asc = asc.replace(/\s+/g, '');
    if (!b64re.test(asc))
        throw new TypeError('malformed base64.');
    asc += '=='.slice(2 - (asc.length & 3));
    let u24, bin = '', r1, r2;
    for (let i = 0; i < asc.length;) {
        u24 = b64tab[asc.charAt(i++)] << 18
            | b64tab[asc.charAt(i++)] << 12
            | (r1 = b64tab[asc.charAt(i++)]) << 6
            | (r2 = b64tab[asc.charAt(i++)]);
        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)
            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)
                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);
    }
    return bin;
};
/**
 * does what `window.atob` of web browsers do.
 * @param {String} asc Base64-encoded string
 * @returns {string} binary string
 */
const _atob = _hasatob ? (asc) => atob(_tidyB64(asc))
    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')
        : atobPolyfill;
//
const _toUint8Array = _hasBuffer
    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))
    : (a) => _U8Afrom(_atob(a), c => c.charCodeAt(0));
/**
 * converts a Base64 string to a Uint8Array.
 */
const toUint8Array = (a) => _toUint8Array(_unURI(a));
//
const _decode = _hasBuffer
    ? (a) => Buffer.from(a, 'base64').toString('utf8')
    : _TD
        ? (a) => _TD.decode(_toUint8Array(a))
        : (a) => btou(_atob(a));
const _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));
/**
 * converts a Base64 string to a UTF-8 string.
 * @param {String} src Base64 string.  Both normal and URL-safe are supported
 * @returns {string} UTF-8 string
 */
const decode = (src) => _decode(_unURI(src));
/**
 * check if a value is a valid Base64 string
 * @param {String} src a value to check
  */
const isValid = (src) => {
    if (typeof src !== 'string')
        return false;
    const s = src.replace(/\s+/g, '').replace(/={0,2}$/, '');
    return !/[^\s0-9a-zA-Z\+/]/.test(s) || !/[^\s0-9a-zA-Z\-_]/.test(s);
};
//
const _noEnum = (v) => {
    return {
        value: v, enumerable: false, writable: true, configurable: true
    };
};
/**
 * extend String.prototype with relevant methods
 */
const extendString = function () {
    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));
    _add('fromBase64', function () { return decode(this); });
    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });
    _add('toBase64URI', function () { return encode(this, true); });
    _add('toBase64URL', function () { return encode(this, true); });
    _add('toUint8Array', function () { return toUint8Array(this); });
};
/**
 * extend Uint8Array.prototype with relevant methods
 */
const extendUint8Array = function () {
    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));
    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });
    _add('toBase64URI', function () { return fromUint8Array(this, true); });
    _add('toBase64URL', function () { return fromUint8Array(this, true); });
};
/**
 * extend Builtin prototypes with relevant methods
 */
const extendBuiltins = () => {
    extendString();
    extendUint8Array();
};
const gBase64 = {
    version: version,
    VERSION: VERSION,
    atob: _atob,
    atobPolyfill: atobPolyfill,
    btoa: _btoa,
    btoaPolyfill: btoaPolyfill,
    fromBase64: decode,
    toBase64: encode,
    encode: encode,
    encodeURI: encodeURI,
    encodeURL: encodeURI,
    utob: utob,
    btou: btou,
    decode: decode,
    isValid: isValid,
    fromUint8Array: fromUint8Array,
    toUint8Array: toUint8Array,
    extendString: extendString,
    extendUint8Array: extendUint8Array,
    extendBuiltins: extendBuiltins,
};
// makecjs:CUT //




















// and finally,



/***/ }),

/***/ "./node_modules/json-stringify-safe/stringify.js":
/*!*******************************************************!*\
  !*** ./node_modules/json-stringify-safe/stringify.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports = module.exports = stringify
exports.getSerialize = serializer

function stringify(obj, replacer, spaces, cycleReplacer) {
  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)
}

function serializer(replacer, cycleReplacer) {
  var stack = [], keys = []

  if (cycleReplacer == null) cycleReplacer = function(key, value) {
    if (stack[0] === value) return "[Circular ~]"
    return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]"
  }

  return function(key, value) {
    if (stack.length > 0) {
      var thisPos = stack.indexOf(this)
      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)
      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)
      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)
    }
    else stack.push(value)

    return replacer == null ? value : replacer.call(this, key, value)
  }
}


/***/ }),

/***/ "./node_modules/luxon/build/cjs-browser/luxon.js":
/*!*******************************************************!*\
  !*** ./node_modules/luxon/build/cjs-browser/luxon.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', { value: true });

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) _setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class);
  };

  return _wrapNativeSuper(Class);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(n);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _createForOfIteratorHelperLoose(o) {
  var i = 0;

  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) return function () {
      if (i >= o.length) return {
        done: true
      };
      return {
        done: false,
        value: o[i++]
      };
    };
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  i = o[Symbol.iterator]();
  return i.next.bind(i);
}

// these aren't really private, but nor are they really useful to document

/**
 * @private
 */
var LuxonError = /*#__PURE__*/function (_Error) {
  _inheritsLoose(LuxonError, _Error);

  function LuxonError() {
    return _Error.apply(this, arguments) || this;
  }

  return LuxonError;
}( /*#__PURE__*/_wrapNativeSuper(Error));
/**
 * @private
 */


var InvalidDateTimeError = /*#__PURE__*/function (_LuxonError) {
  _inheritsLoose(InvalidDateTimeError, _LuxonError);

  function InvalidDateTimeError(reason) {
    return _LuxonError.call(this, "Invalid DateTime: " + reason.toMessage()) || this;
  }

  return InvalidDateTimeError;
}(LuxonError);
/**
 * @private
 */

var InvalidIntervalError = /*#__PURE__*/function (_LuxonError2) {
  _inheritsLoose(InvalidIntervalError, _LuxonError2);

  function InvalidIntervalError(reason) {
    return _LuxonError2.call(this, "Invalid Interval: " + reason.toMessage()) || this;
  }

  return InvalidIntervalError;
}(LuxonError);
/**
 * @private
 */

var InvalidDurationError = /*#__PURE__*/function (_LuxonError3) {
  _inheritsLoose(InvalidDurationError, _LuxonError3);

  function InvalidDurationError(reason) {
    return _LuxonError3.call(this, "Invalid Duration: " + reason.toMessage()) || this;
  }

  return InvalidDurationError;
}(LuxonError);
/**
 * @private
 */

var ConflictingSpecificationError = /*#__PURE__*/function (_LuxonError4) {
  _inheritsLoose(ConflictingSpecificationError, _LuxonError4);

  function ConflictingSpecificationError() {
    return _LuxonError4.apply(this, arguments) || this;
  }

  return ConflictingSpecificationError;
}(LuxonError);
/**
 * @private
 */

var InvalidUnitError = /*#__PURE__*/function (_LuxonError5) {
  _inheritsLoose(InvalidUnitError, _LuxonError5);

  function InvalidUnitError(unit) {
    return _LuxonError5.call(this, "Invalid unit " + unit) || this;
  }

  return InvalidUnitError;
}(LuxonError);
/**
 * @private
 */

var InvalidArgumentError = /*#__PURE__*/function (_LuxonError6) {
  _inheritsLoose(InvalidArgumentError, _LuxonError6);

  function InvalidArgumentError() {
    return _LuxonError6.apply(this, arguments) || this;
  }

  return InvalidArgumentError;
}(LuxonError);
/**
 * @private
 */

var ZoneIsAbstractError = /*#__PURE__*/function (_LuxonError7) {
  _inheritsLoose(ZoneIsAbstractError, _LuxonError7);

  function ZoneIsAbstractError() {
    return _LuxonError7.call(this, "Zone is an abstract class") || this;
  }

  return ZoneIsAbstractError;
}(LuxonError);

/**
 * @private
 */
var n = "numeric",
    s = "short",
    l = "long";
var DATE_SHORT = {
  year: n,
  month: n,
  day: n
};
var DATE_MED = {
  year: n,
  month: s,
  day: n
};
var DATE_MED_WITH_WEEKDAY = {
  year: n,
  month: s,
  day: n,
  weekday: s
};
var DATE_FULL = {
  year: n,
  month: l,
  day: n
};
var DATE_HUGE = {
  year: n,
  month: l,
  day: n,
  weekday: l
};
var TIME_SIMPLE = {
  hour: n,
  minute: n
};
var TIME_WITH_SECONDS = {
  hour: n,
  minute: n,
  second: n
};
var TIME_WITH_SHORT_OFFSET = {
  hour: n,
  minute: n,
  second: n,
  timeZoneName: s
};
var TIME_WITH_LONG_OFFSET = {
  hour: n,
  minute: n,
  second: n,
  timeZoneName: l
};
var TIME_24_SIMPLE = {
  hour: n,
  minute: n,
  hour12: false
};
/**
 * {@link toLocaleString}; format like '09:30:23', always 24-hour.
 */

var TIME_24_WITH_SECONDS = {
  hour: n,
  minute: n,
  second: n,
  hour12: false
};
/**
 * {@link toLocaleString}; format like '09:30:23 EDT', always 24-hour.
 */

var TIME_24_WITH_SHORT_OFFSET = {
  hour: n,
  minute: n,
  second: n,
  hour12: false,
  timeZoneName: s
};
/**
 * {@link toLocaleString}; format like '09:30:23 Eastern Daylight Time', always 24-hour.
 */

var TIME_24_WITH_LONG_OFFSET = {
  hour: n,
  minute: n,
  second: n,
  hour12: false,
  timeZoneName: l
};
/**
 * {@link toLocaleString}; format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.
 */

var DATETIME_SHORT = {
  year: n,
  month: n,
  day: n,
  hour: n,
  minute: n
};
/**
 * {@link toLocaleString}; format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.
 */

var DATETIME_SHORT_WITH_SECONDS = {
  year: n,
  month: n,
  day: n,
  hour: n,
  minute: n,
  second: n
};
var DATETIME_MED = {
  year: n,
  month: s,
  day: n,
  hour: n,
  minute: n
};
var DATETIME_MED_WITH_SECONDS = {
  year: n,
  month: s,
  day: n,
  hour: n,
  minute: n,
  second: n
};
var DATETIME_MED_WITH_WEEKDAY = {
  year: n,
  month: s,
  day: n,
  weekday: s,
  hour: n,
  minute: n
};
var DATETIME_FULL = {
  year: n,
  month: l,
  day: n,
  hour: n,
  minute: n,
  timeZoneName: s
};
var DATETIME_FULL_WITH_SECONDS = {
  year: n,
  month: l,
  day: n,
  hour: n,
  minute: n,
  second: n,
  timeZoneName: s
};
var DATETIME_HUGE = {
  year: n,
  month: l,
  day: n,
  weekday: l,
  hour: n,
  minute: n,
  timeZoneName: l
};
var DATETIME_HUGE_WITH_SECONDS = {
  year: n,
  month: l,
  day: n,
  weekday: l,
  hour: n,
  minute: n,
  second: n,
  timeZoneName: l
};

/*
  This is just a junk drawer, containing anything used across multiple classes.
  Because Luxon is small(ish), this should stay small and we won't worry about splitting
  it up into, say, parsingUtil.js and basicUtil.js and so on. But they are divided up by feature area.
*/
/**
 * @private
 */
// TYPES

function isUndefined(o) {
  return typeof o === "undefined";
}
function isNumber(o) {
  return typeof o === "number";
}
function isInteger(o) {
  return typeof o === "number" && o % 1 === 0;
}
function isString(o) {
  return typeof o === "string";
}
function isDate(o) {
  return Object.prototype.toString.call(o) === "[object Date]";
} // CAPABILITIES

function hasIntl() {
  try {
    return typeof Intl !== "undefined" && Intl.DateTimeFormat;
  } catch (e) {
    return false;
  }
}
function hasFormatToParts() {
  return !isUndefined(Intl.DateTimeFormat.prototype.formatToParts);
}
function hasRelative() {
  try {
    return typeof Intl !== "undefined" && !!Intl.RelativeTimeFormat;
  } catch (e) {
    return false;
  }
} // OBJECTS AND ARRAYS

function maybeArray(thing) {
  return Array.isArray(thing) ? thing : [thing];
}
function bestBy(arr, by, compare) {
  if (arr.length === 0) {
    return undefined;
  }

  return arr.reduce(function (best, next) {
    var pair = [by(next), next];

    if (!best) {
      return pair;
    } else if (compare(best[0], pair[0]) === best[0]) {
      return best;
    } else {
      return pair;
    }
  }, null)[1];
}
function pick(obj, keys) {
  return keys.reduce(function (a, k) {
    a[k] = obj[k];
    return a;
  }, {});
}
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
} // NUMBERS AND STRINGS

function integerBetween(thing, bottom, top) {
  return isInteger(thing) && thing >= bottom && thing <= top;
} // x % n but takes the sign of n instead of x

function floorMod(x, n) {
  return x - n * Math.floor(x / n);
}
function padStart(input, n) {
  if (n === void 0) {
    n = 2;
  }

  var minus = input < 0 ? "-" : "";
  var target = minus ? input * -1 : input;
  var result;

  if (target.toString().length < n) {
    result = ("0".repeat(n) + target).slice(-n);
  } else {
    result = target.toString();
  }

  return "" + minus + result;
}
function parseInteger(string) {
  if (isUndefined(string) || string === null || string === "") {
    return undefined;
  } else {
    return parseInt(string, 10);
  }
}
function parseMillis(fraction) {
  // Return undefined (instead of 0) in these cases, where fraction is not set
  if (isUndefined(fraction) || fraction === null || fraction === "") {
    return undefined;
  } else {
    var f = parseFloat("0." + fraction) * 1000;
    return Math.floor(f);
  }
}
function roundTo(number, digits, towardZero) {
  if (towardZero === void 0) {
    towardZero = false;
  }

  var factor = Math.pow(10, digits),
      rounder = towardZero ? Math.trunc : Math.round;
  return rounder(number * factor) / factor;
} // DATE BASICS

function isLeapYear(year) {
  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}
function daysInYear(year) {
  return isLeapYear(year) ? 366 : 365;
}
function daysInMonth(year, month) {
  var modMonth = floorMod(month - 1, 12) + 1,
      modYear = year + (month - modMonth) / 12;

  if (modMonth === 2) {
    return isLeapYear(modYear) ? 29 : 28;
  } else {
    return [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][modMonth - 1];
  }
} // covert a calendar object to a local timestamp (epoch, but with the offset baked in)

function objToLocalTS(obj) {
  var d = Date.UTC(obj.year, obj.month - 1, obj.day, obj.hour, obj.minute, obj.second, obj.millisecond); // for legacy reasons, years between 0 and 99 are interpreted as 19XX; revert that

  if (obj.year < 100 && obj.year >= 0) {
    d = new Date(d);
    d.setUTCFullYear(d.getUTCFullYear() - 1900);
  }

  return +d;
}
function weeksInWeekYear(weekYear) {
  var p1 = (weekYear + Math.floor(weekYear / 4) - Math.floor(weekYear / 100) + Math.floor(weekYear / 400)) % 7,
      last = weekYear - 1,
      p2 = (last + Math.floor(last / 4) - Math.floor(last / 100) + Math.floor(last / 400)) % 7;
  return p1 === 4 || p2 === 3 ? 53 : 52;
}
function untruncateYear(year) {
  if (year > 99) {
    return year;
  } else return year > 60 ? 1900 + year : 2000 + year;
} // PARSING

function parseZoneInfo(ts, offsetFormat, locale, timeZone) {
  if (timeZone === void 0) {
    timeZone = null;
  }

  var date = new Date(ts),
      intlOpts = {
    hour12: false,
    year: "numeric",
    month: "2-digit",
    day: "2-digit",
    hour: "2-digit",
    minute: "2-digit"
  };

  if (timeZone) {
    intlOpts.timeZone = timeZone;
  }

  var modified = Object.assign({
    timeZoneName: offsetFormat
  }, intlOpts),
      intl = hasIntl();

  if (intl && hasFormatToParts()) {
    var parsed = new Intl.DateTimeFormat(locale, modified).formatToParts(date).find(function (m) {
      return m.type.toLowerCase() === "timezonename";
    });
    return parsed ? parsed.value : null;
  } else if (intl) {
    // this probably doesn't work for all locales
    var without = new Intl.DateTimeFormat(locale, intlOpts).format(date),
        included = new Intl.DateTimeFormat(locale, modified).format(date),
        diffed = included.substring(without.length),
        trimmed = diffed.replace(/^[, \u200e]+/, "");
    return trimmed;
  } else {
    return null;
  }
} // signedOffset('-5', '30') -> -330

function signedOffset(offHourStr, offMinuteStr) {
  var offHour = parseInt(offHourStr, 10); // don't || this because we want to preserve -0

  if (Number.isNaN(offHour)) {
    offHour = 0;
  }

  var offMin = parseInt(offMinuteStr, 10) || 0,
      offMinSigned = offHour < 0 || Object.is(offHour, -0) ? -offMin : offMin;
  return offHour * 60 + offMinSigned;
} // COERCION

function asNumber(value) {
  var numericValue = Number(value);
  if (typeof value === "boolean" || value === "" || Number.isNaN(numericValue)) throw new InvalidArgumentError("Invalid unit value " + value);
  return numericValue;
}
function normalizeObject(obj, normalizer, nonUnitKeys) {
  var normalized = {};

  for (var u in obj) {
    if (hasOwnProperty(obj, u)) {
      if (nonUnitKeys.indexOf(u) >= 0) continue;
      var v = obj[u];
      if (v === undefined || v === null) continue;
      normalized[normalizer(u)] = asNumber(v);
    }
  }

  return normalized;
}
function formatOffset(offset, format) {
  var hours = Math.trunc(Math.abs(offset / 60)),
      minutes = Math.trunc(Math.abs(offset % 60)),
      sign = offset >= 0 ? "+" : "-";

  switch (format) {
    case "short":
      return "" + sign + padStart(hours, 2) + ":" + padStart(minutes, 2);

    case "narrow":
      return "" + sign + hours + (minutes > 0 ? ":" + minutes : "");

    case "techie":
      return "" + sign + padStart(hours, 2) + padStart(minutes, 2);

    default:
      throw new RangeError("Value format " + format + " is out of range for property format");
  }
}
function timeObject(obj) {
  return pick(obj, ["hour", "minute", "second", "millisecond"]);
}
var ianaRegex = /[A-Za-z_+-]{1,256}(:?\/[A-Za-z_+-]{1,256}(\/[A-Za-z_+-]{1,256})?)?/;

function stringify(obj) {
  return JSON.stringify(obj, Object.keys(obj).sort());
}
/**
 * @private
 */


var monthsLong = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
var monthsShort = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
var monthsNarrow = ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"];
function months(length) {
  switch (length) {
    case "narrow":
      return [].concat(monthsNarrow);

    case "short":
      return [].concat(monthsShort);

    case "long":
      return [].concat(monthsLong);

    case "numeric":
      return ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"];

    case "2-digit":
      return ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"];

    default:
      return null;
  }
}
var weekdaysLong = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"];
var weekdaysShort = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"];
var weekdaysNarrow = ["M", "T", "W", "T", "F", "S", "S"];
function weekdays(length) {
  switch (length) {
    case "narrow":
      return [].concat(weekdaysNarrow);

    case "short":
      return [].concat(weekdaysShort);

    case "long":
      return [].concat(weekdaysLong);

    case "numeric":
      return ["1", "2", "3", "4", "5", "6", "7"];

    default:
      return null;
  }
}
var meridiems = ["AM", "PM"];
var erasLong = ["Before Christ", "Anno Domini"];
var erasShort = ["BC", "AD"];
var erasNarrow = ["B", "A"];
function eras(length) {
  switch (length) {
    case "narrow":
      return [].concat(erasNarrow);

    case "short":
      return [].concat(erasShort);

    case "long":
      return [].concat(erasLong);

    default:
      return null;
  }
}
function meridiemForDateTime(dt) {
  return meridiems[dt.hour < 12 ? 0 : 1];
}
function weekdayForDateTime(dt, length) {
  return weekdays(length)[dt.weekday - 1];
}
function monthForDateTime(dt, length) {
  return months(length)[dt.month - 1];
}
function eraForDateTime(dt, length) {
  return eras(length)[dt.year < 0 ? 0 : 1];
}
function formatRelativeTime(unit, count, numeric, narrow) {
  if (numeric === void 0) {
    numeric = "always";
  }

  if (narrow === void 0) {
    narrow = false;
  }

  var units = {
    years: ["year", "yr."],
    quarters: ["quarter", "qtr."],
    months: ["month", "mo."],
    weeks: ["week", "wk."],
    days: ["day", "day", "days"],
    hours: ["hour", "hr."],
    minutes: ["minute", "min."],
    seconds: ["second", "sec."]
  };
  var lastable = ["hours", "minutes", "seconds"].indexOf(unit) === -1;

  if (numeric === "auto" && lastable) {
    var isDay = unit === "days";

    switch (count) {
      case 1:
        return isDay ? "tomorrow" : "next " + units[unit][0];

      case -1:
        return isDay ? "yesterday" : "last " + units[unit][0];

      case 0:
        return isDay ? "today" : "this " + units[unit][0];

    }
  }

  var isInPast = Object.is(count, -0) || count < 0,
      fmtValue = Math.abs(count),
      singular = fmtValue === 1,
      lilUnits = units[unit],
      fmtUnit = narrow ? singular ? lilUnits[1] : lilUnits[2] || lilUnits[1] : singular ? units[unit][0] : unit;
  return isInPast ? fmtValue + " " + fmtUnit + " ago" : "in " + fmtValue + " " + fmtUnit;
}
function formatString(knownFormat) {
  // these all have the offsets removed because we don't have access to them
  // without all the intl stuff this is backfilling
  var filtered = pick(knownFormat, ["weekday", "era", "year", "month", "day", "hour", "minute", "second", "timeZoneName", "hour12"]),
      key = stringify(filtered),
      dateTimeHuge = "EEEE, LLLL d, yyyy, h:mm a";

  switch (key) {
    case stringify(DATE_SHORT):
      return "M/d/yyyy";

    case stringify(DATE_MED):
      return "LLL d, yyyy";

    case stringify(DATE_MED_WITH_WEEKDAY):
      return "EEE, LLL d, yyyy";

    case stringify(DATE_FULL):
      return "LLLL d, yyyy";

    case stringify(DATE_HUGE):
      return "EEEE, LLLL d, yyyy";

    case stringify(TIME_SIMPLE):
      return "h:mm a";

    case stringify(TIME_WITH_SECONDS):
      return "h:mm:ss a";

    case stringify(TIME_WITH_SHORT_OFFSET):
      return "h:mm a";

    case stringify(TIME_WITH_LONG_OFFSET):
      return "h:mm a";

    case stringify(TIME_24_SIMPLE):
      return "HH:mm";

    case stringify(TIME_24_WITH_SECONDS):
      return "HH:mm:ss";

    case stringify(TIME_24_WITH_SHORT_OFFSET):
      return "HH:mm";

    case stringify(TIME_24_WITH_LONG_OFFSET):
      return "HH:mm";

    case stringify(DATETIME_SHORT):
      return "M/d/yyyy, h:mm a";

    case stringify(DATETIME_MED):
      return "LLL d, yyyy, h:mm a";

    case stringify(DATETIME_FULL):
      return "LLLL d, yyyy, h:mm a";

    case stringify(DATETIME_HUGE):
      return dateTimeHuge;

    case stringify(DATETIME_SHORT_WITH_SECONDS):
      return "M/d/yyyy, h:mm:ss a";

    case stringify(DATETIME_MED_WITH_SECONDS):
      return "LLL d, yyyy, h:mm:ss a";

    case stringify(DATETIME_MED_WITH_WEEKDAY):
      return "EEE, d LLL yyyy, h:mm a";

    case stringify(DATETIME_FULL_WITH_SECONDS):
      return "LLLL d, yyyy, h:mm:ss a";

    case stringify(DATETIME_HUGE_WITH_SECONDS):
      return "EEEE, LLLL d, yyyy, h:mm:ss a";

    default:
      return dateTimeHuge;
  }
}

function stringifyTokens(splits, tokenToString) {
  var s = "";

  for (var _iterator = _createForOfIteratorHelperLoose(splits), _step; !(_step = _iterator()).done;) {
    var token = _step.value;

    if (token.literal) {
      s += token.val;
    } else {
      s += tokenToString(token.val);
    }
  }

  return s;
}

var _macroTokenToFormatOpts = {
  D: DATE_SHORT,
  DD: DATE_MED,
  DDD: DATE_FULL,
  DDDD: DATE_HUGE,
  t: TIME_SIMPLE,
  tt: TIME_WITH_SECONDS,
  ttt: TIME_WITH_SHORT_OFFSET,
  tttt: TIME_WITH_LONG_OFFSET,
  T: TIME_24_SIMPLE,
  TT: TIME_24_WITH_SECONDS,
  TTT: TIME_24_WITH_SHORT_OFFSET,
  TTTT: TIME_24_WITH_LONG_OFFSET,
  f: DATETIME_SHORT,
  ff: DATETIME_MED,
  fff: DATETIME_FULL,
  ffff: DATETIME_HUGE,
  F: DATETIME_SHORT_WITH_SECONDS,
  FF: DATETIME_MED_WITH_SECONDS,
  FFF: DATETIME_FULL_WITH_SECONDS,
  FFFF: DATETIME_HUGE_WITH_SECONDS
};
/**
 * @private
 */

var Formatter = /*#__PURE__*/function () {
  Formatter.create = function create(locale, opts) {
    if (opts === void 0) {
      opts = {};
    }

    return new Formatter(locale, opts);
  };

  Formatter.parseFormat = function parseFormat(fmt) {
    var current = null,
        currentFull = "",
        bracketed = false;
    var splits = [];

    for (var i = 0; i < fmt.length; i++) {
      var c = fmt.charAt(i);

      if (c === "'") {
        if (currentFull.length > 0) {
          splits.push({
            literal: bracketed,
            val: currentFull
          });
        }

        current = null;
        currentFull = "";
        bracketed = !bracketed;
      } else if (bracketed) {
        currentFull += c;
      } else if (c === current) {
        currentFull += c;
      } else {
        if (currentFull.length > 0) {
          splits.push({
            literal: false,
            val: currentFull
          });
        }

        currentFull = c;
        current = c;
      }
    }

    if (currentFull.length > 0) {
      splits.push({
        literal: bracketed,
        val: currentFull
      });
    }

    return splits;
  };

  Formatter.macroTokenToFormatOpts = function macroTokenToFormatOpts(token) {
    return _macroTokenToFormatOpts[token];
  };

  function Formatter(locale, formatOpts) {
    this.opts = formatOpts;
    this.loc = locale;
    this.systemLoc = null;
  }

  var _proto = Formatter.prototype;

  _proto.formatWithSystemDefault = function formatWithSystemDefault(dt, opts) {
    if (this.systemLoc === null) {
      this.systemLoc = this.loc.redefaultToSystem();
    }

    var df = this.systemLoc.dtFormatter(dt, Object.assign({}, this.opts, opts));
    return df.format();
  };

  _proto.formatDateTime = function formatDateTime(dt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var df = this.loc.dtFormatter(dt, Object.assign({}, this.opts, opts));
    return df.format();
  };

  _proto.formatDateTimeParts = function formatDateTimeParts(dt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var df = this.loc.dtFormatter(dt, Object.assign({}, this.opts, opts));
    return df.formatToParts();
  };

  _proto.resolvedOptions = function resolvedOptions(dt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var df = this.loc.dtFormatter(dt, Object.assign({}, this.opts, opts));
    return df.resolvedOptions();
  };

  _proto.num = function num(n, p) {
    if (p === void 0) {
      p = 0;
    }

    // we get some perf out of doing this here, annoyingly
    if (this.opts.forceSimple) {
      return padStart(n, p);
    }

    var opts = Object.assign({}, this.opts);

    if (p > 0) {
      opts.padTo = p;
    }

    return this.loc.numberFormatter(opts).format(n);
  };

  _proto.formatDateTimeFromString = function formatDateTimeFromString(dt, fmt) {
    var _this = this;

    var knownEnglish = this.loc.listingMode() === "en",
        useDateTimeFormatter = this.loc.outputCalendar && this.loc.outputCalendar !== "gregory" && hasFormatToParts(),
        string = function string(opts, extract) {
      return _this.loc.extract(dt, opts, extract);
    },
        formatOffset = function formatOffset(opts) {
      if (dt.isOffsetFixed && dt.offset === 0 && opts.allowZ) {
        return "Z";
      }

      return dt.isValid ? dt.zone.formatOffset(dt.ts, opts.format) : "";
    },
        meridiem = function meridiem() {
      return knownEnglish ? meridiemForDateTime(dt) : string({
        hour: "numeric",
        hour12: true
      }, "dayperiod");
    },
        month = function month(length, standalone) {
      return knownEnglish ? monthForDateTime(dt, length) : string(standalone ? {
        month: length
      } : {
        month: length,
        day: "numeric"
      }, "month");
    },
        weekday = function weekday(length, standalone) {
      return knownEnglish ? weekdayForDateTime(dt, length) : string(standalone ? {
        weekday: length
      } : {
        weekday: length,
        month: "long",
        day: "numeric"
      }, "weekday");
    },
        maybeMacro = function maybeMacro(token) {
      var formatOpts = Formatter.macroTokenToFormatOpts(token);

      if (formatOpts) {
        return _this.formatWithSystemDefault(dt, formatOpts);
      } else {
        return token;
      }
    },
        era = function era(length) {
      return knownEnglish ? eraForDateTime(dt, length) : string({
        era: length
      }, "era");
    },
        tokenToString = function tokenToString(token) {
      // Where possible: http://cldr.unicode.org/translation/date-time-1/date-time#TOC-Standalone-vs.-Format-Styles
      switch (token) {
        // ms
        case "S":
          return _this.num(dt.millisecond);

        case "u": // falls through

        case "SSS":
          return _this.num(dt.millisecond, 3);
        // seconds

        case "s":
          return _this.num(dt.second);

        case "ss":
          return _this.num(dt.second, 2);
        // minutes

        case "m":
          return _this.num(dt.minute);

        case "mm":
          return _this.num(dt.minute, 2);
        // hours

        case "h":
          return _this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12);

        case "hh":
          return _this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12, 2);

        case "H":
          return _this.num(dt.hour);

        case "HH":
          return _this.num(dt.hour, 2);
        // offset

        case "Z":
          // like +6
          return formatOffset({
            format: "narrow",
            allowZ: _this.opts.allowZ
          });

        case "ZZ":
          // like +06:00
          return formatOffset({
            format: "short",
            allowZ: _this.opts.allowZ
          });

        case "ZZZ":
          // like +0600
          return formatOffset({
            format: "techie",
            allowZ: _this.opts.allowZ
          });

        case "ZZZZ":
          // like EST
          return dt.zone.offsetName(dt.ts, {
            format: "short",
            locale: _this.loc.locale
          });

        case "ZZZZZ":
          // like Eastern Standard Time
          return dt.zone.offsetName(dt.ts, {
            format: "long",
            locale: _this.loc.locale
          });
        // zone

        case "z":
          // like America/New_York
          return dt.zoneName;
        // meridiems

        case "a":
          return meridiem();
        // dates

        case "d":
          return useDateTimeFormatter ? string({
            day: "numeric"
          }, "day") : _this.num(dt.day);

        case "dd":
          return useDateTimeFormatter ? string({
            day: "2-digit"
          }, "day") : _this.num(dt.day, 2);
        // weekdays - standalone

        case "c":
          // like 1
          return _this.num(dt.weekday);

        case "ccc":
          // like 'Tues'
          return weekday("short", true);

        case "cccc":
          // like 'Tuesday'
          return weekday("long", true);

        case "ccccc":
          // like 'T'
          return weekday("narrow", true);
        // weekdays - format

        case "E":
          // like 1
          return _this.num(dt.weekday);

        case "EEE":
          // like 'Tues'
          return weekday("short", false);

        case "EEEE":
          // like 'Tuesday'
          return weekday("long", false);

        case "EEEEE":
          // like 'T'
          return weekday("narrow", false);
        // months - standalone

        case "L":
          // like 1
          return useDateTimeFormatter ? string({
            month: "numeric",
            day: "numeric"
          }, "month") : _this.num(dt.month);

        case "LL":
          // like 01, doesn't seem to work
          return useDateTimeFormatter ? string({
            month: "2-digit",
            day: "numeric"
          }, "month") : _this.num(dt.month, 2);

        case "LLL":
          // like Jan
          return month("short", true);

        case "LLLL":
          // like January
          return month("long", true);

        case "LLLLL":
          // like J
          return month("narrow", true);
        // months - format

        case "M":
          // like 1
          return useDateTimeFormatter ? string({
            month: "numeric"
          }, "month") : _this.num(dt.month);

        case "MM":
          // like 01
          return useDateTimeFormatter ? string({
            month: "2-digit"
          }, "month") : _this.num(dt.month, 2);

        case "MMM":
          // like Jan
          return month("short", false);

        case "MMMM":
          // like January
          return month("long", false);

        case "MMMMM":
          // like J
          return month("narrow", false);
        // years

        case "y":
          // like 2014
          return useDateTimeFormatter ? string({
            year: "numeric"
          }, "year") : _this.num(dt.year);

        case "yy":
          // like 14
          return useDateTimeFormatter ? string({
            year: "2-digit"
          }, "year") : _this.num(dt.year.toString().slice(-2), 2);

        case "yyyy":
          // like 0012
          return useDateTimeFormatter ? string({
            year: "numeric"
          }, "year") : _this.num(dt.year, 4);

        case "yyyyyy":
          // like 000012
          return useDateTimeFormatter ? string({
            year: "numeric"
          }, "year") : _this.num(dt.year, 6);
        // eras

        case "G":
          // like AD
          return era("short");

        case "GG":
          // like Anno Domini
          return era("long");

        case "GGGGG":
          return era("narrow");

        case "kk":
          return _this.num(dt.weekYear.toString().slice(-2), 2);

        case "kkkk":
          return _this.num(dt.weekYear, 4);

        case "W":
          return _this.num(dt.weekNumber);

        case "WW":
          return _this.num(dt.weekNumber, 2);

        case "o":
          return _this.num(dt.ordinal);

        case "ooo":
          return _this.num(dt.ordinal, 3);

        case "q":
          // like 1
          return _this.num(dt.quarter);

        case "qq":
          // like 01
          return _this.num(dt.quarter, 2);

        case "X":
          return _this.num(Math.floor(dt.ts / 1000));

        case "x":
          return _this.num(dt.ts);

        default:
          return maybeMacro(token);
      }
    };

    return stringifyTokens(Formatter.parseFormat(fmt), tokenToString);
  };

  _proto.formatDurationFromString = function formatDurationFromString(dur, fmt) {
    var _this2 = this;

    var tokenToField = function tokenToField(token) {
      switch (token[0]) {
        case "S":
          return "millisecond";

        case "s":
          return "second";

        case "m":
          return "minute";

        case "h":
          return "hour";

        case "d":
          return "day";

        case "M":
          return "month";

        case "y":
          return "year";

        default:
          return null;
      }
    },
        tokenToString = function tokenToString(lildur) {
      return function (token) {
        var mapped = tokenToField(token);

        if (mapped) {
          return _this2.num(lildur.get(mapped), token.length);
        } else {
          return token;
        }
      };
    },
        tokens = Formatter.parseFormat(fmt),
        realTokens = tokens.reduce(function (found, _ref) {
      var literal = _ref.literal,
          val = _ref.val;
      return literal ? found : found.concat(val);
    }, []),
        collapsed = dur.shiftTo.apply(dur, realTokens.map(tokenToField).filter(function (t) {
      return t;
    }));

    return stringifyTokens(tokens, tokenToString(collapsed));
  };

  return Formatter;
}();

var Invalid = /*#__PURE__*/function () {
  function Invalid(reason, explanation) {
    this.reason = reason;
    this.explanation = explanation;
  }

  var _proto = Invalid.prototype;

  _proto.toMessage = function toMessage() {
    if (this.explanation) {
      return this.reason + ": " + this.explanation;
    } else {
      return this.reason;
    }
  };

  return Invalid;
}();

/**
 * @interface
 */

var Zone = /*#__PURE__*/function () {
  function Zone() {}

  var _proto = Zone.prototype;

  /**
   * Returns the offset's common name (such as EST) at the specified timestamp
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to get the name
   * @param {Object} opts - Options to affect the format
   * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.
   * @param {string} opts.locale - What locale to return the offset name in.
   * @return {string}
   */
  _proto.offsetName = function offsetName(ts, opts) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Returns the offset's value as a string
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to get the offset
   * @param {string} format - What style of offset to return.
   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively
   * @return {string}
   */
  ;

  _proto.formatOffset = function formatOffset(ts, format) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Return the offset in minutes for this zone at the specified timestamp.
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to compute the offset
   * @return {number}
   */
  ;

  _proto.offset = function offset(ts) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Return whether this Zone is equal to another zone
   * @abstract
   * @param {Zone} otherZone - the zone to compare
   * @return {boolean}
   */
  ;

  _proto.equals = function equals(otherZone) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Return whether this Zone is valid.
   * @abstract
   * @type {boolean}
   */
  ;

  _createClass(Zone, [{
    key: "type",

    /**
     * The type of zone
     * @abstract
     * @type {string}
     */
    get: function get() {
      throw new ZoneIsAbstractError();
    }
    /**
     * The name of this zone.
     * @abstract
     * @type {string}
     */

  }, {
    key: "name",
    get: function get() {
      throw new ZoneIsAbstractError();
    }
    /**
     * Returns whether the offset is known to be fixed for the whole year.
     * @abstract
     * @type {boolean}
     */

  }, {
    key: "universal",
    get: function get() {
      throw new ZoneIsAbstractError();
    }
  }, {
    key: "isValid",
    get: function get() {
      throw new ZoneIsAbstractError();
    }
  }]);

  return Zone;
}();

var singleton = null;
/**
 * Represents the local zone for this JavaScript environment.
 * @implements {Zone}
 */

var LocalZone = /*#__PURE__*/function (_Zone) {
  _inheritsLoose(LocalZone, _Zone);

  function LocalZone() {
    return _Zone.apply(this, arguments) || this;
  }

  var _proto = LocalZone.prototype;

  /** @override **/
  _proto.offsetName = function offsetName(ts, _ref) {
    var format = _ref.format,
        locale = _ref.locale;
    return parseZoneInfo(ts, format, locale);
  }
  /** @override **/
  ;

  _proto.formatOffset = function formatOffset$1(ts, format) {
    return formatOffset(this.offset(ts), format);
  }
  /** @override **/
  ;

  _proto.offset = function offset(ts) {
    return -new Date(ts).getTimezoneOffset();
  }
  /** @override **/
  ;

  _proto.equals = function equals(otherZone) {
    return otherZone.type === "local";
  }
  /** @override **/
  ;

  _createClass(LocalZone, [{
    key: "type",

    /** @override **/
    get: function get() {
      return "local";
    }
    /** @override **/

  }, {
    key: "name",
    get: function get() {
      if (hasIntl()) {
        return new Intl.DateTimeFormat().resolvedOptions().timeZone;
      } else return "local";
    }
    /** @override **/

  }, {
    key: "universal",
    get: function get() {
      return false;
    }
  }, {
    key: "isValid",
    get: function get() {
      return true;
    }
  }], [{
    key: "instance",

    /**
     * Get a singleton instance of the local zone
     * @return {LocalZone}
     */
    get: function get() {
      if (singleton === null) {
        singleton = new LocalZone();
      }

      return singleton;
    }
  }]);

  return LocalZone;
}(Zone);

var matchingRegex = RegExp("^" + ianaRegex.source + "$");
var dtfCache = {};

function makeDTF(zone) {
  if (!dtfCache[zone]) {
    dtfCache[zone] = new Intl.DateTimeFormat("en-US", {
      hour12: false,
      timeZone: zone,
      year: "numeric",
      month: "2-digit",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    });
  }

  return dtfCache[zone];
}

var typeToPos = {
  year: 0,
  month: 1,
  day: 2,
  hour: 3,
  minute: 4,
  second: 5
};

function hackyOffset(dtf, date) {
  var formatted = dtf.format(date).replace(/\u200E/g, ""),
      parsed = /(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(formatted),
      fMonth = parsed[1],
      fDay = parsed[2],
      fYear = parsed[3],
      fHour = parsed[4],
      fMinute = parsed[5],
      fSecond = parsed[6];
  return [fYear, fMonth, fDay, fHour, fMinute, fSecond];
}

function partsOffset(dtf, date) {
  var formatted = dtf.formatToParts(date),
      filled = [];

  for (var i = 0; i < formatted.length; i++) {
    var _formatted$i = formatted[i],
        type = _formatted$i.type,
        value = _formatted$i.value,
        pos = typeToPos[type];

    if (!isUndefined(pos)) {
      filled[pos] = parseInt(value, 10);
    }
  }

  return filled;
}

var ianaZoneCache = {};
/**
 * A zone identified by an IANA identifier, like America/New_York
 * @implements {Zone}
 */

var IANAZone = /*#__PURE__*/function (_Zone) {
  _inheritsLoose(IANAZone, _Zone);

  /**
   * @param {string} name - Zone name
   * @return {IANAZone}
   */
  IANAZone.create = function create(name) {
    if (!ianaZoneCache[name]) {
      ianaZoneCache[name] = new IANAZone(name);
    }

    return ianaZoneCache[name];
  }
  /**
   * Reset local caches. Should only be necessary in testing scenarios.
   * @return {void}
   */
  ;

  IANAZone.resetCache = function resetCache() {
    ianaZoneCache = {};
    dtfCache = {};
  }
  /**
   * Returns whether the provided string is a valid specifier. This only checks the string's format, not that the specifier identifies a known zone; see isValidZone for that.
   * @param {string} s - The string to check validity on
   * @example IANAZone.isValidSpecifier("America/New_York") //=> true
   * @example IANAZone.isValidSpecifier("Fantasia/Castle") //=> true
   * @example IANAZone.isValidSpecifier("Sport~~blorp") //=> false
   * @return {boolean}
   */
  ;

  IANAZone.isValidSpecifier = function isValidSpecifier(s) {
    return !!(s && s.match(matchingRegex));
  }
  /**
   * Returns whether the provided string identifies a real zone
   * @param {string} zone - The string to check
   * @example IANAZone.isValidZone("America/New_York") //=> true
   * @example IANAZone.isValidZone("Fantasia/Castle") //=> false
   * @example IANAZone.isValidZone("Sport~~blorp") //=> false
   * @return {boolean}
   */
  ;

  IANAZone.isValidZone = function isValidZone(zone) {
    try {
      new Intl.DateTimeFormat("en-US", {
        timeZone: zone
      }).format();
      return true;
    } catch (e) {
      return false;
    }
  } // Etc/GMT+8 -> -480

  /** @ignore */
  ;

  IANAZone.parseGMTOffset = function parseGMTOffset(specifier) {
    if (specifier) {
      var match = specifier.match(/^Etc\/GMT(0|[+-]\d{1,2})$/i);

      if (match) {
        return -60 * parseInt(match[1]);
      }
    }

    return null;
  };

  function IANAZone(name) {
    var _this;

    _this = _Zone.call(this) || this;
    /** @private **/

    _this.zoneName = name;
    /** @private **/

    _this.valid = IANAZone.isValidZone(name);
    return _this;
  }
  /** @override **/


  var _proto = IANAZone.prototype;

  /** @override **/
  _proto.offsetName = function offsetName(ts, _ref) {
    var format = _ref.format,
        locale = _ref.locale;
    return parseZoneInfo(ts, format, locale, this.name);
  }
  /** @override **/
  ;

  _proto.formatOffset = function formatOffset$1(ts, format) {
    return formatOffset(this.offset(ts), format);
  }
  /** @override **/
  ;

  _proto.offset = function offset(ts) {
    var date = new Date(ts);
    if (isNaN(date)) return NaN;

    var dtf = makeDTF(this.name),
        _ref2 = dtf.formatToParts ? partsOffset(dtf, date) : hackyOffset(dtf, date),
        year = _ref2[0],
        month = _ref2[1],
        day = _ref2[2],
        hour = _ref2[3],
        minute = _ref2[4],
        second = _ref2[5],
        adjustedHour = hour === 24 ? 0 : hour;

    var asUTC = objToLocalTS({
      year: year,
      month: month,
      day: day,
      hour: adjustedHour,
      minute: minute,
      second: second,
      millisecond: 0
    });
    var asTS = +date;
    var over = asTS % 1000;
    asTS -= over >= 0 ? over : 1000 + over;
    return (asUTC - asTS) / (60 * 1000);
  }
  /** @override **/
  ;

  _proto.equals = function equals(otherZone) {
    return otherZone.type === "iana" && otherZone.name === this.name;
  }
  /** @override **/
  ;

  _createClass(IANAZone, [{
    key: "type",
    get: function get() {
      return "iana";
    }
    /** @override **/

  }, {
    key: "name",
    get: function get() {
      return this.zoneName;
    }
    /** @override **/

  }, {
    key: "universal",
    get: function get() {
      return false;
    }
  }, {
    key: "isValid",
    get: function get() {
      return this.valid;
    }
  }]);

  return IANAZone;
}(Zone);

var singleton$1 = null;
/**
 * A zone with a fixed offset (meaning no DST)
 * @implements {Zone}
 */

var FixedOffsetZone = /*#__PURE__*/function (_Zone) {
  _inheritsLoose(FixedOffsetZone, _Zone);

  /**
   * Get an instance with a specified offset
   * @param {number} offset - The offset in minutes
   * @return {FixedOffsetZone}
   */
  FixedOffsetZone.instance = function instance(offset) {
    return offset === 0 ? FixedOffsetZone.utcInstance : new FixedOffsetZone(offset);
  }
  /**
   * Get an instance of FixedOffsetZone from a UTC offset string, like "UTC+6"
   * @param {string} s - The offset string to parse
   * @example FixedOffsetZone.parseSpecifier("UTC+6")
   * @example FixedOffsetZone.parseSpecifier("UTC+06")
   * @example FixedOffsetZone.parseSpecifier("UTC-6:00")
   * @return {FixedOffsetZone}
   */
  ;

  FixedOffsetZone.parseSpecifier = function parseSpecifier(s) {
    if (s) {
      var r = s.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);

      if (r) {
        return new FixedOffsetZone(signedOffset(r[1], r[2]));
      }
    }

    return null;
  };

  _createClass(FixedOffsetZone, null, [{
    key: "utcInstance",

    /**
     * Get a singleton instance of UTC
     * @return {FixedOffsetZone}
     */
    get: function get() {
      if (singleton$1 === null) {
        singleton$1 = new FixedOffsetZone(0);
      }

      return singleton$1;
    }
  }]);

  function FixedOffsetZone(offset) {
    var _this;

    _this = _Zone.call(this) || this;
    /** @private **/

    _this.fixed = offset;
    return _this;
  }
  /** @override **/


  var _proto = FixedOffsetZone.prototype;

  /** @override **/
  _proto.offsetName = function offsetName() {
    return this.name;
  }
  /** @override **/
  ;

  _proto.formatOffset = function formatOffset$1(ts, format) {
    return formatOffset(this.fixed, format);
  }
  /** @override **/
  ;

  /** @override **/
  _proto.offset = function offset() {
    return this.fixed;
  }
  /** @override **/
  ;

  _proto.equals = function equals(otherZone) {
    return otherZone.type === "fixed" && otherZone.fixed === this.fixed;
  }
  /** @override **/
  ;

  _createClass(FixedOffsetZone, [{
    key: "type",
    get: function get() {
      return "fixed";
    }
    /** @override **/

  }, {
    key: "name",
    get: function get() {
      return this.fixed === 0 ? "UTC" : "UTC" + formatOffset(this.fixed, "narrow");
    }
  }, {
    key: "universal",
    get: function get() {
      return true;
    }
  }, {
    key: "isValid",
    get: function get() {
      return true;
    }
  }]);

  return FixedOffsetZone;
}(Zone);

/**
 * A zone that failed to parse. You should never need to instantiate this.
 * @implements {Zone}
 */

var InvalidZone = /*#__PURE__*/function (_Zone) {
  _inheritsLoose(InvalidZone, _Zone);

  function InvalidZone(zoneName) {
    var _this;

    _this = _Zone.call(this) || this;
    /**  @private */

    _this.zoneName = zoneName;
    return _this;
  }
  /** @override **/


  var _proto = InvalidZone.prototype;

  /** @override **/
  _proto.offsetName = function offsetName() {
    return null;
  }
  /** @override **/
  ;

  _proto.formatOffset = function formatOffset() {
    return "";
  }
  /** @override **/
  ;

  _proto.offset = function offset() {
    return NaN;
  }
  /** @override **/
  ;

  _proto.equals = function equals() {
    return false;
  }
  /** @override **/
  ;

  _createClass(InvalidZone, [{
    key: "type",
    get: function get() {
      return "invalid";
    }
    /** @override **/

  }, {
    key: "name",
    get: function get() {
      return this.zoneName;
    }
    /** @override **/

  }, {
    key: "universal",
    get: function get() {
      return false;
    }
  }, {
    key: "isValid",
    get: function get() {
      return false;
    }
  }]);

  return InvalidZone;
}(Zone);

/**
 * @private
 */
function normalizeZone(input, defaultZone) {
  var offset;

  if (isUndefined(input) || input === null) {
    return defaultZone;
  } else if (input instanceof Zone) {
    return input;
  } else if (isString(input)) {
    var lowered = input.toLowerCase();
    if (lowered === "local") return defaultZone;else if (lowered === "utc" || lowered === "gmt") return FixedOffsetZone.utcInstance;else if ((offset = IANAZone.parseGMTOffset(input)) != null) {
      // handle Etc/GMT-4, which V8 chokes on
      return FixedOffsetZone.instance(offset);
    } else if (IANAZone.isValidSpecifier(lowered)) return IANAZone.create(input);else return FixedOffsetZone.parseSpecifier(lowered) || new InvalidZone(input);
  } else if (isNumber(input)) {
    return FixedOffsetZone.instance(input);
  } else if (typeof input === "object" && input.offset && typeof input.offset === "number") {
    // This is dumb, but the instanceof check above doesn't seem to really work
    // so we're duck checking it
    return input;
  } else {
    return new InvalidZone(input);
  }
}

var now = function now() {
  return Date.now();
},
    defaultZone = null,
    // not setting this directly to LocalZone.instance bc loading order issues
defaultLocale = null,
    defaultNumberingSystem = null,
    defaultOutputCalendar = null,
    throwOnInvalid = false;
/**
 * Settings contains static getters and setters that control Luxon's overall behavior. Luxon is a simple library with few options, but the ones it does have live here.
 */


var Settings = /*#__PURE__*/function () {
  function Settings() {}

  /**
   * Reset Luxon's global caches. Should only be necessary in testing scenarios.
   * @return {void}
   */
  Settings.resetCaches = function resetCaches() {
    Locale.resetCache();
    IANAZone.resetCache();
  };

  _createClass(Settings, null, [{
    key: "now",

    /**
     * Get the callback for returning the current timestamp.
     * @type {function}
     */
    get: function get() {
      return now;
    }
    /**
     * Set the callback for returning the current timestamp.
     * The function should return a number, which will be interpreted as an Epoch millisecond count
     * @type {function}
     * @example Settings.now = () => Date.now() + 3000 // pretend it is 3 seconds in the future
     * @example Settings.now = () => 0 // always pretend it's Jan 1, 1970 at midnight in UTC time
     */
    ,
    set: function set(n) {
      now = n;
    }
    /**
     * Get the default time zone to create DateTimes in.
     * @type {string}
     */

  }, {
    key: "defaultZoneName",
    get: function get() {
      return Settings.defaultZone.name;
    }
    /**
     * Set the default time zone to create DateTimes in. Does not affect existing instances.
     * @type {string}
     */
    ,
    set: function set(z) {
      if (!z) {
        defaultZone = null;
      } else {
        defaultZone = normalizeZone(z);
      }
    }
    /**
     * Get the default time zone object to create DateTimes in. Does not affect existing instances.
     * @type {Zone}
     */

  }, {
    key: "defaultZone",
    get: function get() {
      return defaultZone || LocalZone.instance;
    }
    /**
     * Get the default locale to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */

  }, {
    key: "defaultLocale",
    get: function get() {
      return defaultLocale;
    }
    /**
     * Set the default locale to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */
    ,
    set: function set(locale) {
      defaultLocale = locale;
    }
    /**
     * Get the default numbering system to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */

  }, {
    key: "defaultNumberingSystem",
    get: function get() {
      return defaultNumberingSystem;
    }
    /**
     * Set the default numbering system to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */
    ,
    set: function set(numberingSystem) {
      defaultNumberingSystem = numberingSystem;
    }
    /**
     * Get the default output calendar to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */

  }, {
    key: "defaultOutputCalendar",
    get: function get() {
      return defaultOutputCalendar;
    }
    /**
     * Set the default output calendar to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */
    ,
    set: function set(outputCalendar) {
      defaultOutputCalendar = outputCalendar;
    }
    /**
     * Get whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals
     * @type {boolean}
     */

  }, {
    key: "throwOnInvalid",
    get: function get() {
      return throwOnInvalid;
    }
    /**
     * Set whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals
     * @type {boolean}
     */
    ,
    set: function set(t) {
      throwOnInvalid = t;
    }
  }]);

  return Settings;
}();

var intlDTCache = {};

function getCachedDTF(locString, opts) {
  if (opts === void 0) {
    opts = {};
  }

  var key = JSON.stringify([locString, opts]);
  var dtf = intlDTCache[key];

  if (!dtf) {
    dtf = new Intl.DateTimeFormat(locString, opts);
    intlDTCache[key] = dtf;
  }

  return dtf;
}

var intlNumCache = {};

function getCachedINF(locString, opts) {
  if (opts === void 0) {
    opts = {};
  }

  var key = JSON.stringify([locString, opts]);
  var inf = intlNumCache[key];

  if (!inf) {
    inf = new Intl.NumberFormat(locString, opts);
    intlNumCache[key] = inf;
  }

  return inf;
}

var intlRelCache = {};

function getCachedRTF(locString, opts) {
  if (opts === void 0) {
    opts = {};
  }

  var _opts = opts,
      base = _opts.base,
      cacheKeyOpts = _objectWithoutPropertiesLoose(_opts, ["base"]); // exclude `base` from the options


  var key = JSON.stringify([locString, cacheKeyOpts]);
  var inf = intlRelCache[key];

  if (!inf) {
    inf = new Intl.RelativeTimeFormat(locString, opts);
    intlRelCache[key] = inf;
  }

  return inf;
}

var sysLocaleCache = null;

function systemLocale() {
  if (sysLocaleCache) {
    return sysLocaleCache;
  } else if (hasIntl()) {
    var computedSys = new Intl.DateTimeFormat().resolvedOptions().locale; // node sometimes defaults to "und". Override that because that is dumb

    sysLocaleCache = !computedSys || computedSys === "und" ? "en-US" : computedSys;
    return sysLocaleCache;
  } else {
    sysLocaleCache = "en-US";
    return sysLocaleCache;
  }
}

function parseLocaleString(localeStr) {
  // I really want to avoid writing a BCP 47 parser
  // see, e.g. https://github.com/wooorm/bcp-47
  // Instead, we'll do this:
  // a) if the string has no -u extensions, just leave it alone
  // b) if it does, use Intl to resolve everything
  // c) if Intl fails, try again without the -u
  var uIndex = localeStr.indexOf("-u-");

  if (uIndex === -1) {
    return [localeStr];
  } else {
    var options;
    var smaller = localeStr.substring(0, uIndex);

    try {
      options = getCachedDTF(localeStr).resolvedOptions();
    } catch (e) {
      options = getCachedDTF(smaller).resolvedOptions();
    }

    var _options = options,
        numberingSystem = _options.numberingSystem,
        calendar = _options.calendar; // return the smaller one so that we can append the calendar and numbering overrides to it

    return [smaller, numberingSystem, calendar];
  }
}

function intlConfigString(localeStr, numberingSystem, outputCalendar) {
  if (hasIntl()) {
    if (outputCalendar || numberingSystem) {
      localeStr += "-u";

      if (outputCalendar) {
        localeStr += "-ca-" + outputCalendar;
      }

      if (numberingSystem) {
        localeStr += "-nu-" + numberingSystem;
      }

      return localeStr;
    } else {
      return localeStr;
    }
  } else {
    return [];
  }
}

function mapMonths(f) {
  var ms = [];

  for (var i = 1; i <= 12; i++) {
    var dt = DateTime.utc(2016, i, 1);
    ms.push(f(dt));
  }

  return ms;
}

function mapWeekdays(f) {
  var ms = [];

  for (var i = 1; i <= 7; i++) {
    var dt = DateTime.utc(2016, 11, 13 + i);
    ms.push(f(dt));
  }

  return ms;
}

function listStuff(loc, length, defaultOK, englishFn, intlFn) {
  var mode = loc.listingMode(defaultOK);

  if (mode === "error") {
    return null;
  } else if (mode === "en") {
    return englishFn(length);
  } else {
    return intlFn(length);
  }
}

function supportsFastNumbers(loc) {
  if (loc.numberingSystem && loc.numberingSystem !== "latn") {
    return false;
  } else {
    return loc.numberingSystem === "latn" || !loc.locale || loc.locale.startsWith("en") || hasIntl() && new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem === "latn";
  }
}
/**
 * @private
 */


var PolyNumberFormatter = /*#__PURE__*/function () {
  function PolyNumberFormatter(intl, forceSimple, opts) {
    this.padTo = opts.padTo || 0;
    this.floor = opts.floor || false;

    if (!forceSimple && hasIntl()) {
      var intlOpts = {
        useGrouping: false
      };
      if (opts.padTo > 0) intlOpts.minimumIntegerDigits = opts.padTo;
      this.inf = getCachedINF(intl, intlOpts);
    }
  }

  var _proto = PolyNumberFormatter.prototype;

  _proto.format = function format(i) {
    if (this.inf) {
      var fixed = this.floor ? Math.floor(i) : i;
      return this.inf.format(fixed);
    } else {
      // to match the browser's numberformatter defaults
      var _fixed = this.floor ? Math.floor(i) : roundTo(i, 3);

      return padStart(_fixed, this.padTo);
    }
  };

  return PolyNumberFormatter;
}();
/**
 * @private
 */


var PolyDateFormatter = /*#__PURE__*/function () {
  function PolyDateFormatter(dt, intl, opts) {
    this.opts = opts;
    this.hasIntl = hasIntl();
    var z;

    if (dt.zone.universal && this.hasIntl) {
      // UTC-8 or Etc/UTC-8 are not part of tzdata, only Etc/GMT+8 and the like.
      // That is why fixed-offset TZ is set to that unless it is:
      // 1. Representing offset 0 when UTC is used to maintain previous behavior and does not become GMT.
      // 2. Unsupported by the browser:
      //    - some do not support Etc/
      //    - < Etc/GMT-14, > Etc/GMT+12, and 30-minute or 45-minute offsets are not part of tzdata
      var gmtOffset = -1 * (dt.offset / 60);
      var offsetZ = gmtOffset >= 0 ? "Etc/GMT+" + gmtOffset : "Etc/GMT" + gmtOffset;
      var isOffsetZoneSupported = IANAZone.isValidZone(offsetZ);

      if (dt.offset !== 0 && isOffsetZoneSupported) {
        z = offsetZ;
        this.dt = dt;
      } else {
        // Not all fixed-offset zones like Etc/+4:30 are present in tzdata.
        // So we have to make do. Two cases:
        // 1. The format options tell us to show the zone. We can't do that, so the best
        // we can do is format the date in UTC.
        // 2. The format options don't tell us to show the zone. Then we can adjust them
        // the time and tell the formatter to show it to us in UTC, so that the time is right
        // and the bad zone doesn't show up.
        z = "UTC";

        if (opts.timeZoneName) {
          this.dt = dt;
        } else {
          this.dt = dt.offset === 0 ? dt : DateTime.fromMillis(dt.ts + dt.offset * 60 * 1000);
        }
      }
    } else if (dt.zone.type === "local") {
      this.dt = dt;
    } else {
      this.dt = dt;
      z = dt.zone.name;
    }

    if (this.hasIntl) {
      var intlOpts = Object.assign({}, this.opts);

      if (z) {
        intlOpts.timeZone = z;
      }

      this.dtf = getCachedDTF(intl, intlOpts);
    }
  }

  var _proto2 = PolyDateFormatter.prototype;

  _proto2.format = function format() {
    if (this.hasIntl) {
      return this.dtf.format(this.dt.toJSDate());
    } else {
      var tokenFormat = formatString(this.opts),
          loc = Locale.create("en-US");
      return Formatter.create(loc).formatDateTimeFromString(this.dt, tokenFormat);
    }
  };

  _proto2.formatToParts = function formatToParts() {
    if (this.hasIntl && hasFormatToParts()) {
      return this.dtf.formatToParts(this.dt.toJSDate());
    } else {
      // This is kind of a cop out. We actually could do this for English. However, we couldn't do it for intl strings
      // and IMO it's too weird to have an uncanny valley like that
      return [];
    }
  };

  _proto2.resolvedOptions = function resolvedOptions() {
    if (this.hasIntl) {
      return this.dtf.resolvedOptions();
    } else {
      return {
        locale: "en-US",
        numberingSystem: "latn",
        outputCalendar: "gregory"
      };
    }
  };

  return PolyDateFormatter;
}();
/**
 * @private
 */


var PolyRelFormatter = /*#__PURE__*/function () {
  function PolyRelFormatter(intl, isEnglish, opts) {
    this.opts = Object.assign({
      style: "long"
    }, opts);

    if (!isEnglish && hasRelative()) {
      this.rtf = getCachedRTF(intl, opts);
    }
  }

  var _proto3 = PolyRelFormatter.prototype;

  _proto3.format = function format(count, unit) {
    if (this.rtf) {
      return this.rtf.format(count, unit);
    } else {
      return formatRelativeTime(unit, count, this.opts.numeric, this.opts.style !== "long");
    }
  };

  _proto3.formatToParts = function formatToParts(count, unit) {
    if (this.rtf) {
      return this.rtf.formatToParts(count, unit);
    } else {
      return [];
    }
  };

  return PolyRelFormatter;
}();
/**
 * @private
 */


var Locale = /*#__PURE__*/function () {
  Locale.fromOpts = function fromOpts(opts) {
    return Locale.create(opts.locale, opts.numberingSystem, opts.outputCalendar, opts.defaultToEN);
  };

  Locale.create = function create(locale, numberingSystem, outputCalendar, defaultToEN) {
    if (defaultToEN === void 0) {
      defaultToEN = false;
    }

    var specifiedLocale = locale || Settings.defaultLocale,
        // the system locale is useful for human readable strings but annoying for parsing/formatting known formats
    localeR = specifiedLocale || (defaultToEN ? "en-US" : systemLocale()),
        numberingSystemR = numberingSystem || Settings.defaultNumberingSystem,
        outputCalendarR = outputCalendar || Settings.defaultOutputCalendar;
    return new Locale(localeR, numberingSystemR, outputCalendarR, specifiedLocale);
  };

  Locale.resetCache = function resetCache() {
    sysLocaleCache = null;
    intlDTCache = {};
    intlNumCache = {};
    intlRelCache = {};
  };

  Locale.fromObject = function fromObject(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        locale = _ref.locale,
        numberingSystem = _ref.numberingSystem,
        outputCalendar = _ref.outputCalendar;

    return Locale.create(locale, numberingSystem, outputCalendar);
  };

  function Locale(locale, numbering, outputCalendar, specifiedLocale) {
    var _parseLocaleString = parseLocaleString(locale),
        parsedLocale = _parseLocaleString[0],
        parsedNumberingSystem = _parseLocaleString[1],
        parsedOutputCalendar = _parseLocaleString[2];

    this.locale = parsedLocale;
    this.numberingSystem = numbering || parsedNumberingSystem || null;
    this.outputCalendar = outputCalendar || parsedOutputCalendar || null;
    this.intl = intlConfigString(this.locale, this.numberingSystem, this.outputCalendar);
    this.weekdaysCache = {
      format: {},
      standalone: {}
    };
    this.monthsCache = {
      format: {},
      standalone: {}
    };
    this.meridiemCache = null;
    this.eraCache = {};
    this.specifiedLocale = specifiedLocale;
    this.fastNumbersCached = null;
  }

  var _proto4 = Locale.prototype;

  _proto4.listingMode = function listingMode(defaultOK) {
    if (defaultOK === void 0) {
      defaultOK = true;
    }

    var intl = hasIntl(),
        hasFTP = intl && hasFormatToParts(),
        isActuallyEn = this.isEnglish(),
        hasNoWeirdness = (this.numberingSystem === null || this.numberingSystem === "latn") && (this.outputCalendar === null || this.outputCalendar === "gregory");

    if (!hasFTP && !(isActuallyEn && hasNoWeirdness) && !defaultOK) {
      return "error";
    } else if (!hasFTP || isActuallyEn && hasNoWeirdness) {
      return "en";
    } else {
      return "intl";
    }
  };

  _proto4.clone = function clone(alts) {
    if (!alts || Object.getOwnPropertyNames(alts).length === 0) {
      return this;
    } else {
      return Locale.create(alts.locale || this.specifiedLocale, alts.numberingSystem || this.numberingSystem, alts.outputCalendar || this.outputCalendar, alts.defaultToEN || false);
    }
  };

  _proto4.redefaultToEN = function redefaultToEN(alts) {
    if (alts === void 0) {
      alts = {};
    }

    return this.clone(Object.assign({}, alts, {
      defaultToEN: true
    }));
  };

  _proto4.redefaultToSystem = function redefaultToSystem(alts) {
    if (alts === void 0) {
      alts = {};
    }

    return this.clone(Object.assign({}, alts, {
      defaultToEN: false
    }));
  };

  _proto4.months = function months$1(length, format, defaultOK) {
    var _this = this;

    if (format === void 0) {
      format = false;
    }

    if (defaultOK === void 0) {
      defaultOK = true;
    }

    return listStuff(this, length, defaultOK, months, function () {
      var intl = format ? {
        month: length,
        day: "numeric"
      } : {
        month: length
      },
          formatStr = format ? "format" : "standalone";

      if (!_this.monthsCache[formatStr][length]) {
        _this.monthsCache[formatStr][length] = mapMonths(function (dt) {
          return _this.extract(dt, intl, "month");
        });
      }

      return _this.monthsCache[formatStr][length];
    });
  };

  _proto4.weekdays = function weekdays$1(length, format, defaultOK) {
    var _this2 = this;

    if (format === void 0) {
      format = false;
    }

    if (defaultOK === void 0) {
      defaultOK = true;
    }

    return listStuff(this, length, defaultOK, weekdays, function () {
      var intl = format ? {
        weekday: length,
        year: "numeric",
        month: "long",
        day: "numeric"
      } : {
        weekday: length
      },
          formatStr = format ? "format" : "standalone";

      if (!_this2.weekdaysCache[formatStr][length]) {
        _this2.weekdaysCache[formatStr][length] = mapWeekdays(function (dt) {
          return _this2.extract(dt, intl, "weekday");
        });
      }

      return _this2.weekdaysCache[formatStr][length];
    });
  };

  _proto4.meridiems = function meridiems$1(defaultOK) {
    var _this3 = this;

    if (defaultOK === void 0) {
      defaultOK = true;
    }

    return listStuff(this, undefined, defaultOK, function () {
      return meridiems;
    }, function () {
      // In theory there could be aribitrary day periods. We're gonna assume there are exactly two
      // for AM and PM. This is probably wrong, but it's makes parsing way easier.
      if (!_this3.meridiemCache) {
        var intl = {
          hour: "numeric",
          hour12: true
        };
        _this3.meridiemCache = [DateTime.utc(2016, 11, 13, 9), DateTime.utc(2016, 11, 13, 19)].map(function (dt) {
          return _this3.extract(dt, intl, "dayperiod");
        });
      }

      return _this3.meridiemCache;
    });
  };

  _proto4.eras = function eras$1(length, defaultOK) {
    var _this4 = this;

    if (defaultOK === void 0) {
      defaultOK = true;
    }

    return listStuff(this, length, defaultOK, eras, function () {
      var intl = {
        era: length
      }; // This is problematic. Different calendars are going to define eras totally differently. What I need is the minimum set of dates
      // to definitely enumerate them.

      if (!_this4.eraCache[length]) {
        _this4.eraCache[length] = [DateTime.utc(-40, 1, 1), DateTime.utc(2017, 1, 1)].map(function (dt) {
          return _this4.extract(dt, intl, "era");
        });
      }

      return _this4.eraCache[length];
    });
  };

  _proto4.extract = function extract(dt, intlOpts, field) {
    var df = this.dtFormatter(dt, intlOpts),
        results = df.formatToParts(),
        matching = results.find(function (m) {
      return m.type.toLowerCase() === field;
    });
    return matching ? matching.value : null;
  };

  _proto4.numberFormatter = function numberFormatter(opts) {
    if (opts === void 0) {
      opts = {};
    }

    // this forcesimple option is never used (the only caller short-circuits on it, but it seems safer to leave)
    // (in contrast, the rest of the condition is used heavily)
    return new PolyNumberFormatter(this.intl, opts.forceSimple || this.fastNumbers, opts);
  };

  _proto4.dtFormatter = function dtFormatter(dt, intlOpts) {
    if (intlOpts === void 0) {
      intlOpts = {};
    }

    return new PolyDateFormatter(dt, this.intl, intlOpts);
  };

  _proto4.relFormatter = function relFormatter(opts) {
    if (opts === void 0) {
      opts = {};
    }

    return new PolyRelFormatter(this.intl, this.isEnglish(), opts);
  };

  _proto4.isEnglish = function isEnglish() {
    return this.locale === "en" || this.locale.toLowerCase() === "en-us" || hasIntl() && new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith("en-us");
  };

  _proto4.equals = function equals(other) {
    return this.locale === other.locale && this.numberingSystem === other.numberingSystem && this.outputCalendar === other.outputCalendar;
  };

  _createClass(Locale, [{
    key: "fastNumbers",
    get: function get() {
      if (this.fastNumbersCached == null) {
        this.fastNumbersCached = supportsFastNumbers(this);
      }

      return this.fastNumbersCached;
    }
  }]);

  return Locale;
}();

/*
 * This file handles parsing for well-specified formats. Here's how it works:
 * Two things go into parsing: a regex to match with and an extractor to take apart the groups in the match.
 * An extractor is just a function that takes a regex match array and returns a { year: ..., month: ... } object
 * parse() does the work of executing the regex and applying the extractor. It takes multiple regex/extractor pairs to try in sequence.
 * Extractors can take a "cursor" representing the offset in the match to look at. This makes it easy to combine extractors.
 * combineExtractors() does the work of combining them, keeping track of the cursor through multiple extractions.
 * Some extractions are super dumb and simpleParse and fromStrings help DRY them.
 */

function combineRegexes() {
  for (var _len = arguments.length, regexes = new Array(_len), _key = 0; _key < _len; _key++) {
    regexes[_key] = arguments[_key];
  }

  var full = regexes.reduce(function (f, r) {
    return f + r.source;
  }, "");
  return RegExp("^" + full + "$");
}

function combineExtractors() {
  for (var _len2 = arguments.length, extractors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    extractors[_key2] = arguments[_key2];
  }

  return function (m) {
    return extractors.reduce(function (_ref, ex) {
      var mergedVals = _ref[0],
          mergedZone = _ref[1],
          cursor = _ref[2];

      var _ex = ex(m, cursor),
          val = _ex[0],
          zone = _ex[1],
          next = _ex[2];

      return [Object.assign(mergedVals, val), mergedZone || zone, next];
    }, [{}, null, 1]).slice(0, 2);
  };
}

function parse(s) {
  if (s == null) {
    return [null, null];
  }

  for (var _len3 = arguments.length, patterns = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    patterns[_key3 - 1] = arguments[_key3];
  }

  for (var _i = 0, _patterns = patterns; _i < _patterns.length; _i++) {
    var _patterns$_i = _patterns[_i],
        regex = _patterns$_i[0],
        extractor = _patterns$_i[1];
    var m = regex.exec(s);

    if (m) {
      return extractor(m);
    }
  }

  return [null, null];
}

function simpleParse() {
  for (var _len4 = arguments.length, keys = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    keys[_key4] = arguments[_key4];
  }

  return function (match, cursor) {
    var ret = {};
    var i;

    for (i = 0; i < keys.length; i++) {
      ret[keys[i]] = parseInteger(match[cursor + i]);
    }

    return [ret, null, cursor + i];
  };
} // ISO and SQL parsing


var offsetRegex = /(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/,
    isoTimeBaseRegex = /(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/,
    isoTimeRegex = RegExp("" + isoTimeBaseRegex.source + offsetRegex.source + "?"),
    isoTimeExtensionRegex = RegExp("(?:T" + isoTimeRegex.source + ")?"),
    isoYmdRegex = /([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/,
    isoWeekRegex = /(\d{4})-?W(\d\d)(?:-?(\d))?/,
    isoOrdinalRegex = /(\d{4})-?(\d{3})/,
    extractISOWeekData = simpleParse("weekYear", "weekNumber", "weekDay"),
    extractISOOrdinalData = simpleParse("year", "ordinal"),
    sqlYmdRegex = /(\d{4})-(\d\d)-(\d\d)/,
    // dumbed-down version of the ISO one
sqlTimeRegex = RegExp(isoTimeBaseRegex.source + " ?(?:" + offsetRegex.source + "|(" + ianaRegex.source + "))?"),
    sqlTimeExtensionRegex = RegExp("(?: " + sqlTimeRegex.source + ")?");

function int(match, pos, fallback) {
  var m = match[pos];
  return isUndefined(m) ? fallback : parseInteger(m);
}

function extractISOYmd(match, cursor) {
  var item = {
    year: int(match, cursor),
    month: int(match, cursor + 1, 1),
    day: int(match, cursor + 2, 1)
  };
  return [item, null, cursor + 3];
}

function extractISOTime(match, cursor) {
  var item = {
    hours: int(match, cursor, 0),
    minutes: int(match, cursor + 1, 0),
    seconds: int(match, cursor + 2, 0),
    milliseconds: parseMillis(match[cursor + 3])
  };
  return [item, null, cursor + 4];
}

function extractISOOffset(match, cursor) {
  var local = !match[cursor] && !match[cursor + 1],
      fullOffset = signedOffset(match[cursor + 1], match[cursor + 2]),
      zone = local ? null : FixedOffsetZone.instance(fullOffset);
  return [{}, zone, cursor + 3];
}

function extractIANAZone(match, cursor) {
  var zone = match[cursor] ? IANAZone.create(match[cursor]) : null;
  return [{}, zone, cursor + 1];
} // ISO time parsing


var isoTimeOnly = RegExp("^T?" + isoTimeBaseRegex.source + "$"); // ISO duration parsing

var isoDuration = /^-?P(?:(?:(-?\d{1,9})Y)?(?:(-?\d{1,9})M)?(?:(-?\d{1,9})W)?(?:(-?\d{1,9})D)?(?:T(?:(-?\d{1,9})H)?(?:(-?\d{1,9})M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,9}))?S)?)?)$/;

function extractISODuration(match) {
  var s = match[0],
      yearStr = match[1],
      monthStr = match[2],
      weekStr = match[3],
      dayStr = match[4],
      hourStr = match[5],
      minuteStr = match[6],
      secondStr = match[7],
      millisecondsStr = match[8];
  var hasNegativePrefix = s[0] === "-";
  var negativeSeconds = secondStr && secondStr[0] === "-";

  var maybeNegate = function maybeNegate(num, force) {
    if (force === void 0) {
      force = false;
    }

    return num !== undefined && (force || num && hasNegativePrefix) ? -num : num;
  };

  return [{
    years: maybeNegate(parseInteger(yearStr)),
    months: maybeNegate(parseInteger(monthStr)),
    weeks: maybeNegate(parseInteger(weekStr)),
    days: maybeNegate(parseInteger(dayStr)),
    hours: maybeNegate(parseInteger(hourStr)),
    minutes: maybeNegate(parseInteger(minuteStr)),
    seconds: maybeNegate(parseInteger(secondStr), secondStr === "-0"),
    milliseconds: maybeNegate(parseMillis(millisecondsStr), negativeSeconds)
  }];
} // These are a little braindead. EDT *should* tell us that we're in, say, America/New_York
// and not just that we're in -240 *right now*. But since I don't think these are used that often
// I'm just going to ignore that


var obsOffsets = {
  GMT: 0,
  EDT: -4 * 60,
  EST: -5 * 60,
  CDT: -5 * 60,
  CST: -6 * 60,
  MDT: -6 * 60,
  MST: -7 * 60,
  PDT: -7 * 60,
  PST: -8 * 60
};

function fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
  var result = {
    year: yearStr.length === 2 ? untruncateYear(parseInteger(yearStr)) : parseInteger(yearStr),
    month: monthsShort.indexOf(monthStr) + 1,
    day: parseInteger(dayStr),
    hour: parseInteger(hourStr),
    minute: parseInteger(minuteStr)
  };
  if (secondStr) result.second = parseInteger(secondStr);

  if (weekdayStr) {
    result.weekday = weekdayStr.length > 3 ? weekdaysLong.indexOf(weekdayStr) + 1 : weekdaysShort.indexOf(weekdayStr) + 1;
  }

  return result;
} // RFC 2822/5322


var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;

function extractRFC2822(match) {
  var weekdayStr = match[1],
      dayStr = match[2],
      monthStr = match[3],
      yearStr = match[4],
      hourStr = match[5],
      minuteStr = match[6],
      secondStr = match[7],
      obsOffset = match[8],
      milOffset = match[9],
      offHourStr = match[10],
      offMinuteStr = match[11],
      result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  var offset;

  if (obsOffset) {
    offset = obsOffsets[obsOffset];
  } else if (milOffset) {
    offset = 0;
  } else {
    offset = signedOffset(offHourStr, offMinuteStr);
  }

  return [result, new FixedOffsetZone(offset)];
}

function preprocessRFC2822(s) {
  // Remove comments and folding whitespace and replace multiple-spaces with a single space
  return s.replace(/\([^)]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").trim();
} // http date


var rfc1123 = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,
    rfc850 = /^(Monday|Tuesday|Wedsday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,
    ascii = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;

function extractRFC1123Or850(match) {
  var weekdayStr = match[1],
      dayStr = match[2],
      monthStr = match[3],
      yearStr = match[4],
      hourStr = match[5],
      minuteStr = match[6],
      secondStr = match[7],
      result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  return [result, FixedOffsetZone.utcInstance];
}

function extractASCII(match) {
  var weekdayStr = match[1],
      monthStr = match[2],
      dayStr = match[3],
      hourStr = match[4],
      minuteStr = match[5],
      secondStr = match[6],
      yearStr = match[7],
      result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  return [result, FixedOffsetZone.utcInstance];
}

var isoYmdWithTimeExtensionRegex = combineRegexes(isoYmdRegex, isoTimeExtensionRegex);
var isoWeekWithTimeExtensionRegex = combineRegexes(isoWeekRegex, isoTimeExtensionRegex);
var isoOrdinalWithTimeExtensionRegex = combineRegexes(isoOrdinalRegex, isoTimeExtensionRegex);
var isoTimeCombinedRegex = combineRegexes(isoTimeRegex);
var extractISOYmdTimeAndOffset = combineExtractors(extractISOYmd, extractISOTime, extractISOOffset);
var extractISOWeekTimeAndOffset = combineExtractors(extractISOWeekData, extractISOTime, extractISOOffset);
var extractISOOrdinalDateAndTime = combineExtractors(extractISOOrdinalData, extractISOTime, extractISOOffset);
var extractISOTimeAndOffset = combineExtractors(extractISOTime, extractISOOffset);
/**
 * @private
 */

function parseISODate(s) {
  return parse(s, [isoYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset], [isoWeekWithTimeExtensionRegex, extractISOWeekTimeAndOffset], [isoOrdinalWithTimeExtensionRegex, extractISOOrdinalDateAndTime], [isoTimeCombinedRegex, extractISOTimeAndOffset]);
}
function parseRFC2822Date(s) {
  return parse(preprocessRFC2822(s), [rfc2822, extractRFC2822]);
}
function parseHTTPDate(s) {
  return parse(s, [rfc1123, extractRFC1123Or850], [rfc850, extractRFC1123Or850], [ascii, extractASCII]);
}
function parseISODuration(s) {
  return parse(s, [isoDuration, extractISODuration]);
}
var extractISOTimeOnly = combineExtractors(extractISOTime);
function parseISOTimeOnly(s) {
  return parse(s, [isoTimeOnly, extractISOTimeOnly]);
}
var sqlYmdWithTimeExtensionRegex = combineRegexes(sqlYmdRegex, sqlTimeExtensionRegex);
var sqlTimeCombinedRegex = combineRegexes(sqlTimeRegex);
var extractISOYmdTimeOffsetAndIANAZone = combineExtractors(extractISOYmd, extractISOTime, extractISOOffset, extractIANAZone);
var extractISOTimeOffsetAndIANAZone = combineExtractors(extractISOTime, extractISOOffset, extractIANAZone);
function parseSQL(s) {
  return parse(s, [sqlYmdWithTimeExtensionRegex, extractISOYmdTimeOffsetAndIANAZone], [sqlTimeCombinedRegex, extractISOTimeOffsetAndIANAZone]);
}

var INVALID = "Invalid Duration"; // unit conversion constants

var lowOrderMatrix = {
  weeks: {
    days: 7,
    hours: 7 * 24,
    minutes: 7 * 24 * 60,
    seconds: 7 * 24 * 60 * 60,
    milliseconds: 7 * 24 * 60 * 60 * 1000
  },
  days: {
    hours: 24,
    minutes: 24 * 60,
    seconds: 24 * 60 * 60,
    milliseconds: 24 * 60 * 60 * 1000
  },
  hours: {
    minutes: 60,
    seconds: 60 * 60,
    milliseconds: 60 * 60 * 1000
  },
  minutes: {
    seconds: 60,
    milliseconds: 60 * 1000
  },
  seconds: {
    milliseconds: 1000
  }
},
    casualMatrix = Object.assign({
  years: {
    quarters: 4,
    months: 12,
    weeks: 52,
    days: 365,
    hours: 365 * 24,
    minutes: 365 * 24 * 60,
    seconds: 365 * 24 * 60 * 60,
    milliseconds: 365 * 24 * 60 * 60 * 1000
  },
  quarters: {
    months: 3,
    weeks: 13,
    days: 91,
    hours: 91 * 24,
    minutes: 91 * 24 * 60,
    seconds: 91 * 24 * 60 * 60,
    milliseconds: 91 * 24 * 60 * 60 * 1000
  },
  months: {
    weeks: 4,
    days: 30,
    hours: 30 * 24,
    minutes: 30 * 24 * 60,
    seconds: 30 * 24 * 60 * 60,
    milliseconds: 30 * 24 * 60 * 60 * 1000
  }
}, lowOrderMatrix),
    daysInYearAccurate = 146097.0 / 400,
    daysInMonthAccurate = 146097.0 / 4800,
    accurateMatrix = Object.assign({
  years: {
    quarters: 4,
    months: 12,
    weeks: daysInYearAccurate / 7,
    days: daysInYearAccurate,
    hours: daysInYearAccurate * 24,
    minutes: daysInYearAccurate * 24 * 60,
    seconds: daysInYearAccurate * 24 * 60 * 60,
    milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000
  },
  quarters: {
    months: 3,
    weeks: daysInYearAccurate / 28,
    days: daysInYearAccurate / 4,
    hours: daysInYearAccurate * 24 / 4,
    minutes: daysInYearAccurate * 24 * 60 / 4,
    seconds: daysInYearAccurate * 24 * 60 * 60 / 4,
    milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000 / 4
  },
  months: {
    weeks: daysInMonthAccurate / 7,
    days: daysInMonthAccurate,
    hours: daysInMonthAccurate * 24,
    minutes: daysInMonthAccurate * 24 * 60,
    seconds: daysInMonthAccurate * 24 * 60 * 60,
    milliseconds: daysInMonthAccurate * 24 * 60 * 60 * 1000
  }
}, lowOrderMatrix); // units ordered by size

var orderedUnits = ["years", "quarters", "months", "weeks", "days", "hours", "minutes", "seconds", "milliseconds"];
var reverseUnits = orderedUnits.slice(0).reverse(); // clone really means "create another instance just like this one, but with these changes"

function clone(dur, alts, clear) {
  if (clear === void 0) {
    clear = false;
  }

  // deep merge for vals
  var conf = {
    values: clear ? alts.values : Object.assign({}, dur.values, alts.values || {}),
    loc: dur.loc.clone(alts.loc),
    conversionAccuracy: alts.conversionAccuracy || dur.conversionAccuracy
  };
  return new Duration(conf);
}

function antiTrunc(n) {
  return n < 0 ? Math.floor(n) : Math.ceil(n);
} // NB: mutates parameters


function convert(matrix, fromMap, fromUnit, toMap, toUnit) {
  var conv = matrix[toUnit][fromUnit],
      raw = fromMap[fromUnit] / conv,
      sameSign = Math.sign(raw) === Math.sign(toMap[toUnit]),
      // ok, so this is wild, but see the matrix in the tests
  added = !sameSign && toMap[toUnit] !== 0 && Math.abs(raw) <= 1 ? antiTrunc(raw) : Math.trunc(raw);
  toMap[toUnit] += added;
  fromMap[fromUnit] -= added * conv;
} // NB: mutates parameters


function normalizeValues(matrix, vals) {
  reverseUnits.reduce(function (previous, current) {
    if (!isUndefined(vals[current])) {
      if (previous) {
        convert(matrix, vals, previous, vals, current);
      }

      return current;
    } else {
      return previous;
    }
  }, null);
}
/**
 * A Duration object represents a period of time, like "2 months" or "1 day, 1 hour". Conceptually, it's just a map of units to their quantities, accompanied by some additional configuration and methods for creating, parsing, interrogating, transforming, and formatting them. They can be used on their own or in conjunction with other Luxon types; for example, you can use {@link DateTime.plus} to add a Duration object to a DateTime, producing another DateTime.
 *
 * Here is a brief overview of commonly used methods and getters in Duration:
 *
 * * **Creation** To create a Duration, use {@link Duration.fromMillis}, {@link Duration.fromObject}, or {@link Duration.fromISO}.
 * * **Unit values** See the {@link Duration.years}, {@link Duration.months}, {@link Duration.weeks}, {@link Duration.days}, {@link Duration.hours}, {@link Duration.minutes}, {@link Duration.seconds}, {@link Duration.milliseconds} accessors.
 * * **Configuration** See  {@link Duration.locale} and {@link Duration.numberingSystem} accessors.
 * * **Transformation** To create new Durations out of old ones use {@link Duration.plus}, {@link Duration.minus}, {@link Duration.normalize}, {@link Duration.set}, {@link Duration.reconfigure}, {@link Duration.shiftTo}, and {@link Duration.negate}.
 * * **Output** To convert the Duration into other representations, see {@link Duration.as}, {@link Duration.toISO}, {@link Duration.toFormat}, and {@link Duration.toJSON}
 *
 * There's are more methods documented below. In addition, for more information on subtler topics like internationalization and validity, see the external documentation.
 */


var Duration = /*#__PURE__*/function () {
  /**
   * @private
   */
  function Duration(config) {
    var accurate = config.conversionAccuracy === "longterm" || false;
    /**
     * @access private
     */

    this.values = config.values;
    /**
     * @access private
     */

    this.loc = config.loc || Locale.create();
    /**
     * @access private
     */

    this.conversionAccuracy = accurate ? "longterm" : "casual";
    /**
     * @access private
     */

    this.invalid = config.invalid || null;
    /**
     * @access private
     */

    this.matrix = accurate ? accurateMatrix : casualMatrix;
    /**
     * @access private
     */

    this.isLuxonDuration = true;
  }
  /**
   * Create Duration from a number of milliseconds.
   * @param {number} count of milliseconds
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @return {Duration}
   */


  Duration.fromMillis = function fromMillis(count, opts) {
    return Duration.fromObject(Object.assign({
      milliseconds: count
    }, opts));
  }
  /**
   * Create a Duration from a JavaScript object with keys like 'years' and 'hours'.
   * If this object is empty then a zero milliseconds duration is returned.
   * @param {Object} obj - the object to create the DateTime from
   * @param {number} obj.years
   * @param {number} obj.quarters
   * @param {number} obj.months
   * @param {number} obj.weeks
   * @param {number} obj.days
   * @param {number} obj.hours
   * @param {number} obj.minutes
   * @param {number} obj.seconds
   * @param {number} obj.milliseconds
   * @param {string} [obj.locale='en-US'] - the locale to use
   * @param {string} obj.numberingSystem - the numbering system to use
   * @param {string} [obj.conversionAccuracy='casual'] - the conversion system to use
   * @return {Duration}
   */
  ;

  Duration.fromObject = function fromObject(obj) {
    if (obj == null || typeof obj !== "object") {
      throw new InvalidArgumentError("Duration.fromObject: argument expected to be an object, got " + (obj === null ? "null" : typeof obj));
    }

    return new Duration({
      values: normalizeObject(obj, Duration.normalizeUnit, ["locale", "numberingSystem", "conversionAccuracy", "zone" // a bit of debt; it's super inconvenient internally not to be able to blindly pass this
      ]),
      loc: Locale.fromObject(obj),
      conversionAccuracy: obj.conversionAccuracy
    });
  }
  /**
   * Create a Duration from an ISO 8601 duration string.
   * @param {string} text - text to parse
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations
   * @example Duration.fromISO('P3Y6M1W4DT12H30M5S').toObject() //=> { years: 3, months: 6, weeks: 1, days: 4, hours: 12, minutes: 30, seconds: 5 }
   * @example Duration.fromISO('PT23H').toObject() //=> { hours: 23 }
   * @example Duration.fromISO('P5Y3M').toObject() //=> { years: 5, months: 3 }
   * @return {Duration}
   */
  ;

  Duration.fromISO = function fromISO(text, opts) {
    var _parseISODuration = parseISODuration(text),
        parsed = _parseISODuration[0];

    if (parsed) {
      var obj = Object.assign(parsed, opts);
      return Duration.fromObject(obj);
    } else {
      return Duration.invalid("unparsable", "the input \"" + text + "\" can't be parsed as ISO 8601");
    }
  }
  /**
   * Create a Duration from an ISO 8601 time string.
   * @param {string} text - text to parse
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @see https://en.wikipedia.org/wiki/ISO_8601#Times
   * @example Duration.fromISOTime('11:22:33.444').toObject() //=> { hours: 11, minutes: 22, seconds: 33, milliseconds: 444 }
   * @example Duration.fromISOTime('11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('T11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('T1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @return {Duration}
   */
  ;

  Duration.fromISOTime = function fromISOTime(text, opts) {
    var _parseISOTimeOnly = parseISOTimeOnly(text),
        parsed = _parseISOTimeOnly[0];

    if (parsed) {
      var obj = Object.assign(parsed, opts);
      return Duration.fromObject(obj);
    } else {
      return Duration.invalid("unparsable", "the input \"" + text + "\" can't be parsed as ISO 8601");
    }
  }
  /**
   * Create an invalid Duration.
   * @param {string} reason - simple string of why this datetime is invalid. Should not contain parameters or anything else data-dependent
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {Duration}
   */
  ;

  Duration.invalid = function invalid(reason, explanation) {
    if (explanation === void 0) {
      explanation = null;
    }

    if (!reason) {
      throw new InvalidArgumentError("need to specify a reason the Duration is invalid");
    }

    var invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);

    if (Settings.throwOnInvalid) {
      throw new InvalidDurationError(invalid);
    } else {
      return new Duration({
        invalid: invalid
      });
    }
  }
  /**
   * @private
   */
  ;

  Duration.normalizeUnit = function normalizeUnit(unit) {
    var normalized = {
      year: "years",
      years: "years",
      quarter: "quarters",
      quarters: "quarters",
      month: "months",
      months: "months",
      week: "weeks",
      weeks: "weeks",
      day: "days",
      days: "days",
      hour: "hours",
      hours: "hours",
      minute: "minutes",
      minutes: "minutes",
      second: "seconds",
      seconds: "seconds",
      millisecond: "milliseconds",
      milliseconds: "milliseconds"
    }[unit ? unit.toLowerCase() : unit];
    if (!normalized) throw new InvalidUnitError(unit);
    return normalized;
  }
  /**
   * Check if an object is a Duration. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  ;

  Duration.isDuration = function isDuration(o) {
    return o && o.isLuxonDuration || false;
  }
  /**
   * Get  the locale of a Duration, such 'en-GB'
   * @type {string}
   */
  ;

  var _proto = Duration.prototype;

  /**
   * Returns a string representation of this Duration formatted according to the specified format string. You may use these tokens:
   * * `S` for milliseconds
   * * `s` for seconds
   * * `m` for minutes
   * * `h` for hours
   * * `d` for days
   * * `M` for months
   * * `y` for years
   * Notes:
   * * Add padding by repeating the token, e.g. "yy" pads the years to two digits, "hhhh" pads the hours out to four digits
   * * The duration will be converted to the set of units in the format string using {@link Duration.shiftTo} and the Durations's conversion accuracy setting.
   * @param {string} fmt - the format string
   * @param {Object} opts - options
   * @param {boolean} [opts.floor=true] - floor numerical values
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("y d s") //=> "1 6 2"
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("yy dd sss") //=> "01 06 002"
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("M S") //=> "12 518402000"
   * @return {string}
   */
  _proto.toFormat = function toFormat(fmt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    // reverse-compat since 1.2; we always round down now, never up, and we do it by default
    var fmtOpts = Object.assign({}, opts, {
      floor: opts.round !== false && opts.floor !== false
    });
    return this.isValid ? Formatter.create(this.loc, fmtOpts).formatDurationFromString(this, fmt) : INVALID;
  }
  /**
   * Returns a JavaScript object with this Duration's values.
   * @param opts - options for generating the object
   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toObject() //=> { years: 1, days: 6, seconds: 2 }
   * @return {Object}
   */
  ;

  _proto.toObject = function toObject(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) return {};
    var base = Object.assign({}, this.values);

    if (opts.includeConfig) {
      base.conversionAccuracy = this.conversionAccuracy;
      base.numberingSystem = this.loc.numberingSystem;
      base.locale = this.loc.locale;
    }

    return base;
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Duration.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations
   * @example Duration.fromObject({ years: 3, seconds: 45 }).toISO() //=> 'P3YT45S'
   * @example Duration.fromObject({ months: 4, seconds: 45 }).toISO() //=> 'P4MT45S'
   * @example Duration.fromObject({ months: 5 }).toISO() //=> 'P5M'
   * @example Duration.fromObject({ minutes: 5 }).toISO() //=> 'PT5M'
   * @example Duration.fromObject({ milliseconds: 6 }).toISO() //=> 'PT0.006S'
   * @return {string}
   */
  ;

  _proto.toISO = function toISO() {
    // we could use the formatter, but this is an easier way to get the minimum string
    if (!this.isValid) return null;
    var s = "P";
    if (this.years !== 0) s += this.years + "Y";
    if (this.months !== 0 || this.quarters !== 0) s += this.months + this.quarters * 3 + "M";
    if (this.weeks !== 0) s += this.weeks + "W";
    if (this.days !== 0) s += this.days + "D";
    if (this.hours !== 0 || this.minutes !== 0 || this.seconds !== 0 || this.milliseconds !== 0) s += "T";
    if (this.hours !== 0) s += this.hours + "H";
    if (this.minutes !== 0) s += this.minutes + "M";
    if (this.seconds !== 0 || this.milliseconds !== 0) // this will handle "floating point madness" by removing extra decimal places
      // https://stackoverflow.com/questions/588004/is-floating-point-math-broken
      s += roundTo(this.seconds + this.milliseconds / 1000, 3) + "S";
    if (s === "P") s += "T0S";
    return s;
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Duration, formatted as a time of day.
   * Note that this will return null if the duration is invalid, negative, or equal to or greater than 24 hours.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Times
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example Duration.fromObject({ hours: 11 }).toISOTime() //=> '11:00:00.000'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressMilliseconds: true }) //=> '11:00:00'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressSeconds: true }) //=> '11:00'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ includePrefix: true }) //=> 'T11:00:00.000'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ format: 'basic' }) //=> '110000.000'
   * @return {string}
   */
  ;

  _proto.toISOTime = function toISOTime(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) return null;
    var millis = this.toMillis();
    if (millis < 0 || millis >= 86400000) return null;
    opts = Object.assign({
      suppressMilliseconds: false,
      suppressSeconds: false,
      includePrefix: false,
      format: "extended"
    }, opts);
    var value = this.shiftTo("hours", "minutes", "seconds", "milliseconds");
    var fmt = opts.format === "basic" ? "hhmm" : "hh:mm";

    if (!opts.suppressSeconds || value.seconds !== 0 || value.milliseconds !== 0) {
      fmt += opts.format === "basic" ? "ss" : ":ss";

      if (!opts.suppressMilliseconds || value.milliseconds !== 0) {
        fmt += ".SSS";
      }
    }

    var str = value.toFormat(fmt);

    if (opts.includePrefix) {
      str = "T" + str;
    }

    return str;
  }
  /**
   * Returns an ISO 8601 representation of this Duration appropriate for use in JSON.
   * @return {string}
   */
  ;

  _proto.toJSON = function toJSON() {
    return this.toISO();
  }
  /**
   * Returns an ISO 8601 representation of this Duration appropriate for use in debugging.
   * @return {string}
   */
  ;

  _proto.toString = function toString() {
    return this.toISO();
  }
  /**
   * Returns an milliseconds value of this Duration.
   * @return {number}
   */
  ;

  _proto.toMillis = function toMillis() {
    return this.as("milliseconds");
  }
  /**
   * Returns an milliseconds value of this Duration. Alias of {@link toMillis}
   * @return {number}
   */
  ;

  _proto.valueOf = function valueOf() {
    return this.toMillis();
  }
  /**
   * Make this Duration longer by the specified amount. Return a newly-constructed Duration.
   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @return {Duration}
   */
  ;

  _proto.plus = function plus(duration) {
    if (!this.isValid) return this;
    var dur = friendlyDuration(duration),
        result = {};

    for (var _iterator = _createForOfIteratorHelperLoose(orderedUnits), _step; !(_step = _iterator()).done;) {
      var k = _step.value;

      if (hasOwnProperty(dur.values, k) || hasOwnProperty(this.values, k)) {
        result[k] = dur.get(k) + this.get(k);
      }
    }

    return clone(this, {
      values: result
    }, true);
  }
  /**
   * Make this Duration shorter by the specified amount. Return a newly-constructed Duration.
   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @return {Duration}
   */
  ;

  _proto.minus = function minus(duration) {
    if (!this.isValid) return this;
    var dur = friendlyDuration(duration);
    return this.plus(dur.negate());
  }
  /**
   * Scale this Duration by the specified amount. Return a newly-constructed Duration.
   * @param {function} fn - The function to apply to each unit. Arity is 1 or 2: the value of the unit and, optionally, the unit name. Must return a number.
   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnit(x => x * 2) //=> { hours: 2, minutes: 60 }
   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnit((x, u) => u === "hour" ? x * 2 : x) //=> { hours: 2, minutes: 30 }
   * @return {Duration}
   */
  ;

  _proto.mapUnits = function mapUnits(fn) {
    if (!this.isValid) return this;
    var result = {};

    for (var _i = 0, _Object$keys = Object.keys(this.values); _i < _Object$keys.length; _i++) {
      var k = _Object$keys[_i];
      result[k] = asNumber(fn(this.values[k], k));
    }

    return clone(this, {
      values: result
    }, true);
  }
  /**
   * Get the value of unit.
   * @param {string} unit - a unit such as 'minute' or 'day'
   * @example Duration.fromObject({years: 2, days: 3}).get('years') //=> 2
   * @example Duration.fromObject({years: 2, days: 3}).get('months') //=> 0
   * @example Duration.fromObject({years: 2, days: 3}).get('days') //=> 3
   * @return {number}
   */
  ;

  _proto.get = function get(unit) {
    return this[Duration.normalizeUnit(unit)];
  }
  /**
   * "Set" the values of specified units. Return a newly-constructed Duration.
   * @param {Object} values - a mapping of units to numbers
   * @example dur.set({ years: 2017 })
   * @example dur.set({ hours: 8, minutes: 30 })
   * @return {Duration}
   */
  ;

  _proto.set = function set(values) {
    if (!this.isValid) return this;
    var mixed = Object.assign(this.values, normalizeObject(values, Duration.normalizeUnit, []));
    return clone(this, {
      values: mixed
    });
  }
  /**
   * "Set" the locale and/or numberingSystem.  Returns a newly-constructed Duration.
   * @example dur.reconfigure({ locale: 'en-GB' })
   * @return {Duration}
   */
  ;

  _proto.reconfigure = function reconfigure(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        locale = _ref.locale,
        numberingSystem = _ref.numberingSystem,
        conversionAccuracy = _ref.conversionAccuracy;

    var loc = this.loc.clone({
      locale: locale,
      numberingSystem: numberingSystem
    }),
        opts = {
      loc: loc
    };

    if (conversionAccuracy) {
      opts.conversionAccuracy = conversionAccuracy;
    }

    return clone(this, opts);
  }
  /**
   * Return the length of the duration in the specified unit.
   * @param {string} unit - a unit such as 'minutes' or 'days'
   * @example Duration.fromObject({years: 1}).as('days') //=> 365
   * @example Duration.fromObject({years: 1}).as('months') //=> 12
   * @example Duration.fromObject({hours: 60}).as('days') //=> 2.5
   * @return {number}
   */
  ;

  _proto.as = function as(unit) {
    return this.isValid ? this.shiftTo(unit).get(unit) : NaN;
  }
  /**
   * Reduce this Duration to its canonical representation in its current units.
   * @example Duration.fromObject({ years: 2, days: 5000 }).normalize().toObject() //=> { years: 15, days: 255 }
   * @example Duration.fromObject({ hours: 12, minutes: -45 }).normalize().toObject() //=> { hours: 11, minutes: 15 }
   * @return {Duration}
   */
  ;

  _proto.normalize = function normalize() {
    if (!this.isValid) return this;
    var vals = this.toObject();
    normalizeValues(this.matrix, vals);
    return clone(this, {
      values: vals
    }, true);
  }
  /**
   * Convert this Duration into its representation in a different set of units.
   * @example Duration.fromObject({ hours: 1, seconds: 30 }).shiftTo('minutes', 'milliseconds').toObject() //=> { minutes: 60, milliseconds: 30000 }
   * @return {Duration}
   */
  ;

  _proto.shiftTo = function shiftTo() {
    for (var _len = arguments.length, units = new Array(_len), _key = 0; _key < _len; _key++) {
      units[_key] = arguments[_key];
    }

    if (!this.isValid) return this;

    if (units.length === 0) {
      return this;
    }

    units = units.map(function (u) {
      return Duration.normalizeUnit(u);
    });
    var built = {},
        accumulated = {},
        vals = this.toObject();
    var lastUnit;

    for (var _iterator2 = _createForOfIteratorHelperLoose(orderedUnits), _step2; !(_step2 = _iterator2()).done;) {
      var k = _step2.value;

      if (units.indexOf(k) >= 0) {
        lastUnit = k;
        var own = 0; // anything we haven't boiled down yet should get boiled to this unit

        for (var ak in accumulated) {
          own += this.matrix[ak][k] * accumulated[ak];
          accumulated[ak] = 0;
        } // plus anything that's already in this unit


        if (isNumber(vals[k])) {
          own += vals[k];
        }

        var i = Math.trunc(own);
        built[k] = i;
        accumulated[k] = own - i; // we'd like to absorb these fractions in another unit
        // plus anything further down the chain that should be rolled up in to this

        for (var down in vals) {
          if (orderedUnits.indexOf(down) > orderedUnits.indexOf(k)) {
            convert(this.matrix, vals, down, built, k);
          }
        } // otherwise, keep it in the wings to boil it later

      } else if (isNumber(vals[k])) {
        accumulated[k] = vals[k];
      }
    } // anything leftover becomes the decimal for the last unit
    // lastUnit must be defined since units is not empty


    for (var key in accumulated) {
      if (accumulated[key] !== 0) {
        built[lastUnit] += key === lastUnit ? accumulated[key] : accumulated[key] / this.matrix[lastUnit][key];
      }
    }

    return clone(this, {
      values: built
    }, true).normalize();
  }
  /**
   * Return the negative of this Duration.
   * @example Duration.fromObject({ hours: 1, seconds: 30 }).negate().toObject() //=> { hours: -1, seconds: -30 }
   * @return {Duration}
   */
  ;

  _proto.negate = function negate() {
    if (!this.isValid) return this;
    var negated = {};

    for (var _i2 = 0, _Object$keys2 = Object.keys(this.values); _i2 < _Object$keys2.length; _i2++) {
      var k = _Object$keys2[_i2];
      negated[k] = -this.values[k];
    }

    return clone(this, {
      values: negated
    }, true);
  }
  /**
   * Get the years.
   * @type {number}
   */
  ;

  /**
   * Equality check
   * Two Durations are equal iff they have the same units and the same values for each unit.
   * @param {Duration} other
   * @return {boolean}
   */
  _proto.equals = function equals(other) {
    if (!this.isValid || !other.isValid) {
      return false;
    }

    if (!this.loc.equals(other.loc)) {
      return false;
    }

    function eq(v1, v2) {
      // Consider 0 and undefined as equal
      if (v1 === undefined || v1 === 0) return v2 === undefined || v2 === 0;
      return v1 === v2;
    }

    for (var _iterator3 = _createForOfIteratorHelperLoose(orderedUnits), _step3; !(_step3 = _iterator3()).done;) {
      var u = _step3.value;

      if (!eq(this.values[u], other.values[u])) {
        return false;
      }
    }

    return true;
  };

  _createClass(Duration, [{
    key: "locale",
    get: function get() {
      return this.isValid ? this.loc.locale : null;
    }
    /**
     * Get the numbering system of a Duration, such 'beng'. The numbering system is used when formatting the Duration
     *
     * @type {string}
     */

  }, {
    key: "numberingSystem",
    get: function get() {
      return this.isValid ? this.loc.numberingSystem : null;
    }
  }, {
    key: "years",
    get: function get() {
      return this.isValid ? this.values.years || 0 : NaN;
    }
    /**
     * Get the quarters.
     * @type {number}
     */

  }, {
    key: "quarters",
    get: function get() {
      return this.isValid ? this.values.quarters || 0 : NaN;
    }
    /**
     * Get the months.
     * @type {number}
     */

  }, {
    key: "months",
    get: function get() {
      return this.isValid ? this.values.months || 0 : NaN;
    }
    /**
     * Get the weeks
     * @type {number}
     */

  }, {
    key: "weeks",
    get: function get() {
      return this.isValid ? this.values.weeks || 0 : NaN;
    }
    /**
     * Get the days.
     * @type {number}
     */

  }, {
    key: "days",
    get: function get() {
      return this.isValid ? this.values.days || 0 : NaN;
    }
    /**
     * Get the hours.
     * @type {number}
     */

  }, {
    key: "hours",
    get: function get() {
      return this.isValid ? this.values.hours || 0 : NaN;
    }
    /**
     * Get the minutes.
     * @type {number}
     */

  }, {
    key: "minutes",
    get: function get() {
      return this.isValid ? this.values.minutes || 0 : NaN;
    }
    /**
     * Get the seconds.
     * @return {number}
     */

  }, {
    key: "seconds",
    get: function get() {
      return this.isValid ? this.values.seconds || 0 : NaN;
    }
    /**
     * Get the milliseconds.
     * @return {number}
     */

  }, {
    key: "milliseconds",
    get: function get() {
      return this.isValid ? this.values.milliseconds || 0 : NaN;
    }
    /**
     * Returns whether the Duration is invalid. Invalid durations are returned by diff operations
     * on invalid DateTimes or Intervals.
     * @return {boolean}
     */

  }, {
    key: "isValid",
    get: function get() {
      return this.invalid === null;
    }
    /**
     * Returns an error code if this Duration became invalid, or null if the Duration is valid
     * @return {string}
     */

  }, {
    key: "invalidReason",
    get: function get() {
      return this.invalid ? this.invalid.reason : null;
    }
    /**
     * Returns an explanation of why this Duration became invalid, or null if the Duration is valid
     * @type {string}
     */

  }, {
    key: "invalidExplanation",
    get: function get() {
      return this.invalid ? this.invalid.explanation : null;
    }
  }]);

  return Duration;
}();
function friendlyDuration(durationish) {
  if (isNumber(durationish)) {
    return Duration.fromMillis(durationish);
  } else if (Duration.isDuration(durationish)) {
    return durationish;
  } else if (typeof durationish === "object") {
    return Duration.fromObject(durationish);
  } else {
    throw new InvalidArgumentError("Unknown duration argument " + durationish + " of type " + typeof durationish);
  }
}

var INVALID$1 = "Invalid Interval"; // checks if the start is equal to or before the end

function validateStartEnd(start, end) {
  if (!start || !start.isValid) {
    return Interval.invalid("missing or invalid start");
  } else if (!end || !end.isValid) {
    return Interval.invalid("missing or invalid end");
  } else if (end < start) {
    return Interval.invalid("end before start", "The end of an interval must be after its start, but you had start=" + start.toISO() + " and end=" + end.toISO());
  } else {
    return null;
  }
}
/**
 * An Interval object represents a half-open interval of time, where each endpoint is a {@link DateTime}. Conceptually, it's a container for those two endpoints, accompanied by methods for creating, parsing, interrogating, comparing, transforming, and formatting them.
 *
 * Here is a brief overview of the most commonly used methods and getters in Interval:
 *
 * * **Creation** To create an Interval, use {@link fromDateTimes}, {@link after}, {@link before}, or {@link fromISO}.
 * * **Accessors** Use {@link start} and {@link end} to get the start and end.
 * * **Interrogation** To analyze the Interval, use {@link count}, {@link length}, {@link hasSame}, {@link contains}, {@link isAfter}, or {@link isBefore}.
 * * **Transformation** To create other Intervals out of this one, use {@link set}, {@link splitAt}, {@link splitBy}, {@link divideEqually}, {@link merge}, {@link xor}, {@link union}, {@link intersection}, or {@link difference}.
 * * **Comparison** To compare this Interval to another one, use {@link equals}, {@link overlaps}, {@link abutsStart}, {@link abutsEnd}, {@link engulfs}.
 * * **Output** To convert the Interval into other representations, see {@link toString}, {@link toISO}, {@link toISODate}, {@link toISOTime}, {@link toFormat}, and {@link toDuration}.
 */


var Interval = /*#__PURE__*/function () {
  /**
   * @private
   */
  function Interval(config) {
    /**
     * @access private
     */
    this.s = config.start;
    /**
     * @access private
     */

    this.e = config.end;
    /**
     * @access private
     */

    this.invalid = config.invalid || null;
    /**
     * @access private
     */

    this.isLuxonInterval = true;
  }
  /**
   * Create an invalid Interval.
   * @param {string} reason - simple string of why this Interval is invalid. Should not contain parameters or anything else data-dependent
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {Interval}
   */


  Interval.invalid = function invalid(reason, explanation) {
    if (explanation === void 0) {
      explanation = null;
    }

    if (!reason) {
      throw new InvalidArgumentError("need to specify a reason the Interval is invalid");
    }

    var invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);

    if (Settings.throwOnInvalid) {
      throw new InvalidIntervalError(invalid);
    } else {
      return new Interval({
        invalid: invalid
      });
    }
  }
  /**
   * Create an Interval from a start DateTime and an end DateTime. Inclusive of the start but not the end.
   * @param {DateTime|Date|Object} start
   * @param {DateTime|Date|Object} end
   * @return {Interval}
   */
  ;

  Interval.fromDateTimes = function fromDateTimes(start, end) {
    var builtStart = friendlyDateTime(start),
        builtEnd = friendlyDateTime(end);
    var validateError = validateStartEnd(builtStart, builtEnd);

    if (validateError == null) {
      return new Interval({
        start: builtStart,
        end: builtEnd
      });
    } else {
      return validateError;
    }
  }
  /**
   * Create an Interval from a start DateTime and a Duration to extend to.
   * @param {DateTime|Date|Object} start
   * @param {Duration|Object|number} duration - the length of the Interval.
   * @return {Interval}
   */
  ;

  Interval.after = function after(start, duration) {
    var dur = friendlyDuration(duration),
        dt = friendlyDateTime(start);
    return Interval.fromDateTimes(dt, dt.plus(dur));
  }
  /**
   * Create an Interval from an end DateTime and a Duration to extend backwards to.
   * @param {DateTime|Date|Object} end
   * @param {Duration|Object|number} duration - the length of the Interval.
   * @return {Interval}
   */
  ;

  Interval.before = function before(end, duration) {
    var dur = friendlyDuration(duration),
        dt = friendlyDateTime(end);
    return Interval.fromDateTimes(dt.minus(dur), dt);
  }
  /**
   * Create an Interval from an ISO 8601 string.
   * Accepts `<start>/<end>`, `<start>/<duration>`, and `<duration>/<end>` formats.
   * @param {string} text - the ISO string to parse
   * @param {Object} [opts] - options to pass {@link DateTime.fromISO} and optionally {@link Duration.fromISO}
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @return {Interval}
   */
  ;

  Interval.fromISO = function fromISO(text, opts) {
    var _split = (text || "").split("/", 2),
        s = _split[0],
        e = _split[1];

    if (s && e) {
      var start, startIsValid;

      try {
        start = DateTime.fromISO(s, opts);
        startIsValid = start.isValid;
      } catch (e) {
        startIsValid = false;
      }

      var end, endIsValid;

      try {
        end = DateTime.fromISO(e, opts);
        endIsValid = end.isValid;
      } catch (e) {
        endIsValid = false;
      }

      if (startIsValid && endIsValid) {
        return Interval.fromDateTimes(start, end);
      }

      if (startIsValid) {
        var dur = Duration.fromISO(e, opts);

        if (dur.isValid) {
          return Interval.after(start, dur);
        }
      } else if (endIsValid) {
        var _dur = Duration.fromISO(s, opts);

        if (_dur.isValid) {
          return Interval.before(end, _dur);
        }
      }
    }

    return Interval.invalid("unparsable", "the input \"" + text + "\" can't be parsed as ISO 8601");
  }
  /**
   * Check if an object is an Interval. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  ;

  Interval.isInterval = function isInterval(o) {
    return o && o.isLuxonInterval || false;
  }
  /**
   * Returns the start of the Interval
   * @type {DateTime}
   */
  ;

  var _proto = Interval.prototype;

  /**
   * Returns the length of the Interval in the specified unit.
   * @param {string} unit - the unit (such as 'hours' or 'days') to return the length in.
   * @return {number}
   */
  _proto.length = function length(unit) {
    if (unit === void 0) {
      unit = "milliseconds";
    }

    return this.isValid ? this.toDuration.apply(this, [unit]).get(unit) : NaN;
  }
  /**
   * Returns the count of minutes, hours, days, months, or years included in the Interval, even in part.
   * Unlike {@link length} this counts sections of the calendar, not periods of time, e.g. specifying 'day'
   * asks 'what dates are included in this interval?', not 'how many days long is this interval?'
   * @param {string} [unit='milliseconds'] - the unit of time to count.
   * @return {number}
   */
  ;

  _proto.count = function count(unit) {
    if (unit === void 0) {
      unit = "milliseconds";
    }

    if (!this.isValid) return NaN;
    var start = this.start.startOf(unit),
        end = this.end.startOf(unit);
    return Math.floor(end.diff(start, unit).get(unit)) + 1;
  }
  /**
   * Returns whether this Interval's start and end are both in the same unit of time
   * @param {string} unit - the unit of time to check sameness on
   * @return {boolean}
   */
  ;

  _proto.hasSame = function hasSame(unit) {
    return this.isValid ? this.isEmpty() || this.e.minus(1).hasSame(this.s, unit) : false;
  }
  /**
   * Return whether this Interval has the same start and end DateTimes.
   * @return {boolean}
   */
  ;

  _proto.isEmpty = function isEmpty() {
    return this.s.valueOf() === this.e.valueOf();
  }
  /**
   * Return whether this Interval's start is after the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  ;

  _proto.isAfter = function isAfter(dateTime) {
    if (!this.isValid) return false;
    return this.s > dateTime;
  }
  /**
   * Return whether this Interval's end is before the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  ;

  _proto.isBefore = function isBefore(dateTime) {
    if (!this.isValid) return false;
    return this.e <= dateTime;
  }
  /**
   * Return whether this Interval contains the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  ;

  _proto.contains = function contains(dateTime) {
    if (!this.isValid) return false;
    return this.s <= dateTime && this.e > dateTime;
  }
  /**
   * "Sets" the start and/or end dates. Returns a newly-constructed Interval.
   * @param {Object} values - the values to set
   * @param {DateTime} values.start - the starting DateTime
   * @param {DateTime} values.end - the ending DateTime
   * @return {Interval}
   */
  ;

  _proto.set = function set(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        start = _ref.start,
        end = _ref.end;

    if (!this.isValid) return this;
    return Interval.fromDateTimes(start || this.s, end || this.e);
  }
  /**
   * Split this Interval at each of the specified DateTimes
   * @param {...[DateTime]} dateTimes - the unit of time to count.
   * @return {[Interval]}
   */
  ;

  _proto.splitAt = function splitAt() {
    var _this = this;

    if (!this.isValid) return [];

    for (var _len = arguments.length, dateTimes = new Array(_len), _key = 0; _key < _len; _key++) {
      dateTimes[_key] = arguments[_key];
    }

    var sorted = dateTimes.map(friendlyDateTime).filter(function (d) {
      return _this.contains(d);
    }).sort(),
        results = [];
    var s = this.s,
        i = 0;

    while (s < this.e) {
      var added = sorted[i] || this.e,
          next = +added > +this.e ? this.e : added;
      results.push(Interval.fromDateTimes(s, next));
      s = next;
      i += 1;
    }

    return results;
  }
  /**
   * Split this Interval into smaller Intervals, each of the specified length.
   * Left over time is grouped into a smaller interval
   * @param {Duration|Object|number} duration - The length of each resulting interval.
   * @return {[Interval]}
   */
  ;

  _proto.splitBy = function splitBy(duration) {
    var dur = friendlyDuration(duration);

    if (!this.isValid || !dur.isValid || dur.as("milliseconds") === 0) {
      return [];
    }

    var s = this.s,
        idx = 1,
        next;
    var results = [];

    while (s < this.e) {
      var added = this.start.plus(dur.mapUnits(function (x) {
        return x * idx;
      }));
      next = +added > +this.e ? this.e : added;
      results.push(Interval.fromDateTimes(s, next));
      s = next;
      idx += 1;
    }

    return results;
  }
  /**
   * Split this Interval into the specified number of smaller intervals.
   * @param {number} numberOfParts - The number of Intervals to divide the Interval into.
   * @return {[Interval]}
   */
  ;

  _proto.divideEqually = function divideEqually(numberOfParts) {
    if (!this.isValid) return [];
    return this.splitBy(this.length() / numberOfParts).slice(0, numberOfParts);
  }
  /**
   * Return whether this Interval overlaps with the specified Interval
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.overlaps = function overlaps(other) {
    return this.e > other.s && this.s < other.e;
  }
  /**
   * Return whether this Interval's end is adjacent to the specified Interval's start.
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.abutsStart = function abutsStart(other) {
    if (!this.isValid) return false;
    return +this.e === +other.s;
  }
  /**
   * Return whether this Interval's start is adjacent to the specified Interval's end.
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.abutsEnd = function abutsEnd(other) {
    if (!this.isValid) return false;
    return +other.e === +this.s;
  }
  /**
   * Return whether this Interval engulfs the start and end of the specified Interval.
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.engulfs = function engulfs(other) {
    if (!this.isValid) return false;
    return this.s <= other.s && this.e >= other.e;
  }
  /**
   * Return whether this Interval has the same start and end as the specified Interval.
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.equals = function equals(other) {
    if (!this.isValid || !other.isValid) {
      return false;
    }

    return this.s.equals(other.s) && this.e.equals(other.e);
  }
  /**
   * Return an Interval representing the intersection of this Interval and the specified Interval.
   * Specifically, the resulting Interval has the maximum start time and the minimum end time of the two Intervals.
   * Returns null if the intersection is empty, meaning, the intervals don't intersect.
   * @param {Interval} other
   * @return {Interval}
   */
  ;

  _proto.intersection = function intersection(other) {
    if (!this.isValid) return this;
    var s = this.s > other.s ? this.s : other.s,
        e = this.e < other.e ? this.e : other.e;

    if (s >= e) {
      return null;
    } else {
      return Interval.fromDateTimes(s, e);
    }
  }
  /**
   * Return an Interval representing the union of this Interval and the specified Interval.
   * Specifically, the resulting Interval has the minimum start time and the maximum end time of the two Intervals.
   * @param {Interval} other
   * @return {Interval}
   */
  ;

  _proto.union = function union(other) {
    if (!this.isValid) return this;
    var s = this.s < other.s ? this.s : other.s,
        e = this.e > other.e ? this.e : other.e;
    return Interval.fromDateTimes(s, e);
  }
  /**
   * Merge an array of Intervals into a equivalent minimal set of Intervals.
   * Combines overlapping and adjacent Intervals.
   * @param {[Interval]} intervals
   * @return {[Interval]}
   */
  ;

  Interval.merge = function merge(intervals) {
    var _intervals$sort$reduc = intervals.sort(function (a, b) {
      return a.s - b.s;
    }).reduce(function (_ref2, item) {
      var sofar = _ref2[0],
          current = _ref2[1];

      if (!current) {
        return [sofar, item];
      } else if (current.overlaps(item) || current.abutsStart(item)) {
        return [sofar, current.union(item)];
      } else {
        return [sofar.concat([current]), item];
      }
    }, [[], null]),
        found = _intervals$sort$reduc[0],
        final = _intervals$sort$reduc[1];

    if (final) {
      found.push(final);
    }

    return found;
  }
  /**
   * Return an array of Intervals representing the spans of time that only appear in one of the specified Intervals.
   * @param {[Interval]} intervals
   * @return {[Interval]}
   */
  ;

  Interval.xor = function xor(intervals) {
    var _Array$prototype;

    var start = null,
        currentCount = 0;

    var results = [],
        ends = intervals.map(function (i) {
      return [{
        time: i.s,
        type: "s"
      }, {
        time: i.e,
        type: "e"
      }];
    }),
        flattened = (_Array$prototype = Array.prototype).concat.apply(_Array$prototype, ends),
        arr = flattened.sort(function (a, b) {
      return a.time - b.time;
    });

    for (var _iterator = _createForOfIteratorHelperLoose(arr), _step; !(_step = _iterator()).done;) {
      var i = _step.value;
      currentCount += i.type === "s" ? 1 : -1;

      if (currentCount === 1) {
        start = i.time;
      } else {
        if (start && +start !== +i.time) {
          results.push(Interval.fromDateTimes(start, i.time));
        }

        start = null;
      }
    }

    return Interval.merge(results);
  }
  /**
   * Return an Interval representing the span of time in this Interval that doesn't overlap with any of the specified Intervals.
   * @param {...Interval} intervals
   * @return {[Interval]}
   */
  ;

  _proto.difference = function difference() {
    var _this2 = this;

    for (var _len2 = arguments.length, intervals = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      intervals[_key2] = arguments[_key2];
    }

    return Interval.xor([this].concat(intervals)).map(function (i) {
      return _this2.intersection(i);
    }).filter(function (i) {
      return i && !i.isEmpty();
    });
  }
  /**
   * Returns a string representation of this Interval appropriate for debugging.
   * @return {string}
   */
  ;

  _proto.toString = function toString() {
    if (!this.isValid) return INVALID$1;
    return "[" + this.s.toISO() + " \u2013 " + this.e.toISO() + ")";
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Interval.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @param {Object} opts - The same options as {@link DateTime.toISO}
   * @return {string}
   */
  ;

  _proto.toISO = function toISO(opts) {
    if (!this.isValid) return INVALID$1;
    return this.s.toISO(opts) + "/" + this.e.toISO(opts);
  }
  /**
   * Returns an ISO 8601-compliant string representation of date of this Interval.
   * The time components are ignored.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @return {string}
   */
  ;

  _proto.toISODate = function toISODate() {
    if (!this.isValid) return INVALID$1;
    return this.s.toISODate() + "/" + this.e.toISODate();
  }
  /**
   * Returns an ISO 8601-compliant string representation of time of this Interval.
   * The date components are ignored.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @param {Object} opts - The same options as {@link DateTime.toISO}
   * @return {string}
   */
  ;

  _proto.toISOTime = function toISOTime(opts) {
    if (!this.isValid) return INVALID$1;
    return this.s.toISOTime(opts) + "/" + this.e.toISOTime(opts);
  }
  /**
   * Returns a string representation of this Interval formatted according to the specified format string.
   * @param {string} dateFormat - the format string. This string formats the start and end time. See {@link DateTime.toFormat} for details.
   * @param {Object} opts - options
   * @param {string} [opts.separator =  ' – '] - a separator to place between the start and end representations
   * @return {string}
   */
  ;

  _proto.toFormat = function toFormat(dateFormat, _temp2) {
    var _ref3 = _temp2 === void 0 ? {} : _temp2,
        _ref3$separator = _ref3.separator,
        separator = _ref3$separator === void 0 ? " – " : _ref3$separator;

    if (!this.isValid) return INVALID$1;
    return "" + this.s.toFormat(dateFormat) + separator + this.e.toFormat(dateFormat);
  }
  /**
   * Return a Duration representing the time spanned by this interval.
   * @param {string|string[]} [unit=['milliseconds']] - the unit or units (such as 'hours' or 'days') to include in the duration.
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @example Interval.fromDateTimes(dt1, dt2).toDuration().toObject() //=> { milliseconds: 88489257 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration('days').toObject() //=> { days: 1.0241812152777778 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes']).toObject() //=> { hours: 24, minutes: 34.82095 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes', 'seconds']).toObject() //=> { hours: 24, minutes: 34, seconds: 49.257 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration('seconds').toObject() //=> { seconds: 88489.257 }
   * @return {Duration}
   */
  ;

  _proto.toDuration = function toDuration(unit, opts) {
    if (!this.isValid) {
      return Duration.invalid(this.invalidReason);
    }

    return this.e.diff(this.s, unit, opts);
  }
  /**
   * Run mapFn on the interval start and end, returning a new Interval from the resulting DateTimes
   * @param {function} mapFn
   * @return {Interval}
   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.toUTC())
   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.plus({ hours: 2 }))
   */
  ;

  _proto.mapEndpoints = function mapEndpoints(mapFn) {
    return Interval.fromDateTimes(mapFn(this.s), mapFn(this.e));
  };

  _createClass(Interval, [{
    key: "start",
    get: function get() {
      return this.isValid ? this.s : null;
    }
    /**
     * Returns the end of the Interval
     * @type {DateTime}
     */

  }, {
    key: "end",
    get: function get() {
      return this.isValid ? this.e : null;
    }
    /**
     * Returns whether this Interval's end is at least its start, meaning that the Interval isn't 'backwards'.
     * @type {boolean}
     */

  }, {
    key: "isValid",
    get: function get() {
      return this.invalidReason === null;
    }
    /**
     * Returns an error code if this Interval is invalid, or null if the Interval is valid
     * @type {string}
     */

  }, {
    key: "invalidReason",
    get: function get() {
      return this.invalid ? this.invalid.reason : null;
    }
    /**
     * Returns an explanation of why this Interval became invalid, or null if the Interval is valid
     * @type {string}
     */

  }, {
    key: "invalidExplanation",
    get: function get() {
      return this.invalid ? this.invalid.explanation : null;
    }
  }]);

  return Interval;
}();

/**
 * The Info class contains static methods for retrieving general time and date related data. For example, it has methods for finding out if a time zone has a DST, for listing the months in any supported locale, and for discovering which of Luxon features are available in the current environment.
 */

var Info = /*#__PURE__*/function () {
  function Info() {}

  /**
   * Return whether the specified zone contains a DST.
   * @param {string|Zone} [zone='local'] - Zone to check. Defaults to the environment's local zone.
   * @return {boolean}
   */
  Info.hasDST = function hasDST(zone) {
    if (zone === void 0) {
      zone = Settings.defaultZone;
    }

    var proto = DateTime.now().setZone(zone).set({
      month: 12
    });
    return !zone.universal && proto.offset !== proto.set({
      month: 6
    }).offset;
  }
  /**
   * Return whether the specified zone is a valid IANA specifier.
   * @param {string} zone - Zone to check
   * @return {boolean}
   */
  ;

  Info.isValidIANAZone = function isValidIANAZone(zone) {
    return IANAZone.isValidSpecifier(zone) && IANAZone.isValidZone(zone);
  }
  /**
   * Converts the input into a {@link Zone} instance.
   *
   * * If `input` is already a Zone instance, it is returned unchanged.
   * * If `input` is a string containing a valid time zone name, a Zone instance
   *   with that name is returned.
   * * If `input` is a string that doesn't refer to a known time zone, a Zone
   *   instance with {@link Zone.isValid} == false is returned.
   * * If `input is a number, a Zone instance with the specified fixed offset
   *   in minutes is returned.
   * * If `input` is `null` or `undefined`, the default zone is returned.
   * @param {string|Zone|number} [input] - the value to be converted
   * @return {Zone}
   */
  ;

  Info.normalizeZone = function normalizeZone$1(input) {
    return normalizeZone(input, Settings.defaultZone);
  }
  /**
   * Return an array of standalone month names.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param {string} [length='long'] - the length of the month representation, such as "numeric", "2-digit", "narrow", "short", "long"
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @param {string} [opts.outputCalendar='gregory'] - the calendar
   * @example Info.months()[0] //=> 'January'
   * @example Info.months('short')[0] //=> 'Jan'
   * @example Info.months('numeric')[0] //=> '1'
   * @example Info.months('short', { locale: 'fr-CA' } )[0] //=> 'janv.'
   * @example Info.months('numeric', { locale: 'ar' })[0] //=> '١'
   * @example Info.months('long', { outputCalendar: 'islamic' })[0] //=> 'Rabiʻ I'
   * @return {[string]}
   */
  ;

  Info.months = function months(length, _temp) {
    if (length === void 0) {
      length = "long";
    }

    var _ref = _temp === void 0 ? {} : _temp,
        _ref$locale = _ref.locale,
        locale = _ref$locale === void 0 ? null : _ref$locale,
        _ref$numberingSystem = _ref.numberingSystem,
        numberingSystem = _ref$numberingSystem === void 0 ? null : _ref$numberingSystem,
        _ref$locObj = _ref.locObj,
        locObj = _ref$locObj === void 0 ? null : _ref$locObj,
        _ref$outputCalendar = _ref.outputCalendar,
        outputCalendar = _ref$outputCalendar === void 0 ? "gregory" : _ref$outputCalendar;

    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length);
  }
  /**
   * Return an array of format month names.
   * Format months differ from standalone months in that they're meant to appear next to the day of the month. In some languages, that
   * changes the string.
   * See {@link months}
   * @param {string} [length='long'] - the length of the month representation, such as "numeric", "2-digit", "narrow", "short", "long"
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @param {string} [opts.outputCalendar='gregory'] - the calendar
   * @return {[string]}
   */
  ;

  Info.monthsFormat = function monthsFormat(length, _temp2) {
    if (length === void 0) {
      length = "long";
    }

    var _ref2 = _temp2 === void 0 ? {} : _temp2,
        _ref2$locale = _ref2.locale,
        locale = _ref2$locale === void 0 ? null : _ref2$locale,
        _ref2$numberingSystem = _ref2.numberingSystem,
        numberingSystem = _ref2$numberingSystem === void 0 ? null : _ref2$numberingSystem,
        _ref2$locObj = _ref2.locObj,
        locObj = _ref2$locObj === void 0 ? null : _ref2$locObj,
        _ref2$outputCalendar = _ref2.outputCalendar,
        outputCalendar = _ref2$outputCalendar === void 0 ? "gregory" : _ref2$outputCalendar;

    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length, true);
  }
  /**
   * Return an array of standalone week names.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param {string} [length='long'] - the length of the weekday representation, such as "narrow", "short", "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @example Info.weekdays()[0] //=> 'Monday'
   * @example Info.weekdays('short')[0] //=> 'Mon'
   * @example Info.weekdays('short', { locale: 'fr-CA' })[0] //=> 'lun.'
   * @example Info.weekdays('short', { locale: 'ar' })[0] //=> 'الاثنين'
   * @return {[string]}
   */
  ;

  Info.weekdays = function weekdays(length, _temp3) {
    if (length === void 0) {
      length = "long";
    }

    var _ref3 = _temp3 === void 0 ? {} : _temp3,
        _ref3$locale = _ref3.locale,
        locale = _ref3$locale === void 0 ? null : _ref3$locale,
        _ref3$numberingSystem = _ref3.numberingSystem,
        numberingSystem = _ref3$numberingSystem === void 0 ? null : _ref3$numberingSystem,
        _ref3$locObj = _ref3.locObj,
        locObj = _ref3$locObj === void 0 ? null : _ref3$locObj;

    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length);
  }
  /**
   * Return an array of format week names.
   * Format weekdays differ from standalone weekdays in that they're meant to appear next to more date information. In some languages, that
   * changes the string.
   * See {@link weekdays}
   * @param {string} [length='long'] - the length of the weekday representation, such as "narrow", "short", "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale=null] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @return {[string]}
   */
  ;

  Info.weekdaysFormat = function weekdaysFormat(length, _temp4) {
    if (length === void 0) {
      length = "long";
    }

    var _ref4 = _temp4 === void 0 ? {} : _temp4,
        _ref4$locale = _ref4.locale,
        locale = _ref4$locale === void 0 ? null : _ref4$locale,
        _ref4$numberingSystem = _ref4.numberingSystem,
        numberingSystem = _ref4$numberingSystem === void 0 ? null : _ref4$numberingSystem,
        _ref4$locObj = _ref4.locObj,
        locObj = _ref4$locObj === void 0 ? null : _ref4$locObj;

    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length, true);
  }
  /**
   * Return an array of meridiems.
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @example Info.meridiems() //=> [ 'AM', 'PM' ]
   * @example Info.meridiems({ locale: 'my' }) //=> [ 'နံနက်', 'ညနေ' ]
   * @return {[string]}
   */
  ;

  Info.meridiems = function meridiems(_temp5) {
    var _ref5 = _temp5 === void 0 ? {} : _temp5,
        _ref5$locale = _ref5.locale,
        locale = _ref5$locale === void 0 ? null : _ref5$locale;

    return Locale.create(locale).meridiems();
  }
  /**
   * Return an array of eras, such as ['BC', 'AD']. The locale can be specified, but the calendar system is always Gregorian.
   * @param {string} [length='short'] - the length of the era representation, such as "short" or "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @example Info.eras() //=> [ 'BC', 'AD' ]
   * @example Info.eras('long') //=> [ 'Before Christ', 'Anno Domini' ]
   * @example Info.eras('long', { locale: 'fr' }) //=> [ 'avant Jésus-Christ', 'après Jésus-Christ' ]
   * @return {[string]}
   */
  ;

  Info.eras = function eras(length, _temp6) {
    if (length === void 0) {
      length = "short";
    }

    var _ref6 = _temp6 === void 0 ? {} : _temp6,
        _ref6$locale = _ref6.locale,
        locale = _ref6$locale === void 0 ? null : _ref6$locale;

    return Locale.create(locale, null, "gregory").eras(length);
  }
  /**
   * Return the set of available features in this environment.
   * Some features of Luxon are not available in all environments. For example, on older browsers, timezone support is not available. Use this function to figure out if that's the case.
   * Keys:
   * * `zones`: whether this environment supports IANA timezones
   * * `intlTokens`: whether this environment supports internationalized token-based formatting/parsing
   * * `intl`: whether this environment supports general internationalization
   * * `relative`: whether this environment supports relative time formatting
   * @example Info.features() //=> { intl: true, intlTokens: false, zones: true, relative: false }
   * @return {Object}
   */
  ;

  Info.features = function features() {
    var intl = false,
        intlTokens = false,
        zones = false,
        relative = false;

    if (hasIntl()) {
      intl = true;
      intlTokens = hasFormatToParts();
      relative = hasRelative();

      try {
        zones = new Intl.DateTimeFormat("en", {
          timeZone: "America/New_York"
        }).resolvedOptions().timeZone === "America/New_York";
      } catch (e) {
        zones = false;
      }
    }

    return {
      intl: intl,
      intlTokens: intlTokens,
      zones: zones,
      relative: relative
    };
  };

  return Info;
}();

function dayDiff(earlier, later) {
  var utcDayStart = function utcDayStart(dt) {
    return dt.toUTC(0, {
      keepLocalTime: true
    }).startOf("day").valueOf();
  },
      ms = utcDayStart(later) - utcDayStart(earlier);

  return Math.floor(Duration.fromMillis(ms).as("days"));
}

function highOrderDiffs(cursor, later, units) {
  var differs = [["years", function (a, b) {
    return b.year - a.year;
  }], ["quarters", function (a, b) {
    return b.quarter - a.quarter;
  }], ["months", function (a, b) {
    return b.month - a.month + (b.year - a.year) * 12;
  }], ["weeks", function (a, b) {
    var days = dayDiff(a, b);
    return (days - days % 7) / 7;
  }], ["days", dayDiff]];
  var results = {};
  var lowestOrder, highWater;

  for (var _i = 0, _differs = differs; _i < _differs.length; _i++) {
    var _differs$_i = _differs[_i],
        unit = _differs$_i[0],
        differ = _differs$_i[1];

    if (units.indexOf(unit) >= 0) {
      var _cursor$plus;

      lowestOrder = unit;
      var delta = differ(cursor, later);
      highWater = cursor.plus((_cursor$plus = {}, _cursor$plus[unit] = delta, _cursor$plus));

      if (highWater > later) {
        var _cursor$plus2;

        cursor = cursor.plus((_cursor$plus2 = {}, _cursor$plus2[unit] = delta - 1, _cursor$plus2));
        delta -= 1;
      } else {
        cursor = highWater;
      }

      results[unit] = delta;
    }
  }

  return [cursor, results, highWater, lowestOrder];
}

function _diff (earlier, later, units, opts) {
  var _highOrderDiffs = highOrderDiffs(earlier, later, units),
      cursor = _highOrderDiffs[0],
      results = _highOrderDiffs[1],
      highWater = _highOrderDiffs[2],
      lowestOrder = _highOrderDiffs[3];

  var remainingMillis = later - cursor;
  var lowerOrderUnits = units.filter(function (u) {
    return ["hours", "minutes", "seconds", "milliseconds"].indexOf(u) >= 0;
  });

  if (lowerOrderUnits.length === 0) {
    if (highWater < later) {
      var _cursor$plus3;

      highWater = cursor.plus((_cursor$plus3 = {}, _cursor$plus3[lowestOrder] = 1, _cursor$plus3));
    }

    if (highWater !== cursor) {
      results[lowestOrder] = (results[lowestOrder] || 0) + remainingMillis / (highWater - cursor);
    }
  }

  var duration = Duration.fromObject(Object.assign(results, opts));

  if (lowerOrderUnits.length > 0) {
    var _Duration$fromMillis;

    return (_Duration$fromMillis = Duration.fromMillis(remainingMillis, opts)).shiftTo.apply(_Duration$fromMillis, lowerOrderUnits).plus(duration);
  } else {
    return duration;
  }
}

var numberingSystems = {
  arab: "[\u0660-\u0669]",
  arabext: "[\u06F0-\u06F9]",
  bali: "[\u1B50-\u1B59]",
  beng: "[\u09E6-\u09EF]",
  deva: "[\u0966-\u096F]",
  fullwide: "[\uFF10-\uFF19]",
  gujr: "[\u0AE6-\u0AEF]",
  hanidec: "[〇|一|二|三|四|五|六|七|八|九]",
  khmr: "[\u17E0-\u17E9]",
  knda: "[\u0CE6-\u0CEF]",
  laoo: "[\u0ED0-\u0ED9]",
  limb: "[\u1946-\u194F]",
  mlym: "[\u0D66-\u0D6F]",
  mong: "[\u1810-\u1819]",
  mymr: "[\u1040-\u1049]",
  orya: "[\u0B66-\u0B6F]",
  tamldec: "[\u0BE6-\u0BEF]",
  telu: "[\u0C66-\u0C6F]",
  thai: "[\u0E50-\u0E59]",
  tibt: "[\u0F20-\u0F29]",
  latn: "\\d"
};
var numberingSystemsUTF16 = {
  arab: [1632, 1641],
  arabext: [1776, 1785],
  bali: [6992, 7001],
  beng: [2534, 2543],
  deva: [2406, 2415],
  fullwide: [65296, 65303],
  gujr: [2790, 2799],
  khmr: [6112, 6121],
  knda: [3302, 3311],
  laoo: [3792, 3801],
  limb: [6470, 6479],
  mlym: [3430, 3439],
  mong: [6160, 6169],
  mymr: [4160, 4169],
  orya: [2918, 2927],
  tamldec: [3046, 3055],
  telu: [3174, 3183],
  thai: [3664, 3673],
  tibt: [3872, 3881]
}; // eslint-disable-next-line

var hanidecChars = numberingSystems.hanidec.replace(/[\[|\]]/g, "").split("");
function parseDigits(str) {
  var value = parseInt(str, 10);

  if (isNaN(value)) {
    value = "";

    for (var i = 0; i < str.length; i++) {
      var code = str.charCodeAt(i);

      if (str[i].search(numberingSystems.hanidec) !== -1) {
        value += hanidecChars.indexOf(str[i]);
      } else {
        for (var key in numberingSystemsUTF16) {
          var _numberingSystemsUTF = numberingSystemsUTF16[key],
              min = _numberingSystemsUTF[0],
              max = _numberingSystemsUTF[1];

          if (code >= min && code <= max) {
            value += code - min;
          }
        }
      }
    }

    return parseInt(value, 10);
  } else {
    return value;
  }
}
function digitRegex(_ref, append) {
  var numberingSystem = _ref.numberingSystem;

  if (append === void 0) {
    append = "";
  }

  return new RegExp("" + numberingSystems[numberingSystem || "latn"] + append);
}

var MISSING_FTP = "missing Intl.DateTimeFormat.formatToParts support";

function intUnit(regex, post) {
  if (post === void 0) {
    post = function post(i) {
      return i;
    };
  }

  return {
    regex: regex,
    deser: function deser(_ref) {
      var s = _ref[0];
      return post(parseDigits(s));
    }
  };
}

var NBSP = String.fromCharCode(160);
var spaceOrNBSP = "( |" + NBSP + ")";
var spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, "g");

function fixListRegex(s) {
  // make dots optional and also make them literal
  // make space and non breakable space characters interchangeable
  return s.replace(/\./g, "\\.?").replace(spaceOrNBSPRegExp, spaceOrNBSP);
}

function stripInsensitivities(s) {
  return s.replace(/\./g, "") // ignore dots that were made optional
  .replace(spaceOrNBSPRegExp, " ") // interchange space and nbsp
  .toLowerCase();
}

function oneOf(strings, startIndex) {
  if (strings === null) {
    return null;
  } else {
    return {
      regex: RegExp(strings.map(fixListRegex).join("|")),
      deser: function deser(_ref2) {
        var s = _ref2[0];
        return strings.findIndex(function (i) {
          return stripInsensitivities(s) === stripInsensitivities(i);
        }) + startIndex;
      }
    };
  }
}

function offset(regex, groups) {
  return {
    regex: regex,
    deser: function deser(_ref3) {
      var h = _ref3[1],
          m = _ref3[2];
      return signedOffset(h, m);
    },
    groups: groups
  };
}

function simple(regex) {
  return {
    regex: regex,
    deser: function deser(_ref4) {
      var s = _ref4[0];
      return s;
    }
  };
}

function escapeToken(value) {
  // eslint-disable-next-line no-useless-escape
  return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
}

function unitForToken(token, loc) {
  var one = digitRegex(loc),
      two = digitRegex(loc, "{2}"),
      three = digitRegex(loc, "{3}"),
      four = digitRegex(loc, "{4}"),
      six = digitRegex(loc, "{6}"),
      oneOrTwo = digitRegex(loc, "{1,2}"),
      oneToThree = digitRegex(loc, "{1,3}"),
      oneToSix = digitRegex(loc, "{1,6}"),
      oneToNine = digitRegex(loc, "{1,9}"),
      twoToFour = digitRegex(loc, "{2,4}"),
      fourToSix = digitRegex(loc, "{4,6}"),
      literal = function literal(t) {
    return {
      regex: RegExp(escapeToken(t.val)),
      deser: function deser(_ref5) {
        var s = _ref5[0];
        return s;
      },
      literal: true
    };
  },
      unitate = function unitate(t) {
    if (token.literal) {
      return literal(t);
    }

    switch (t.val) {
      // era
      case "G":
        return oneOf(loc.eras("short", false), 0);

      case "GG":
        return oneOf(loc.eras("long", false), 0);
      // years

      case "y":
        return intUnit(oneToSix);

      case "yy":
        return intUnit(twoToFour, untruncateYear);

      case "yyyy":
        return intUnit(four);

      case "yyyyy":
        return intUnit(fourToSix);

      case "yyyyyy":
        return intUnit(six);
      // months

      case "M":
        return intUnit(oneOrTwo);

      case "MM":
        return intUnit(two);

      case "MMM":
        return oneOf(loc.months("short", true, false), 1);

      case "MMMM":
        return oneOf(loc.months("long", true, false), 1);

      case "L":
        return intUnit(oneOrTwo);

      case "LL":
        return intUnit(two);

      case "LLL":
        return oneOf(loc.months("short", false, false), 1);

      case "LLLL":
        return oneOf(loc.months("long", false, false), 1);
      // dates

      case "d":
        return intUnit(oneOrTwo);

      case "dd":
        return intUnit(two);
      // ordinals

      case "o":
        return intUnit(oneToThree);

      case "ooo":
        return intUnit(three);
      // time

      case "HH":
        return intUnit(two);

      case "H":
        return intUnit(oneOrTwo);

      case "hh":
        return intUnit(two);

      case "h":
        return intUnit(oneOrTwo);

      case "mm":
        return intUnit(two);

      case "m":
        return intUnit(oneOrTwo);

      case "q":
        return intUnit(oneOrTwo);

      case "qq":
        return intUnit(two);

      case "s":
        return intUnit(oneOrTwo);

      case "ss":
        return intUnit(two);

      case "S":
        return intUnit(oneToThree);

      case "SSS":
        return intUnit(three);

      case "u":
        return simple(oneToNine);
      // meridiem

      case "a":
        return oneOf(loc.meridiems(), 0);
      // weekYear (k)

      case "kkkk":
        return intUnit(four);

      case "kk":
        return intUnit(twoToFour, untruncateYear);
      // weekNumber (W)

      case "W":
        return intUnit(oneOrTwo);

      case "WW":
        return intUnit(two);
      // weekdays

      case "E":
      case "c":
        return intUnit(one);

      case "EEE":
        return oneOf(loc.weekdays("short", false, false), 1);

      case "EEEE":
        return oneOf(loc.weekdays("long", false, false), 1);

      case "ccc":
        return oneOf(loc.weekdays("short", true, false), 1);

      case "cccc":
        return oneOf(loc.weekdays("long", true, false), 1);
      // offset/zone

      case "Z":
      case "ZZ":
        return offset(new RegExp("([+-]" + oneOrTwo.source + ")(?::(" + two.source + "))?"), 2);

      case "ZZZ":
        return offset(new RegExp("([+-]" + oneOrTwo.source + ")(" + two.source + ")?"), 2);
      // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing
      // because we don't have any way to figure out what they are

      case "z":
        return simple(/[a-z_+-/]{1,256}?/i);

      default:
        return literal(t);
    }
  };

  var unit = unitate(token) || {
    invalidReason: MISSING_FTP
  };
  unit.token = token;
  return unit;
}

var partTypeStyleToTokenVal = {
  year: {
    "2-digit": "yy",
    numeric: "yyyyy"
  },
  month: {
    numeric: "M",
    "2-digit": "MM",
    short: "MMM",
    long: "MMMM"
  },
  day: {
    numeric: "d",
    "2-digit": "dd"
  },
  weekday: {
    short: "EEE",
    long: "EEEE"
  },
  dayperiod: "a",
  dayPeriod: "a",
  hour: {
    numeric: "h",
    "2-digit": "hh"
  },
  minute: {
    numeric: "m",
    "2-digit": "mm"
  },
  second: {
    numeric: "s",
    "2-digit": "ss"
  }
};

function tokenForPart(part, locale, formatOpts) {
  var type = part.type,
      value = part.value;

  if (type === "literal") {
    return {
      literal: true,
      val: value
    };
  }

  var style = formatOpts[type];
  var val = partTypeStyleToTokenVal[type];

  if (typeof val === "object") {
    val = val[style];
  }

  if (val) {
    return {
      literal: false,
      val: val
    };
  }

  return undefined;
}

function buildRegex(units) {
  var re = units.map(function (u) {
    return u.regex;
  }).reduce(function (f, r) {
    return f + "(" + r.source + ")";
  }, "");
  return ["^" + re + "$", units];
}

function match(input, regex, handlers) {
  var matches = input.match(regex);

  if (matches) {
    var all = {};
    var matchIndex = 1;

    for (var i in handlers) {
      if (hasOwnProperty(handlers, i)) {
        var h = handlers[i],
            groups = h.groups ? h.groups + 1 : 1;

        if (!h.literal && h.token) {
          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));
        }

        matchIndex += groups;
      }
    }

    return [matches, all];
  } else {
    return [matches, {}];
  }
}

function dateTimeFromMatches(matches) {
  var toField = function toField(token) {
    switch (token) {
      case "S":
        return "millisecond";

      case "s":
        return "second";

      case "m":
        return "minute";

      case "h":
      case "H":
        return "hour";

      case "d":
        return "day";

      case "o":
        return "ordinal";

      case "L":
      case "M":
        return "month";

      case "y":
        return "year";

      case "E":
      case "c":
        return "weekday";

      case "W":
        return "weekNumber";

      case "k":
        return "weekYear";

      case "q":
        return "quarter";

      default:
        return null;
    }
  };

  var zone;

  if (!isUndefined(matches.Z)) {
    zone = new FixedOffsetZone(matches.Z);
  } else if (!isUndefined(matches.z)) {
    zone = IANAZone.create(matches.z);
  } else {
    zone = null;
  }

  if (!isUndefined(matches.q)) {
    matches.M = (matches.q - 1) * 3 + 1;
  }

  if (!isUndefined(matches.h)) {
    if (matches.h < 12 && matches.a === 1) {
      matches.h += 12;
    } else if (matches.h === 12 && matches.a === 0) {
      matches.h = 0;
    }
  }

  if (matches.G === 0 && matches.y) {
    matches.y = -matches.y;
  }

  if (!isUndefined(matches.u)) {
    matches.S = parseMillis(matches.u);
  }

  var vals = Object.keys(matches).reduce(function (r, k) {
    var f = toField(k);

    if (f) {
      r[f] = matches[k];
    }

    return r;
  }, {});
  return [vals, zone];
}

var dummyDateTimeCache = null;

function getDummyDateTime() {
  if (!dummyDateTimeCache) {
    dummyDateTimeCache = DateTime.fromMillis(1555555555555);
  }

  return dummyDateTimeCache;
}

function maybeExpandMacroToken(token, locale) {
  if (token.literal) {
    return token;
  }

  var formatOpts = Formatter.macroTokenToFormatOpts(token.val);

  if (!formatOpts) {
    return token;
  }

  var formatter = Formatter.create(locale, formatOpts);
  var parts = formatter.formatDateTimeParts(getDummyDateTime());
  var tokens = parts.map(function (p) {
    return tokenForPart(p, locale, formatOpts);
  });

  if (tokens.includes(undefined)) {
    return token;
  }

  return tokens;
}

function expandMacroTokens(tokens, locale) {
  var _Array$prototype;

  return (_Array$prototype = Array.prototype).concat.apply(_Array$prototype, tokens.map(function (t) {
    return maybeExpandMacroToken(t, locale);
  }));
}
/**
 * @private
 */


function explainFromTokens(locale, input, format) {
  var tokens = expandMacroTokens(Formatter.parseFormat(format), locale),
      units = tokens.map(function (t) {
    return unitForToken(t, locale);
  }),
      disqualifyingUnit = units.find(function (t) {
    return t.invalidReason;
  });

  if (disqualifyingUnit) {
    return {
      input: input,
      tokens: tokens,
      invalidReason: disqualifyingUnit.invalidReason
    };
  } else {
    var _buildRegex = buildRegex(units),
        regexString = _buildRegex[0],
        handlers = _buildRegex[1],
        regex = RegExp(regexString, "i"),
        _match = match(input, regex, handlers),
        rawMatches = _match[0],
        matches = _match[1],
        _ref6 = matches ? dateTimeFromMatches(matches) : [null, null],
        result = _ref6[0],
        zone = _ref6[1];

    if (hasOwnProperty(matches, "a") && hasOwnProperty(matches, "H")) {
      throw new ConflictingSpecificationError("Can't include meridiem when specifying 24-hour format");
    }

    return {
      input: input,
      tokens: tokens,
      regex: regex,
      rawMatches: rawMatches,
      matches: matches,
      result: result,
      zone: zone
    };
  }
}
function parseFromTokens(locale, input, format) {
  var _explainFromTokens = explainFromTokens(locale, input, format),
      result = _explainFromTokens.result,
      zone = _explainFromTokens.zone,
      invalidReason = _explainFromTokens.invalidReason;

  return [result, zone, invalidReason];
}

var nonLeapLadder = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],
    leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];

function unitOutOfRange(unit, value) {
  return new Invalid("unit out of range", "you specified " + value + " (of type " + typeof value + ") as a " + unit + ", which is invalid");
}

function dayOfWeek(year, month, day) {
  var js = new Date(Date.UTC(year, month - 1, day)).getUTCDay();
  return js === 0 ? 7 : js;
}

function computeOrdinal(year, month, day) {
  return day + (isLeapYear(year) ? leapLadder : nonLeapLadder)[month - 1];
}

function uncomputeOrdinal(year, ordinal) {
  var table = isLeapYear(year) ? leapLadder : nonLeapLadder,
      month0 = table.findIndex(function (i) {
    return i < ordinal;
  }),
      day = ordinal - table[month0];
  return {
    month: month0 + 1,
    day: day
  };
}
/**
 * @private
 */


function gregorianToWeek(gregObj) {
  var year = gregObj.year,
      month = gregObj.month,
      day = gregObj.day,
      ordinal = computeOrdinal(year, month, day),
      weekday = dayOfWeek(year, month, day);
  var weekNumber = Math.floor((ordinal - weekday + 10) / 7),
      weekYear;

  if (weekNumber < 1) {
    weekYear = year - 1;
    weekNumber = weeksInWeekYear(weekYear);
  } else if (weekNumber > weeksInWeekYear(year)) {
    weekYear = year + 1;
    weekNumber = 1;
  } else {
    weekYear = year;
  }

  return Object.assign({
    weekYear: weekYear,
    weekNumber: weekNumber,
    weekday: weekday
  }, timeObject(gregObj));
}
function weekToGregorian(weekData) {
  var weekYear = weekData.weekYear,
      weekNumber = weekData.weekNumber,
      weekday = weekData.weekday,
      weekdayOfJan4 = dayOfWeek(weekYear, 1, 4),
      yearInDays = daysInYear(weekYear);
  var ordinal = weekNumber * 7 + weekday - weekdayOfJan4 - 3,
      year;

  if (ordinal < 1) {
    year = weekYear - 1;
    ordinal += daysInYear(year);
  } else if (ordinal > yearInDays) {
    year = weekYear + 1;
    ordinal -= daysInYear(weekYear);
  } else {
    year = weekYear;
  }

  var _uncomputeOrdinal = uncomputeOrdinal(year, ordinal),
      month = _uncomputeOrdinal.month,
      day = _uncomputeOrdinal.day;

  return Object.assign({
    year: year,
    month: month,
    day: day
  }, timeObject(weekData));
}
function gregorianToOrdinal(gregData) {
  var year = gregData.year,
      month = gregData.month,
      day = gregData.day,
      ordinal = computeOrdinal(year, month, day);
  return Object.assign({
    year: year,
    ordinal: ordinal
  }, timeObject(gregData));
}
function ordinalToGregorian(ordinalData) {
  var year = ordinalData.year,
      ordinal = ordinalData.ordinal,
      _uncomputeOrdinal2 = uncomputeOrdinal(year, ordinal),
      month = _uncomputeOrdinal2.month,
      day = _uncomputeOrdinal2.day;

  return Object.assign({
    year: year,
    month: month,
    day: day
  }, timeObject(ordinalData));
}
function hasInvalidWeekData(obj) {
  var validYear = isInteger(obj.weekYear),
      validWeek = integerBetween(obj.weekNumber, 1, weeksInWeekYear(obj.weekYear)),
      validWeekday = integerBetween(obj.weekday, 1, 7);

  if (!validYear) {
    return unitOutOfRange("weekYear", obj.weekYear);
  } else if (!validWeek) {
    return unitOutOfRange("week", obj.week);
  } else if (!validWeekday) {
    return unitOutOfRange("weekday", obj.weekday);
  } else return false;
}
function hasInvalidOrdinalData(obj) {
  var validYear = isInteger(obj.year),
      validOrdinal = integerBetween(obj.ordinal, 1, daysInYear(obj.year));

  if (!validYear) {
    return unitOutOfRange("year", obj.year);
  } else if (!validOrdinal) {
    return unitOutOfRange("ordinal", obj.ordinal);
  } else return false;
}
function hasInvalidGregorianData(obj) {
  var validYear = isInteger(obj.year),
      validMonth = integerBetween(obj.month, 1, 12),
      validDay = integerBetween(obj.day, 1, daysInMonth(obj.year, obj.month));

  if (!validYear) {
    return unitOutOfRange("year", obj.year);
  } else if (!validMonth) {
    return unitOutOfRange("month", obj.month);
  } else if (!validDay) {
    return unitOutOfRange("day", obj.day);
  } else return false;
}
function hasInvalidTimeData(obj) {
  var hour = obj.hour,
      minute = obj.minute,
      second = obj.second,
      millisecond = obj.millisecond;
  var validHour = integerBetween(hour, 0, 23) || hour === 24 && minute === 0 && second === 0 && millisecond === 0,
      validMinute = integerBetween(minute, 0, 59),
      validSecond = integerBetween(second, 0, 59),
      validMillisecond = integerBetween(millisecond, 0, 999);

  if (!validHour) {
    return unitOutOfRange("hour", hour);
  } else if (!validMinute) {
    return unitOutOfRange("minute", minute);
  } else if (!validSecond) {
    return unitOutOfRange("second", second);
  } else if (!validMillisecond) {
    return unitOutOfRange("millisecond", millisecond);
  } else return false;
}

var INVALID$2 = "Invalid DateTime";
var MAX_DATE = 8.64e15;

function unsupportedZone(zone) {
  return new Invalid("unsupported zone", "the zone \"" + zone.name + "\" is not supported");
} // we cache week data on the DT object and this intermediates the cache


function possiblyCachedWeekData(dt) {
  if (dt.weekData === null) {
    dt.weekData = gregorianToWeek(dt.c);
  }

  return dt.weekData;
} // clone really means, "make a new object with these modifications". all "setters" really use this
// to create a new object while only changing some of the properties


function clone$1(inst, alts) {
  var current = {
    ts: inst.ts,
    zone: inst.zone,
    c: inst.c,
    o: inst.o,
    loc: inst.loc,
    invalid: inst.invalid
  };
  return new DateTime(Object.assign({}, current, alts, {
    old: current
  }));
} // find the right offset a given local time. The o input is our guess, which determines which
// offset we'll pick in ambiguous cases (e.g. there are two 3 AMs b/c Fallback DST)


function fixOffset(localTS, o, tz) {
  // Our UTC time is just a guess because our offset is just a guess
  var utcGuess = localTS - o * 60 * 1000; // Test whether the zone matches the offset for this ts

  var o2 = tz.offset(utcGuess); // If so, offset didn't change and we're done

  if (o === o2) {
    return [utcGuess, o];
  } // If not, change the ts by the difference in the offset


  utcGuess -= (o2 - o) * 60 * 1000; // If that gives us the local time we want, we're done

  var o3 = tz.offset(utcGuess);

  if (o2 === o3) {
    return [utcGuess, o2];
  } // If it's different, we're in a hole time. The offset has changed, but the we don't adjust the time


  return [localTS - Math.min(o2, o3) * 60 * 1000, Math.max(o2, o3)];
} // convert an epoch timestamp into a calendar object with the given offset


function tsToObj(ts, offset) {
  ts += offset * 60 * 1000;
  var d = new Date(ts);
  return {
    year: d.getUTCFullYear(),
    month: d.getUTCMonth() + 1,
    day: d.getUTCDate(),
    hour: d.getUTCHours(),
    minute: d.getUTCMinutes(),
    second: d.getUTCSeconds(),
    millisecond: d.getUTCMilliseconds()
  };
} // convert a calendar object to a epoch timestamp


function objToTS(obj, offset, zone) {
  return fixOffset(objToLocalTS(obj), offset, zone);
} // create a new DT instance by adding a duration, adjusting for DSTs


function adjustTime(inst, dur) {
  var oPre = inst.o,
      year = inst.c.year + Math.trunc(dur.years),
      month = inst.c.month + Math.trunc(dur.months) + Math.trunc(dur.quarters) * 3,
      c = Object.assign({}, inst.c, {
    year: year,
    month: month,
    day: Math.min(inst.c.day, daysInMonth(year, month)) + Math.trunc(dur.days) + Math.trunc(dur.weeks) * 7
  }),
      millisToAdd = Duration.fromObject({
    years: dur.years - Math.trunc(dur.years),
    quarters: dur.quarters - Math.trunc(dur.quarters),
    months: dur.months - Math.trunc(dur.months),
    weeks: dur.weeks - Math.trunc(dur.weeks),
    days: dur.days - Math.trunc(dur.days),
    hours: dur.hours,
    minutes: dur.minutes,
    seconds: dur.seconds,
    milliseconds: dur.milliseconds
  }).as("milliseconds"),
      localTS = objToLocalTS(c);

  var _fixOffset = fixOffset(localTS, oPre, inst.zone),
      ts = _fixOffset[0],
      o = _fixOffset[1];

  if (millisToAdd !== 0) {
    ts += millisToAdd; // that could have changed the offset by going over a DST, but we want to keep the ts the same

    o = inst.zone.offset(ts);
  }

  return {
    ts: ts,
    o: o
  };
} // helper useful in turning the results of parsing into real dates
// by handling the zone options


function parseDataToDateTime(parsed, parsedZone, opts, format, text) {
  var setZone = opts.setZone,
      zone = opts.zone;

  if (parsed && Object.keys(parsed).length !== 0) {
    var interpretationZone = parsedZone || zone,
        inst = DateTime.fromObject(Object.assign(parsed, opts, {
      zone: interpretationZone,
      // setZone is a valid option in the calling methods, but not in fromObject
      setZone: undefined
    }));
    return setZone ? inst : inst.setZone(zone);
  } else {
    return DateTime.invalid(new Invalid("unparsable", "the input \"" + text + "\" can't be parsed as " + format));
  }
} // if you want to output a technical format (e.g. RFC 2822), this helper
// helps handle the details


function toTechFormat(dt, format, allowZ) {
  if (allowZ === void 0) {
    allowZ = true;
  }

  return dt.isValid ? Formatter.create(Locale.create("en-US"), {
    allowZ: allowZ,
    forceSimple: true
  }).formatDateTimeFromString(dt, format) : null;
} // technical time formats (e.g. the time part of ISO 8601), take some options
// and this commonizes their handling


function toTechTimeFormat(dt, _ref) {
  var _ref$suppressSeconds = _ref.suppressSeconds,
      suppressSeconds = _ref$suppressSeconds === void 0 ? false : _ref$suppressSeconds,
      _ref$suppressMillisec = _ref.suppressMilliseconds,
      suppressMilliseconds = _ref$suppressMillisec === void 0 ? false : _ref$suppressMillisec,
      includeOffset = _ref.includeOffset,
      _ref$includePrefix = _ref.includePrefix,
      includePrefix = _ref$includePrefix === void 0 ? false : _ref$includePrefix,
      _ref$includeZone = _ref.includeZone,
      includeZone = _ref$includeZone === void 0 ? false : _ref$includeZone,
      _ref$spaceZone = _ref.spaceZone,
      spaceZone = _ref$spaceZone === void 0 ? false : _ref$spaceZone,
      _ref$format = _ref.format,
      format = _ref$format === void 0 ? "extended" : _ref$format;
  var fmt = format === "basic" ? "HHmm" : "HH:mm";

  if (!suppressSeconds || dt.second !== 0 || dt.millisecond !== 0) {
    fmt += format === "basic" ? "ss" : ":ss";

    if (!suppressMilliseconds || dt.millisecond !== 0) {
      fmt += ".SSS";
    }
  }

  if ((includeZone || includeOffset) && spaceZone) {
    fmt += " ";
  }

  if (includeZone) {
    fmt += "z";
  } else if (includeOffset) {
    fmt += format === "basic" ? "ZZZ" : "ZZ";
  }

  var str = toTechFormat(dt, fmt);

  if (includePrefix) {
    str = "T" + str;
  }

  return str;
} // defaults for unspecified units in the supported calendars


var defaultUnitValues = {
  month: 1,
  day: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
},
    defaultWeekUnitValues = {
  weekNumber: 1,
  weekday: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
},
    defaultOrdinalUnitValues = {
  ordinal: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
}; // Units in the supported calendars, sorted by bigness

var orderedUnits$1 = ["year", "month", "day", "hour", "minute", "second", "millisecond"],
    orderedWeekUnits = ["weekYear", "weekNumber", "weekday", "hour", "minute", "second", "millisecond"],
    orderedOrdinalUnits = ["year", "ordinal", "hour", "minute", "second", "millisecond"]; // standardize case and plurality in units

function normalizeUnit(unit) {
  var normalized = {
    year: "year",
    years: "year",
    month: "month",
    months: "month",
    day: "day",
    days: "day",
    hour: "hour",
    hours: "hour",
    minute: "minute",
    minutes: "minute",
    quarter: "quarter",
    quarters: "quarter",
    second: "second",
    seconds: "second",
    millisecond: "millisecond",
    milliseconds: "millisecond",
    weekday: "weekday",
    weekdays: "weekday",
    weeknumber: "weekNumber",
    weeksnumber: "weekNumber",
    weeknumbers: "weekNumber",
    weekyear: "weekYear",
    weekyears: "weekYear",
    ordinal: "ordinal"
  }[unit.toLowerCase()];
  if (!normalized) throw new InvalidUnitError(unit);
  return normalized;
} // this is a dumbed down version of fromObject() that runs about 60% faster
// but doesn't do any validation, makes a bunch of assumptions about what units
// are present, and so on.


function quickDT(obj, zone) {
  // assume we have the higher-order units
  for (var _iterator = _createForOfIteratorHelperLoose(orderedUnits$1), _step; !(_step = _iterator()).done;) {
    var u = _step.value;

    if (isUndefined(obj[u])) {
      obj[u] = defaultUnitValues[u];
    }
  }

  var invalid = hasInvalidGregorianData(obj) || hasInvalidTimeData(obj);

  if (invalid) {
    return DateTime.invalid(invalid);
  }

  var tsNow = Settings.now(),
      offsetProvis = zone.offset(tsNow),
      _objToTS = objToTS(obj, offsetProvis, zone),
      ts = _objToTS[0],
      o = _objToTS[1];

  return new DateTime({
    ts: ts,
    zone: zone,
    o: o
  });
}

function diffRelative(start, end, opts) {
  var round = isUndefined(opts.round) ? true : opts.round,
      format = function format(c, unit) {
    c = roundTo(c, round || opts.calendary ? 0 : 2, true);
    var formatter = end.loc.clone(opts).relFormatter(opts);
    return formatter.format(c, unit);
  },
      differ = function differ(unit) {
    if (opts.calendary) {
      if (!end.hasSame(start, unit)) {
        return end.startOf(unit).diff(start.startOf(unit), unit).get(unit);
      } else return 0;
    } else {
      return end.diff(start, unit).get(unit);
    }
  };

  if (opts.unit) {
    return format(differ(opts.unit), opts.unit);
  }

  for (var _iterator2 = _createForOfIteratorHelperLoose(opts.units), _step2; !(_step2 = _iterator2()).done;) {
    var unit = _step2.value;
    var count = differ(unit);

    if (Math.abs(count) >= 1) {
      return format(count, unit);
    }
  }

  return format(start > end ? -0 : 0, opts.units[opts.units.length - 1]);
}
/**
 * A DateTime is an immutable data structure representing a specific date and time and accompanying methods. It contains class and instance methods for creating, parsing, interrogating, transforming, and formatting them.
 *
 * A DateTime comprises of:
 * * A timestamp. Each DateTime instance refers to a specific millisecond of the Unix epoch.
 * * A time zone. Each instance is considered in the context of a specific zone (by default the local system's zone).
 * * Configuration properties that effect how output strings are formatted, such as `locale`, `numberingSystem`, and `outputCalendar`.
 *
 * Here is a brief overview of the most commonly used functionality it provides:
 *
 * * **Creation**: To create a DateTime from its components, use one of its factory class methods: {@link local}, {@link utc}, and (most flexibly) {@link fromObject}. To create one from a standard string format, use {@link fromISO}, {@link fromHTTP}, and {@link fromRFC2822}. To create one from a custom string format, use {@link fromFormat}. To create one from a native JS date, use {@link fromJSDate}.
 * * **Gregorian calendar and time**: To examine the Gregorian properties of a DateTime individually (i.e as opposed to collectively through {@link toObject}), use the {@link year}, {@link month},
 * {@link day}, {@link hour}, {@link minute}, {@link second}, {@link millisecond} accessors.
 * * **Week calendar**: For ISO week calendar attributes, see the {@link weekYear}, {@link weekNumber}, and {@link weekday} accessors.
 * * **Configuration** See the {@link locale} and {@link numberingSystem} accessors.
 * * **Transformation**: To transform the DateTime into other DateTimes, use {@link set}, {@link reconfigure}, {@link setZone}, {@link setLocale}, {@link plus}, {@link minus}, {@link endOf}, {@link startOf}, {@link toUTC}, and {@link toLocal}.
 * * **Output**: To convert the DateTime to other representations, use the {@link toRelative}, {@link toRelativeCalendar}, {@link toJSON}, {@link toISO}, {@link toHTTP}, {@link toObject}, {@link toRFC2822}, {@link toString}, {@link toLocaleString}, {@link toFormat}, {@link toMillis} and {@link toJSDate}.
 *
 * There's plenty others documented below. In addition, for more information on subtler topics like internationalization, time zones, alternative calendars, validity, and so on, see the external documentation.
 */


var DateTime = /*#__PURE__*/function () {
  /**
   * @access private
   */
  function DateTime(config) {
    var zone = config.zone || Settings.defaultZone;
    var invalid = config.invalid || (Number.isNaN(config.ts) ? new Invalid("invalid input") : null) || (!zone.isValid ? unsupportedZone(zone) : null);
    /**
     * @access private
     */

    this.ts = isUndefined(config.ts) ? Settings.now() : config.ts;
    var c = null,
        o = null;

    if (!invalid) {
      var unchanged = config.old && config.old.ts === this.ts && config.old.zone.equals(zone);

      if (unchanged) {
        var _ref2 = [config.old.c, config.old.o];
        c = _ref2[0];
        o = _ref2[1];
      } else {
        var ot = zone.offset(this.ts);
        c = tsToObj(this.ts, ot);
        invalid = Number.isNaN(c.year) ? new Invalid("invalid input") : null;
        c = invalid ? null : c;
        o = invalid ? null : ot;
      }
    }
    /**
     * @access private
     */


    this._zone = zone;
    /**
     * @access private
     */

    this.loc = config.loc || Locale.create();
    /**
     * @access private
     */

    this.invalid = invalid;
    /**
     * @access private
     */

    this.weekData = null;
    /**
     * @access private
     */

    this.c = c;
    /**
     * @access private
     */

    this.o = o;
    /**
     * @access private
     */

    this.isLuxonDateTime = true;
  } // CONSTRUCT

  /**
   * Create a DateTime for the current instant, in the system's time zone.
   *
   * Use Settings to override these default values if needed.
   * @example DateTime.now().toISO() //~> now in the ISO format
   * @return {DateTime}
   */


  DateTime.now = function now() {
    return new DateTime({});
  }
  /**
   * Create a local DateTime
   * @param {number} [year] - The calendar year. If omitted (as in, call `local()` with no arguments), the current time will be used
   * @param {number} [month=1] - The month, 1-indexed
   * @param {number} [day=1] - The day of the month, 1-indexed
   * @param {number} [hour=0] - The hour of the day, in 24-hour time
   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59
   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59
   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999
   * @example DateTime.local()                            //~> now
   * @example DateTime.local(2017)                        //~> 2017-01-01T00:00:00
   * @example DateTime.local(2017, 3)                     //~> 2017-03-01T00:00:00
   * @example DateTime.local(2017, 3, 12)                 //~> 2017-03-12T00:00:00
   * @example DateTime.local(2017, 3, 12, 5)              //~> 2017-03-12T05:00:00
   * @example DateTime.local(2017, 3, 12, 5, 45)          //~> 2017-03-12T05:45:00
   * @example DateTime.local(2017, 3, 12, 5, 45, 10)      //~> 2017-03-12T05:45:10
   * @example DateTime.local(2017, 3, 12, 5, 45, 10, 765) //~> 2017-03-12T05:45:10.765
   * @return {DateTime}
   */
  ;

  DateTime.local = function local(year, month, day, hour, minute, second, millisecond) {
    if (isUndefined(year)) {
      return DateTime.now();
    } else {
      return quickDT({
        year: year,
        month: month,
        day: day,
        hour: hour,
        minute: minute,
        second: second,
        millisecond: millisecond
      }, Settings.defaultZone);
    }
  }
  /**
   * Create a DateTime in UTC
   * @param {number} [year] - The calendar year. If omitted (as in, call `utc()` with no arguments), the current time will be used
   * @param {number} [month=1] - The month, 1-indexed
   * @param {number} [day=1] - The day of the month
   * @param {number} [hour=0] - The hour of the day, in 24-hour time
   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59
   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59
   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999
   * @example DateTime.utc()                            //~> now
   * @example DateTime.utc(2017)                        //~> 2017-01-01T00:00:00Z
   * @example DateTime.utc(2017, 3)                     //~> 2017-03-01T00:00:00Z
   * @example DateTime.utc(2017, 3, 12)                 //~> 2017-03-12T00:00:00Z
   * @example DateTime.utc(2017, 3, 12, 5)              //~> 2017-03-12T05:00:00Z
   * @example DateTime.utc(2017, 3, 12, 5, 45)          //~> 2017-03-12T05:45:00Z
   * @example DateTime.utc(2017, 3, 12, 5, 45, 10)      //~> 2017-03-12T05:45:10Z
   * @example DateTime.utc(2017, 3, 12, 5, 45, 10, 765) //~> 2017-03-12T05:45:10.765Z
   * @return {DateTime}
   */
  ;

  DateTime.utc = function utc(year, month, day, hour, minute, second, millisecond) {
    if (isUndefined(year)) {
      return new DateTime({
        ts: Settings.now(),
        zone: FixedOffsetZone.utcInstance
      });
    } else {
      return quickDT({
        year: year,
        month: month,
        day: day,
        hour: hour,
        minute: minute,
        second: second,
        millisecond: millisecond
      }, FixedOffsetZone.utcInstance);
    }
  }
  /**
   * Create a DateTime from a JavaScript Date object. Uses the default zone.
   * @param {Date} date - a JavaScript Date object
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @return {DateTime}
   */
  ;

  DateTime.fromJSDate = function fromJSDate(date, options) {
    if (options === void 0) {
      options = {};
    }

    var ts = isDate(date) ? date.valueOf() : NaN;

    if (Number.isNaN(ts)) {
      return DateTime.invalid("invalid input");
    }

    var zoneToUse = normalizeZone(options.zone, Settings.defaultZone);

    if (!zoneToUse.isValid) {
      return DateTime.invalid(unsupportedZone(zoneToUse));
    }

    return new DateTime({
      ts: ts,
      zone: zoneToUse,
      loc: Locale.fromObject(options)
    });
  }
  /**
   * Create a DateTime from a number of milliseconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.
   * @param {number} milliseconds - a number of milliseconds since 1970 UTC
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance
   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @return {DateTime}
   */
  ;

  DateTime.fromMillis = function fromMillis(milliseconds, options) {
    if (options === void 0) {
      options = {};
    }

    if (!isNumber(milliseconds)) {
      throw new InvalidArgumentError("fromMillis requires a numerical input, but received a " + typeof milliseconds + " with value " + milliseconds);
    } else if (milliseconds < -MAX_DATE || milliseconds > MAX_DATE) {
      // this isn't perfect because because we can still end up out of range because of additional shifting, but it's a start
      return DateTime.invalid("Timestamp out of range");
    } else {
      return new DateTime({
        ts: milliseconds,
        zone: normalizeZone(options.zone, Settings.defaultZone),
        loc: Locale.fromObject(options)
      });
    }
  }
  /**
   * Create a DateTime from a number of seconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.
   * @param {number} seconds - a number of seconds since 1970 UTC
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance
   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @return {DateTime}
   */
  ;

  DateTime.fromSeconds = function fromSeconds(seconds, options) {
    if (options === void 0) {
      options = {};
    }

    if (!isNumber(seconds)) {
      throw new InvalidArgumentError("fromSeconds requires a numerical input");
    } else {
      return new DateTime({
        ts: seconds * 1000,
        zone: normalizeZone(options.zone, Settings.defaultZone),
        loc: Locale.fromObject(options)
      });
    }
  }
  /**
   * Create a DateTime from a JavaScript object with keys like 'year' and 'hour' with reasonable defaults.
   * @param {Object} obj - the object to create the DateTime from
   * @param {number} obj.year - a year, such as 1987
   * @param {number} obj.month - a month, 1-12
   * @param {number} obj.day - a day of the month, 1-31, depending on the month
   * @param {number} obj.ordinal - day of the year, 1-365 or 366
   * @param {number} obj.weekYear - an ISO week year
   * @param {number} obj.weekNumber - an ISO week number, between 1 and 52 or 53, depending on the year
   * @param {number} obj.weekday - an ISO weekday, 1-7, where 1 is Monday and 7 is Sunday
   * @param {number} obj.hour - hour of the day, 0-23
   * @param {number} obj.minute - minute of the hour, 0-59
   * @param {number} obj.second - second of the minute, 0-59
   * @param {number} obj.millisecond - millisecond of the second, 0-999
   * @param {string|Zone} [obj.zone='local'] - interpret the numbers in the context of a particular zone. Can take any value taken as the first argument to setZone()
   * @param {string} [obj.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} obj.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} obj.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromObject({ year: 1982, month: 5, day: 25}).toISODate() //=> '1982-05-25'
   * @example DateTime.fromObject({ year: 1982 }).toISODate() //=> '1982-01-01'
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }) //~> today at 10:26:06
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'utc' }),
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'local' })
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'America/New_York' })
   * @example DateTime.fromObject({ weekYear: 2016, weekNumber: 2, weekday: 3 }).toISODate() //=> '2016-01-13'
   * @return {DateTime}
   */
  ;

  DateTime.fromObject = function fromObject(obj) {
    var zoneToUse = normalizeZone(obj.zone, Settings.defaultZone);

    if (!zoneToUse.isValid) {
      return DateTime.invalid(unsupportedZone(zoneToUse));
    }

    var tsNow = Settings.now(),
        offsetProvis = zoneToUse.offset(tsNow),
        normalized = normalizeObject(obj, normalizeUnit, ["zone", "locale", "outputCalendar", "numberingSystem"]),
        containsOrdinal = !isUndefined(normalized.ordinal),
        containsGregorYear = !isUndefined(normalized.year),
        containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),
        containsGregor = containsGregorYear || containsGregorMD,
        definiteWeekDef = normalized.weekYear || normalized.weekNumber,
        loc = Locale.fromObject(obj); // cases:
    // just a weekday -> this week's instance of that weekday, no worries
    // (gregorian data or ordinal) + (weekYear or weekNumber) -> error
    // (gregorian month or day) + ordinal -> error
    // otherwise just use weeks or ordinals or gregorian, depending on what's specified

    if ((containsGregor || containsOrdinal) && definiteWeekDef) {
      throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");
    }

    if (containsGregorMD && containsOrdinal) {
      throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");
    }

    var useWeekData = definiteWeekDef || normalized.weekday && !containsGregor; // configure ourselves to deal with gregorian dates or week stuff

    var units,
        defaultValues,
        objNow = tsToObj(tsNow, offsetProvis);

    if (useWeekData) {
      units = orderedWeekUnits;
      defaultValues = defaultWeekUnitValues;
      objNow = gregorianToWeek(objNow);
    } else if (containsOrdinal) {
      units = orderedOrdinalUnits;
      defaultValues = defaultOrdinalUnitValues;
      objNow = gregorianToOrdinal(objNow);
    } else {
      units = orderedUnits$1;
      defaultValues = defaultUnitValues;
    } // set default values for missing stuff


    var foundFirst = false;

    for (var _iterator3 = _createForOfIteratorHelperLoose(units), _step3; !(_step3 = _iterator3()).done;) {
      var u = _step3.value;
      var v = normalized[u];

      if (!isUndefined(v)) {
        foundFirst = true;
      } else if (foundFirst) {
        normalized[u] = defaultValues[u];
      } else {
        normalized[u] = objNow[u];
      }
    } // make sure the values we have are in range


    var higherOrderInvalid = useWeekData ? hasInvalidWeekData(normalized) : containsOrdinal ? hasInvalidOrdinalData(normalized) : hasInvalidGregorianData(normalized),
        invalid = higherOrderInvalid || hasInvalidTimeData(normalized);

    if (invalid) {
      return DateTime.invalid(invalid);
    } // compute the actual time


    var gregorian = useWeekData ? weekToGregorian(normalized) : containsOrdinal ? ordinalToGregorian(normalized) : normalized,
        _objToTS2 = objToTS(gregorian, offsetProvis, zoneToUse),
        tsFinal = _objToTS2[0],
        offsetFinal = _objToTS2[1],
        inst = new DateTime({
      ts: tsFinal,
      zone: zoneToUse,
      o: offsetFinal,
      loc: loc
    }); // gregorian data + weekday serves only to validate


    if (normalized.weekday && containsGregor && obj.weekday !== inst.weekday) {
      return DateTime.invalid("mismatched weekday", "you can't specify both a weekday of " + normalized.weekday + " and a date of " + inst.toISO());
    }

    return inst;
  }
  /**
   * Create a DateTime from an ISO 8601 string
   * @param {string} text - the ISO string
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the time to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} [opts.outputCalendar] - the output calendar to set on the resulting DateTime instance
   * @param {string} [opts.numberingSystem] - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromISO('2016-05-25T09:08:34.123')
   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00')
   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00', {setZone: true})
   * @example DateTime.fromISO('2016-05-25T09:08:34.123', {zone: 'utc'})
   * @example DateTime.fromISO('2016-W05-4')
   * @return {DateTime}
   */
  ;

  DateTime.fromISO = function fromISO(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _parseISODate = parseISODate(text),
        vals = _parseISODate[0],
        parsedZone = _parseISODate[1];

    return parseDataToDateTime(vals, parsedZone, opts, "ISO 8601", text);
  }
  /**
   * Create a DateTime from an RFC 2822 string
   * @param {string} text - the RFC 2822 string
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since the offset is always specified in the string itself, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.
   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromRFC2822('25 Nov 2016 13:23:12 GMT')
   * @example DateTime.fromRFC2822('Fri, 25 Nov 2016 13:23:12 +0600')
   * @example DateTime.fromRFC2822('25 Nov 2016 13:23 Z')
   * @return {DateTime}
   */
  ;

  DateTime.fromRFC2822 = function fromRFC2822(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _parseRFC2822Date = parseRFC2822Date(text),
        vals = _parseRFC2822Date[0],
        parsedZone = _parseRFC2822Date[1];

    return parseDataToDateTime(vals, parsedZone, opts, "RFC 2822", text);
  }
  /**
   * Create a DateTime from an HTTP header date
   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1
   * @param {string} text - the HTTP header date
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since HTTP dates are always in UTC, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.
   * @param {boolean} [opts.setZone=false] - override the zone with the fixed-offset zone specified in the string. For HTTP dates, this is always UTC, so this option is equivalent to setting the `zone` option to 'utc', but this option is included for consistency with similar methods.
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromHTTP('Sun, 06 Nov 1994 08:49:37 GMT')
   * @example DateTime.fromHTTP('Sunday, 06-Nov-94 08:49:37 GMT')
   * @example DateTime.fromHTTP('Sun Nov  6 08:49:37 1994')
   * @return {DateTime}
   */
  ;

  DateTime.fromHTTP = function fromHTTP(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _parseHTTPDate = parseHTTPDate(text),
        vals = _parseHTTPDate[0],
        parsedZone = _parseHTTPDate[1];

    return parseDataToDateTime(vals, parsedZone, opts, "HTTP", opts);
  }
  /**
   * Create a DateTime from an input string and format string.
   * Defaults to en-US if no locale has been specified, regardless of the system's locale.
   * @see https://moment.github.io/luxon/docs/manual/parsing.html#table-of-tokens
   * @param {string} text - the string to parse
   * @param {string} fmt - the format the string is expected to be in (see the link below for the formats)
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale
   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @return {DateTime}
   */
  ;

  DateTime.fromFormat = function fromFormat(text, fmt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (isUndefined(text) || isUndefined(fmt)) {
      throw new InvalidArgumentError("fromFormat requires an input string and a format");
    }

    var _opts = opts,
        _opts$locale = _opts.locale,
        locale = _opts$locale === void 0 ? null : _opts$locale,
        _opts$numberingSystem = _opts.numberingSystem,
        numberingSystem = _opts$numberingSystem === void 0 ? null : _opts$numberingSystem,
        localeToUse = Locale.fromOpts({
      locale: locale,
      numberingSystem: numberingSystem,
      defaultToEN: true
    }),
        _parseFromTokens = parseFromTokens(localeToUse, text, fmt),
        vals = _parseFromTokens[0],
        parsedZone = _parseFromTokens[1],
        invalid = _parseFromTokens[2];

    if (invalid) {
      return DateTime.invalid(invalid);
    } else {
      return parseDataToDateTime(vals, parsedZone, opts, "format " + fmt, text);
    }
  }
  /**
   * @deprecated use fromFormat instead
   */
  ;

  DateTime.fromString = function fromString(text, fmt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    return DateTime.fromFormat(text, fmt, opts);
  }
  /**
   * Create a DateTime from a SQL date, time, or datetime
   * Defaults to en-US if no locale has been specified, regardless of the system's locale
   * @param {string} text - the string to parse
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale
   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @example DateTime.fromSQL('2017-05-15')
   * @example DateTime.fromSQL('2017-05-15 09:12:34')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342+06:00')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles', { setZone: true })
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342', { zone: 'America/Los_Angeles' })
   * @example DateTime.fromSQL('09:12:34.342')
   * @return {DateTime}
   */
  ;

  DateTime.fromSQL = function fromSQL(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _parseSQL = parseSQL(text),
        vals = _parseSQL[0],
        parsedZone = _parseSQL[1];

    return parseDataToDateTime(vals, parsedZone, opts, "SQL", text);
  }
  /**
   * Create an invalid DateTime.
   * @param {string} reason - simple string of why this DateTime is invalid. Should not contain parameters or anything else data-dependent
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {DateTime}
   */
  ;

  DateTime.invalid = function invalid(reason, explanation) {
    if (explanation === void 0) {
      explanation = null;
    }

    if (!reason) {
      throw new InvalidArgumentError("need to specify a reason the DateTime is invalid");
    }

    var invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);

    if (Settings.throwOnInvalid) {
      throw new InvalidDateTimeError(invalid);
    } else {
      return new DateTime({
        invalid: invalid
      });
    }
  }
  /**
   * Check if an object is a DateTime. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  ;

  DateTime.isDateTime = function isDateTime(o) {
    return o && o.isLuxonDateTime || false;
  } // INFO

  /**
   * Get the value of unit.
   * @param {string} unit - a unit such as 'minute' or 'day'
   * @example DateTime.local(2017, 7, 4).get('month'); //=> 7
   * @example DateTime.local(2017, 7, 4).get('day'); //=> 4
   * @return {number}
   */
  ;

  var _proto = DateTime.prototype;

  _proto.get = function get(unit) {
    return this[unit];
  }
  /**
   * Returns whether the DateTime is valid. Invalid DateTimes occur when:
   * * The DateTime was created from invalid calendar information, such as the 13th month or February 30
   * * The DateTime was created by an operation on another invalid date
   * @type {boolean}
   */
  ;

  /**
   * Returns the resolved Intl options for this DateTime.
   * This is useful in understanding the behavior of formatting methods
   * @param {Object} opts - the same options as toLocaleString
   * @return {Object}
   */
  _proto.resolvedLocaleOpts = function resolvedLocaleOpts(opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _Formatter$create$res = Formatter.create(this.loc.clone(opts), opts).resolvedOptions(this),
        locale = _Formatter$create$res.locale,
        numberingSystem = _Formatter$create$res.numberingSystem,
        calendar = _Formatter$create$res.calendar;

    return {
      locale: locale,
      numberingSystem: numberingSystem,
      outputCalendar: calendar
    };
  } // TRANSFORM

  /**
   * "Set" the DateTime's zone to UTC. Returns a newly-constructed DateTime.
   *
   * Equivalent to {@link setZone}('utc')
   * @param {number} [offset=0] - optionally, an offset from UTC in minutes
   * @param {Object} [opts={}] - options to pass to `setZone()`
   * @return {DateTime}
   */
  ;

  _proto.toUTC = function toUTC(offset, opts) {
    if (offset === void 0) {
      offset = 0;
    }

    if (opts === void 0) {
      opts = {};
    }

    return this.setZone(FixedOffsetZone.instance(offset), opts);
  }
  /**
   * "Set" the DateTime's zone to the host's local zone. Returns a newly-constructed DateTime.
   *
   * Equivalent to `setZone('local')`
   * @return {DateTime}
   */
  ;

  _proto.toLocal = function toLocal() {
    return this.setZone(Settings.defaultZone);
  }
  /**
   * "Set" the DateTime's zone to specified zone. Returns a newly-constructed DateTime.
   *
   * By default, the setter keeps the underlying time the same (as in, the same timestamp), but the new instance will report different local times and consider DSTs when making computations, as with {@link plus}. You may wish to use {@link toLocal} and {@link toUTC} which provide simple convenience wrappers for commonly used zones.
   * @param {string|Zone} [zone='local'] - a zone identifier. As a string, that can be any IANA zone supported by the host environment, or a fixed-offset name of the form 'UTC+3', or the strings 'local' or 'utc'. You may also supply an instance of a {@link Zone} class.
   * @param {Object} opts - options
   * @param {boolean} [opts.keepLocalTime=false] - If true, adjust the underlying time so that the local time stays the same, but in the target zone. You should rarely need this.
   * @return {DateTime}
   */
  ;

  _proto.setZone = function setZone(zone, _temp) {
    var _ref3 = _temp === void 0 ? {} : _temp,
        _ref3$keepLocalTime = _ref3.keepLocalTime,
        keepLocalTime = _ref3$keepLocalTime === void 0 ? false : _ref3$keepLocalTime,
        _ref3$keepCalendarTim = _ref3.keepCalendarTime,
        keepCalendarTime = _ref3$keepCalendarTim === void 0 ? false : _ref3$keepCalendarTim;

    zone = normalizeZone(zone, Settings.defaultZone);

    if (zone.equals(this.zone)) {
      return this;
    } else if (!zone.isValid) {
      return DateTime.invalid(unsupportedZone(zone));
    } else {
      var newTS = this.ts;

      if (keepLocalTime || keepCalendarTime) {
        var offsetGuess = zone.offset(this.ts);
        var asObj = this.toObject();

        var _objToTS3 = objToTS(asObj, offsetGuess, zone);

        newTS = _objToTS3[0];
      }

      return clone$1(this, {
        ts: newTS,
        zone: zone
      });
    }
  }
  /**
   * "Set" the locale, numberingSystem, or outputCalendar. Returns a newly-constructed DateTime.
   * @param {Object} properties - the properties to set
   * @example DateTime.local(2017, 5, 25).reconfigure({ locale: 'en-GB' })
   * @return {DateTime}
   */
  ;

  _proto.reconfigure = function reconfigure(_temp2) {
    var _ref4 = _temp2 === void 0 ? {} : _temp2,
        locale = _ref4.locale,
        numberingSystem = _ref4.numberingSystem,
        outputCalendar = _ref4.outputCalendar;

    var loc = this.loc.clone({
      locale: locale,
      numberingSystem: numberingSystem,
      outputCalendar: outputCalendar
    });
    return clone$1(this, {
      loc: loc
    });
  }
  /**
   * "Set" the locale. Returns a newly-constructed DateTime.
   * Just a convenient alias for reconfigure({ locale })
   * @example DateTime.local(2017, 5, 25).setLocale('en-GB')
   * @return {DateTime}
   */
  ;

  _proto.setLocale = function setLocale(locale) {
    return this.reconfigure({
      locale: locale
    });
  }
  /**
   * "Set" the values of specified units. Returns a newly-constructed DateTime.
   * You can only set units with this method; for "setting" metadata, see {@link reconfigure} and {@link setZone}.
   * @param {Object} values - a mapping of units to numbers
   * @example dt.set({ year: 2017 })
   * @example dt.set({ hour: 8, minute: 30 })
   * @example dt.set({ weekday: 5 })
   * @example dt.set({ year: 2005, ordinal: 234 })
   * @return {DateTime}
   */
  ;

  _proto.set = function set(values) {
    if (!this.isValid) return this;
    var normalized = normalizeObject(values, normalizeUnit, []),
        settingWeekStuff = !isUndefined(normalized.weekYear) || !isUndefined(normalized.weekNumber) || !isUndefined(normalized.weekday),
        containsOrdinal = !isUndefined(normalized.ordinal),
        containsGregorYear = !isUndefined(normalized.year),
        containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),
        containsGregor = containsGregorYear || containsGregorMD,
        definiteWeekDef = normalized.weekYear || normalized.weekNumber;

    if ((containsGregor || containsOrdinal) && definiteWeekDef) {
      throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");
    }

    if (containsGregorMD && containsOrdinal) {
      throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");
    }

    var mixed;

    if (settingWeekStuff) {
      mixed = weekToGregorian(Object.assign(gregorianToWeek(this.c), normalized));
    } else if (!isUndefined(normalized.ordinal)) {
      mixed = ordinalToGregorian(Object.assign(gregorianToOrdinal(this.c), normalized));
    } else {
      mixed = Object.assign(this.toObject(), normalized); // if we didn't set the day but we ended up on an overflow date,
      // use the last day of the right month

      if (isUndefined(normalized.day)) {
        mixed.day = Math.min(daysInMonth(mixed.year, mixed.month), mixed.day);
      }
    }

    var _objToTS4 = objToTS(mixed, this.o, this.zone),
        ts = _objToTS4[0],
        o = _objToTS4[1];

    return clone$1(this, {
      ts: ts,
      o: o
    });
  }
  /**
   * Add a period of time to this DateTime and return the resulting DateTime
   *
   * Adding hours, minutes, seconds, or milliseconds increases the timestamp by the right number of milliseconds. Adding days, months, or years shifts the calendar, accounting for DSTs and leap years along the way. Thus, `dt.plus({ hours: 24 })` may result in a different time than `dt.plus({ days: 1 })` if there's a DST shift in between.
   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @example DateTime.now().plus(123) //~> in 123 milliseconds
   * @example DateTime.now().plus({ minutes: 15 }) //~> in 15 minutes
   * @example DateTime.now().plus({ days: 1 }) //~> this time tomorrow
   * @example DateTime.now().plus({ days: -1 }) //~> this time yesterday
   * @example DateTime.now().plus({ hours: 3, minutes: 13 }) //~> in 3 hr, 13 min
   * @example DateTime.now().plus(Duration.fromObject({ hours: 3, minutes: 13 })) //~> in 3 hr, 13 min
   * @return {DateTime}
   */
  ;

  _proto.plus = function plus(duration) {
    if (!this.isValid) return this;
    var dur = friendlyDuration(duration);
    return clone$1(this, adjustTime(this, dur));
  }
  /**
   * Subtract a period of time to this DateTime and return the resulting DateTime
   * See {@link plus}
   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   @return {DateTime}
  */
  ;

  _proto.minus = function minus(duration) {
    if (!this.isValid) return this;
    var dur = friendlyDuration(duration).negate();
    return clone$1(this, adjustTime(this, dur));
  }
  /**
   * "Set" this DateTime to the beginning of a unit of time.
   * @param {string} unit - The unit to go to the beginning of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.
   * @example DateTime.local(2014, 3, 3).startOf('month').toISODate(); //=> '2014-03-01'
   * @example DateTime.local(2014, 3, 3).startOf('year').toISODate(); //=> '2014-01-01'
   * @example DateTime.local(2014, 3, 3).startOf('week').toISODate(); //=> '2014-03-03', weeks always start on Mondays
   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('day').toISOTime(); //=> '00:00.000-05:00'
   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('hour').toISOTime(); //=> '05:00:00.000-05:00'
   * @return {DateTime}
   */
  ;

  _proto.startOf = function startOf(unit) {
    if (!this.isValid) return this;
    var o = {},
        normalizedUnit = Duration.normalizeUnit(unit);

    switch (normalizedUnit) {
      case "years":
        o.month = 1;
      // falls through

      case "quarters":
      case "months":
        o.day = 1;
      // falls through

      case "weeks":
      case "days":
        o.hour = 0;
      // falls through

      case "hours":
        o.minute = 0;
      // falls through

      case "minutes":
        o.second = 0;
      // falls through

      case "seconds":
        o.millisecond = 0;
        break;
      // no default, invalid units throw in normalizeUnit()
    }

    if (normalizedUnit === "weeks") {
      o.weekday = 1;
    }

    if (normalizedUnit === "quarters") {
      var q = Math.ceil(this.month / 3);
      o.month = (q - 1) * 3 + 1;
    }

    return this.set(o);
  }
  /**
   * "Set" this DateTime to the end (meaning the last millisecond) of a unit of time
   * @param {string} unit - The unit to go to the end of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.
   * @example DateTime.local(2014, 3, 3).endOf('month').toISO(); //=> '2014-03-31T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3).endOf('year').toISO(); //=> '2014-12-31T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3).endOf('week').toISO(); // => '2014-03-09T23:59:59.999-05:00', weeks start on Mondays
   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('day').toISO(); //=> '2014-03-03T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('hour').toISO(); //=> '2014-03-03T05:59:59.999-05:00'
   * @return {DateTime}
   */
  ;

  _proto.endOf = function endOf(unit) {
    var _this$plus;

    return this.isValid ? this.plus((_this$plus = {}, _this$plus[unit] = 1, _this$plus)).startOf(unit).minus(1) : this;
  } // OUTPUT

  /**
   * Returns a string representation of this DateTime formatted according to the specified format string.
   * **You may not want this.** See {@link toLocaleString} for a more flexible formatting tool. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/docs/manual/formatting.html#table-of-tokens).
   * Defaults to en-US if no locale has been specified, regardless of the system's locale.
   * @see https://moment.github.io/luxon/docs/manual/formatting.html#table-of-tokens
   * @param {string} fmt - the format string
   * @param {Object} opts - opts to override the configuration options
   * @example DateTime.now().toFormat('yyyy LLL dd') //=> '2017 Apr 22'
   * @example DateTime.now().setLocale('fr').toFormat('yyyy LLL dd') //=> '2017 avr. 22'
   * @example DateTime.now().toFormat('yyyy LLL dd', { locale: "fr" }) //=> '2017 avr. 22'
   * @example DateTime.now().toFormat("HH 'hours and' mm 'minutes'") //=> '20 hours and 55 minutes'
   * @return {string}
   */
  ;

  _proto.toFormat = function toFormat(fmt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    return this.isValid ? Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this, fmt) : INVALID$2;
  }
  /**
   * Returns a localized string representing this date. Accepts the same options as the Intl.DateTimeFormat constructor and any presets defined by Luxon, such as `DateTime.DATE_FULL` or `DateTime.TIME_SIMPLE`.
   * The exact behavior of this method is browser-specific, but in general it will return an appropriate representation
   * of the DateTime in the assigned locale.
   * Defaults to the system's locale if no locale has been specified
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param opts {Object} - Intl.DateTimeFormat constructor options and configuration options
   * @example DateTime.now().toLocaleString(); //=> 4/20/2017
   * @example DateTime.now().setLocale('en-gb').toLocaleString(); //=> '20/04/2017'
   * @example DateTime.now().toLocaleString({ locale: 'en-gb' }); //=> '20/04/2017'
   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL); //=> 'April 20, 2017'
   * @example DateTime.now().toLocaleString(DateTime.TIME_SIMPLE); //=> '11:32 AM'
   * @example DateTime.now().toLocaleString(DateTime.DATETIME_SHORT); //=> '4/20/2017, 11:32 AM'
   * @example DateTime.now().toLocaleString({ weekday: 'long', month: 'long', day: '2-digit' }); //=> 'Thursday, April 20'
   * @example DateTime.now().toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> 'Thu, Apr 20, 11:27 AM'
   * @example DateTime.now().toLocaleString({ hour: '2-digit', minute: '2-digit', hour12: false }); //=> '11:32'
   * @return {string}
   */
  ;

  _proto.toLocaleString = function toLocaleString(opts) {
    if (opts === void 0) {
      opts = DATE_SHORT;
    }

    return this.isValid ? Formatter.create(this.loc.clone(opts), opts).formatDateTime(this) : INVALID$2;
  }
  /**
   * Returns an array of format "parts", meaning individual tokens along with metadata. This is allows callers to post-process individual sections of the formatted output.
   * Defaults to the system's locale if no locale has been specified
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/formatToParts
   * @param opts {Object} - Intl.DateTimeFormat constructor options, same as `toLocaleString`.
   * @example DateTime.now().toLocaleParts(); //=> [
   *                                   //=>   { type: 'day', value: '25' },
   *                                   //=>   { type: 'literal', value: '/' },
   *                                   //=>   { type: 'month', value: '05' },
   *                                   //=>   { type: 'literal', value: '/' },
   *                                   //=>   { type: 'year', value: '1982' }
   *                                   //=> ]
   */
  ;

  _proto.toLocaleParts = function toLocaleParts(opts) {
    if (opts === void 0) {
      opts = {};
    }

    return this.isValid ? Formatter.create(this.loc.clone(opts), opts).formatDateTimeParts(this) : [];
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc(1982, 5, 25).toISO() //=> '1982-05-25T00:00:00.000Z'
   * @example DateTime.now().toISO() //=> '2017-04-22T20:47:05.335-04:00'
   * @example DateTime.now().toISO({ includeOffset: false }) //=> '2017-04-22T20:47:05.335'
   * @example DateTime.now().toISO({ format: 'basic' }) //=> '20170422T204705.335-0400'
   * @return {string}
   */
  ;

  _proto.toISO = function toISO(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) {
      return null;
    }

    return this.toISODate(opts) + "T" + this.toISOTime(opts);
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's date component
   * @param {Object} opts - options
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc(1982, 5, 25).toISODate() //=> '1982-05-25'
   * @example DateTime.utc(1982, 5, 25).toISODate({ format: 'basic' }) //=> '19820525'
   * @return {string}
   */
  ;

  _proto.toISODate = function toISODate(_temp3) {
    var _ref5 = _temp3 === void 0 ? {} : _temp3,
        _ref5$format = _ref5.format,
        format = _ref5$format === void 0 ? "extended" : _ref5$format;

    var fmt = format === "basic" ? "yyyyMMdd" : "yyyy-MM-dd";

    if (this.year > 9999) {
      fmt = "+" + fmt;
    }

    return toTechFormat(this, fmt);
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's week date
   * @example DateTime.utc(1982, 5, 25).toISOWeekDate() //=> '1982-W21-2'
   * @return {string}
   */
  ;

  _proto.toISOWeekDate = function toISOWeekDate() {
    return toTechFormat(this, "kkkk-'W'WW-c");
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's time component
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime() //=> '07:34:19.361Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34, seconds: 0, milliseconds: 0 }).toISOTime({ suppressSeconds: true }) //=> '07:34Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ format: 'basic' }) //=> '073419.361Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ includePrefix: true }) //=> 'T07:34:19.361Z'
   * @return {string}
   */
  ;

  _proto.toISOTime = function toISOTime(_temp4) {
    var _ref6 = _temp4 === void 0 ? {} : _temp4,
        _ref6$suppressMillise = _ref6.suppressMilliseconds,
        suppressMilliseconds = _ref6$suppressMillise === void 0 ? false : _ref6$suppressMillise,
        _ref6$suppressSeconds = _ref6.suppressSeconds,
        suppressSeconds = _ref6$suppressSeconds === void 0 ? false : _ref6$suppressSeconds,
        _ref6$includeOffset = _ref6.includeOffset,
        includeOffset = _ref6$includeOffset === void 0 ? true : _ref6$includeOffset,
        _ref6$includePrefix = _ref6.includePrefix,
        includePrefix = _ref6$includePrefix === void 0 ? false : _ref6$includePrefix,
        _ref6$format = _ref6.format,
        format = _ref6$format === void 0 ? "extended" : _ref6$format;

    return toTechTimeFormat(this, {
      suppressSeconds: suppressSeconds,
      suppressMilliseconds: suppressMilliseconds,
      includeOffset: includeOffset,
      includePrefix: includePrefix,
      format: format
    });
  }
  /**
   * Returns an RFC 2822-compatible string representation of this DateTime, always in UTC
   * @example DateTime.utc(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 +0000'
   * @example DateTime.local(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 -0400'
   * @return {string}
   */
  ;

  _proto.toRFC2822 = function toRFC2822() {
    return toTechFormat(this, "EEE, dd LLL yyyy HH:mm:ss ZZZ", false);
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in HTTP headers.
   * Specifically, the string conforms to RFC 1123.
   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1
   * @example DateTime.utc(2014, 7, 13).toHTTP() //=> 'Sun, 13 Jul 2014 00:00:00 GMT'
   * @example DateTime.utc(2014, 7, 13, 19).toHTTP() //=> 'Sun, 13 Jul 2014 19:00:00 GMT'
   * @return {string}
   */
  ;

  _proto.toHTTP = function toHTTP() {
    return toTechFormat(this.toUTC(), "EEE, dd LLL yyyy HH:mm:ss 'GMT'");
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL Date
   * @example DateTime.utc(2014, 7, 13).toSQLDate() //=> '2014-07-13'
   * @return {string}
   */
  ;

  _proto.toSQLDate = function toSQLDate() {
    return toTechFormat(this, "yyyy-MM-dd");
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL Time
   * @param {Object} opts - options
   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @example DateTime.utc().toSQL() //=> '05:15:16.345'
   * @example DateTime.now().toSQL() //=> '05:15:16.345 -04:00'
   * @example DateTime.now().toSQL({ includeOffset: false }) //=> '05:15:16.345'
   * @example DateTime.now().toSQL({ includeZone: false }) //=> '05:15:16.345 America/New_York'
   * @return {string}
   */
  ;

  _proto.toSQLTime = function toSQLTime(_temp5) {
    var _ref7 = _temp5 === void 0 ? {} : _temp5,
        _ref7$includeOffset = _ref7.includeOffset,
        includeOffset = _ref7$includeOffset === void 0 ? true : _ref7$includeOffset,
        _ref7$includeZone = _ref7.includeZone,
        includeZone = _ref7$includeZone === void 0 ? false : _ref7$includeZone;

    return toTechTimeFormat(this, {
      includeOffset: includeOffset,
      includeZone: includeZone,
      spaceZone: true
    });
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL DateTime
   * @param {Object} opts - options
   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @example DateTime.utc(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 Z'
   * @example DateTime.local(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 -04:00'
   * @example DateTime.local(2014, 7, 13).toSQL({ includeOffset: false }) //=> '2014-07-13 00:00:00.000'
   * @example DateTime.local(2014, 7, 13).toSQL({ includeZone: true }) //=> '2014-07-13 00:00:00.000 America/New_York'
   * @return {string}
   */
  ;

  _proto.toSQL = function toSQL(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) {
      return null;
    }

    return this.toSQLDate() + " " + this.toSQLTime(opts);
  }
  /**
   * Returns a string representation of this DateTime appropriate for debugging
   * @return {string}
   */
  ;

  _proto.toString = function toString() {
    return this.isValid ? this.toISO() : INVALID$2;
  }
  /**
   * Returns the epoch milliseconds of this DateTime. Alias of {@link toMillis}
   * @return {number}
   */
  ;

  _proto.valueOf = function valueOf() {
    return this.toMillis();
  }
  /**
   * Returns the epoch milliseconds of this DateTime.
   * @return {number}
   */
  ;

  _proto.toMillis = function toMillis() {
    return this.isValid ? this.ts : NaN;
  }
  /**
   * Returns the epoch seconds of this DateTime.
   * @return {number}
   */
  ;

  _proto.toSeconds = function toSeconds() {
    return this.isValid ? this.ts / 1000 : NaN;
  }
  /**
   * Returns an ISO 8601 representation of this DateTime appropriate for use in JSON.
   * @return {string}
   */
  ;

  _proto.toJSON = function toJSON() {
    return this.toISO();
  }
  /**
   * Returns a BSON serializable equivalent to this DateTime.
   * @return {Date}
   */
  ;

  _proto.toBSON = function toBSON() {
    return this.toJSDate();
  }
  /**
   * Returns a JavaScript object with this DateTime's year, month, day, and so on.
   * @param opts - options for generating the object
   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output
   * @example DateTime.now().toObject() //=> { year: 2017, month: 4, day: 22, hour: 20, minute: 49, second: 42, millisecond: 268 }
   * @return {Object}
   */
  ;

  _proto.toObject = function toObject(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) return {};
    var base = Object.assign({}, this.c);

    if (opts.includeConfig) {
      base.outputCalendar = this.outputCalendar;
      base.numberingSystem = this.loc.numberingSystem;
      base.locale = this.loc.locale;
    }

    return base;
  }
  /**
   * Returns a JavaScript Date equivalent to this DateTime.
   * @return {Date}
   */
  ;

  _proto.toJSDate = function toJSDate() {
    return new Date(this.isValid ? this.ts : NaN);
  } // COMPARE

  /**
   * Return the difference between two DateTimes as a Duration.
   * @param {DateTime} otherDateTime - the DateTime to compare this one to
   * @param {string|string[]} [unit=['milliseconds']] - the unit or array of units (such as 'hours' or 'days') to include in the duration.
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @example
   * var i1 = DateTime.fromISO('1982-05-25T09:45'),
   *     i2 = DateTime.fromISO('1983-10-14T10:30');
   * i2.diff(i1).toObject() //=> { milliseconds: 43807500000 }
   * i2.diff(i1, 'hours').toObject() //=> { hours: 12168.75 }
   * i2.diff(i1, ['months', 'days']).toObject() //=> { months: 16, days: 19.03125 }
   * i2.diff(i1, ['months', 'days', 'hours']).toObject() //=> { months: 16, days: 19, hours: 0.75 }
   * @return {Duration}
   */
  ;

  _proto.diff = function diff(otherDateTime, unit, opts) {
    if (unit === void 0) {
      unit = "milliseconds";
    }

    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid || !otherDateTime.isValid) {
      return Duration.invalid(this.invalid || otherDateTime.invalid, "created by diffing an invalid DateTime");
    }

    var durOpts = Object.assign({
      locale: this.locale,
      numberingSystem: this.numberingSystem
    }, opts);

    var units = maybeArray(unit).map(Duration.normalizeUnit),
        otherIsLater = otherDateTime.valueOf() > this.valueOf(),
        earlier = otherIsLater ? this : otherDateTime,
        later = otherIsLater ? otherDateTime : this,
        diffed = _diff(earlier, later, units, durOpts);

    return otherIsLater ? diffed.negate() : diffed;
  }
  /**
   * Return the difference between this DateTime and right now.
   * See {@link diff}
   * @param {string|string[]} [unit=['milliseconds']] - the unit or units units (such as 'hours' or 'days') to include in the duration
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @return {Duration}
   */
  ;

  _proto.diffNow = function diffNow(unit, opts) {
    if (unit === void 0) {
      unit = "milliseconds";
    }

    if (opts === void 0) {
      opts = {};
    }

    return this.diff(DateTime.now(), unit, opts);
  }
  /**
   * Return an Interval spanning between this DateTime and another DateTime
   * @param {DateTime} otherDateTime - the other end point of the Interval
   * @return {Interval}
   */
  ;

  _proto.until = function until(otherDateTime) {
    return this.isValid ? Interval.fromDateTimes(this, otherDateTime) : this;
  }
  /**
   * Return whether this DateTime is in the same unit of time as another DateTime.
   * Higher-order units must also be identical for this function to return `true`.
   * Note that time zones are **ignored** in this comparison, which compares the **local** calendar time. Use {@link setZone} to convert one of the dates if needed.
   * @param {DateTime} otherDateTime - the other DateTime
   * @param {string} unit - the unit of time to check sameness on
   * @example DateTime.now().hasSame(otherDT, 'day'); //~> true if otherDT is in the same current calendar day
   * @return {boolean}
   */
  ;

  _proto.hasSame = function hasSame(otherDateTime, unit) {
    if (!this.isValid) return false;
    var inputMs = otherDateTime.valueOf();
    var otherZoneDateTime = this.setZone(otherDateTime.zone, {
      keepLocalTime: true
    });
    return otherZoneDateTime.startOf(unit) <= inputMs && inputMs <= otherZoneDateTime.endOf(unit);
  }
  /**
   * Equality check
   * Two DateTimes are equal iff they represent the same millisecond, have the same zone and location, and are both valid.
   * To compare just the millisecond values, use `+dt1 === +dt2`.
   * @param {DateTime} other - the other DateTime
   * @return {boolean}
   */
  ;

  _proto.equals = function equals(other) {
    return this.isValid && other.isValid && this.valueOf() === other.valueOf() && this.zone.equals(other.zone) && this.loc.equals(other.loc);
  }
  /**
   * Returns a string representation of a this time relative to now, such as "in two days". Can only internationalize if your
   * platform supports Intl.RelativeTimeFormat. Rounds down by default.
   * @param {Object} options - options that affect the output
   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.
   * @param {string} [options.style="long"] - the style of units, must be "long", "short", or "narrow"
   * @param {string|string[]} options.unit - use a specific unit or array of units; if omitted, or an array, the method will pick the best unit. Use an array or one of "years", "quarters", "months", "weeks", "days", "hours", "minutes", or "seconds"
   * @param {boolean} [options.round=true] - whether to round the numbers in the output.
   * @param {number} [options.padding=0] - padding in milliseconds. This allows you to round up the result if it fits inside the threshold. Don't use in combination with {round: false} because the decimal output will include the padding.
   * @param {string} options.locale - override the locale of this DateTime
   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this
   * @example DateTime.now().plus({ days: 1 }).toRelative() //=> "in 1 day"
   * @example DateTime.now().setLocale("es").toRelative({ days: 1 }) //=> "dentro de 1 día"
   * @example DateTime.now().plus({ days: 1 }).toRelative({ locale: "fr" }) //=> "dans 23 heures"
   * @example DateTime.now().minus({ days: 2 }).toRelative() //=> "2 days ago"
   * @example DateTime.now().minus({ days: 2 }).toRelative({ unit: "hours" }) //=> "48 hours ago"
   * @example DateTime.now().minus({ hours: 36 }).toRelative({ round: false }) //=> "1.5 days ago"
   */
  ;

  _proto.toRelative = function toRelative(options) {
    if (options === void 0) {
      options = {};
    }

    if (!this.isValid) return null;
    var base = options.base || DateTime.fromObject({
      zone: this.zone
    }),
        padding = options.padding ? this < base ? -options.padding : options.padding : 0;
    var units = ["years", "months", "days", "hours", "minutes", "seconds"];
    var unit = options.unit;

    if (Array.isArray(options.unit)) {
      units = options.unit;
      unit = undefined;
    }

    return diffRelative(base, this.plus(padding), Object.assign(options, {
      numeric: "always",
      units: units,
      unit: unit
    }));
  }
  /**
   * Returns a string representation of this date relative to today, such as "yesterday" or "next month".
   * Only internationalizes on platforms that supports Intl.RelativeTimeFormat.
   * @param {Object} options - options that affect the output
   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.
   * @param {string} options.locale - override the locale of this DateTime
   * @param {string} options.unit - use a specific unit; if omitted, the method will pick the unit. Use one of "years", "quarters", "months", "weeks", or "days"
   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this
   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar() //=> "tomorrow"
   * @example DateTime.now().setLocale("es").plus({ days: 1 }).toRelative() //=> ""mañana"
   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar({ locale: "fr" }) //=> "demain"
   * @example DateTime.now().minus({ days: 2 }).toRelativeCalendar() //=> "2 days ago"
   */
  ;

  _proto.toRelativeCalendar = function toRelativeCalendar(options) {
    if (options === void 0) {
      options = {};
    }

    if (!this.isValid) return null;
    return diffRelative(options.base || DateTime.fromObject({
      zone: this.zone
    }), this, Object.assign(options, {
      numeric: "auto",
      units: ["years", "months", "days"],
      calendary: true
    }));
  }
  /**
   * Return the min of several date times
   * @param {...DateTime} dateTimes - the DateTimes from which to choose the minimum
   * @return {DateTime} the min DateTime, or undefined if called with no argument
   */
  ;

  DateTime.min = function min() {
    for (var _len = arguments.length, dateTimes = new Array(_len), _key = 0; _key < _len; _key++) {
      dateTimes[_key] = arguments[_key];
    }

    if (!dateTimes.every(DateTime.isDateTime)) {
      throw new InvalidArgumentError("min requires all arguments be DateTimes");
    }

    return bestBy(dateTimes, function (i) {
      return i.valueOf();
    }, Math.min);
  }
  /**
   * Return the max of several date times
   * @param {...DateTime} dateTimes - the DateTimes from which to choose the maximum
   * @return {DateTime} the max DateTime, or undefined if called with no argument
   */
  ;

  DateTime.max = function max() {
    for (var _len2 = arguments.length, dateTimes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      dateTimes[_key2] = arguments[_key2];
    }

    if (!dateTimes.every(DateTime.isDateTime)) {
      throw new InvalidArgumentError("max requires all arguments be DateTimes");
    }

    return bestBy(dateTimes, function (i) {
      return i.valueOf();
    }, Math.max);
  } // MISC

  /**
   * Explain how a string would be parsed by fromFormat()
   * @param {string} text - the string to parse
   * @param {string} fmt - the format the string is expected to be in (see description)
   * @param {Object} options - options taken by fromFormat()
   * @return {Object}
   */
  ;

  DateTime.fromFormatExplain = function fromFormatExplain(text, fmt, options) {
    if (options === void 0) {
      options = {};
    }

    var _options = options,
        _options$locale = _options.locale,
        locale = _options$locale === void 0 ? null : _options$locale,
        _options$numberingSys = _options.numberingSystem,
        numberingSystem = _options$numberingSys === void 0 ? null : _options$numberingSys,
        localeToUse = Locale.fromOpts({
      locale: locale,
      numberingSystem: numberingSystem,
      defaultToEN: true
    });
    return explainFromTokens(localeToUse, text, fmt);
  }
  /**
   * @deprecated use fromFormatExplain instead
   */
  ;

  DateTime.fromStringExplain = function fromStringExplain(text, fmt, options) {
    if (options === void 0) {
      options = {};
    }

    return DateTime.fromFormatExplain(text, fmt, options);
  } // FORMAT PRESETS

  /**
   * {@link toLocaleString} format like 10/14/1983
   * @type {Object}
   */
  ;

  _createClass(DateTime, [{
    key: "isValid",
    get: function get() {
      return this.invalid === null;
    }
    /**
     * Returns an error code if this DateTime is invalid, or null if the DateTime is valid
     * @type {string}
     */

  }, {
    key: "invalidReason",
    get: function get() {
      return this.invalid ? this.invalid.reason : null;
    }
    /**
     * Returns an explanation of why this DateTime became invalid, or null if the DateTime is valid
     * @type {string}
     */

  }, {
    key: "invalidExplanation",
    get: function get() {
      return this.invalid ? this.invalid.explanation : null;
    }
    /**
     * Get the locale of a DateTime, such 'en-GB'. The locale is used when formatting the DateTime
     *
     * @type {string}
     */

  }, {
    key: "locale",
    get: function get() {
      return this.isValid ? this.loc.locale : null;
    }
    /**
     * Get the numbering system of a DateTime, such 'beng'. The numbering system is used when formatting the DateTime
     *
     * @type {string}
     */

  }, {
    key: "numberingSystem",
    get: function get() {
      return this.isValid ? this.loc.numberingSystem : null;
    }
    /**
     * Get the output calendar of a DateTime, such 'islamic'. The output calendar is used when formatting the DateTime
     *
     * @type {string}
     */

  }, {
    key: "outputCalendar",
    get: function get() {
      return this.isValid ? this.loc.outputCalendar : null;
    }
    /**
     * Get the time zone associated with this DateTime.
     * @type {Zone}
     */

  }, {
    key: "zone",
    get: function get() {
      return this._zone;
    }
    /**
     * Get the name of the time zone.
     * @type {string}
     */

  }, {
    key: "zoneName",
    get: function get() {
      return this.isValid ? this.zone.name : null;
    }
    /**
     * Get the year
     * @example DateTime.local(2017, 5, 25).year //=> 2017
     * @type {number}
     */

  }, {
    key: "year",
    get: function get() {
      return this.isValid ? this.c.year : NaN;
    }
    /**
     * Get the quarter
     * @example DateTime.local(2017, 5, 25).quarter //=> 2
     * @type {number}
     */

  }, {
    key: "quarter",
    get: function get() {
      return this.isValid ? Math.ceil(this.c.month / 3) : NaN;
    }
    /**
     * Get the month (1-12).
     * @example DateTime.local(2017, 5, 25).month //=> 5
     * @type {number}
     */

  }, {
    key: "month",
    get: function get() {
      return this.isValid ? this.c.month : NaN;
    }
    /**
     * Get the day of the month (1-30ish).
     * @example DateTime.local(2017, 5, 25).day //=> 25
     * @type {number}
     */

  }, {
    key: "day",
    get: function get() {
      return this.isValid ? this.c.day : NaN;
    }
    /**
     * Get the hour of the day (0-23).
     * @example DateTime.local(2017, 5, 25, 9).hour //=> 9
     * @type {number}
     */

  }, {
    key: "hour",
    get: function get() {
      return this.isValid ? this.c.hour : NaN;
    }
    /**
     * Get the minute of the hour (0-59).
     * @example DateTime.local(2017, 5, 25, 9, 30).minute //=> 30
     * @type {number}
     */

  }, {
    key: "minute",
    get: function get() {
      return this.isValid ? this.c.minute : NaN;
    }
    /**
     * Get the second of the minute (0-59).
     * @example DateTime.local(2017, 5, 25, 9, 30, 52).second //=> 52
     * @type {number}
     */

  }, {
    key: "second",
    get: function get() {
      return this.isValid ? this.c.second : NaN;
    }
    /**
     * Get the millisecond of the second (0-999).
     * @example DateTime.local(2017, 5, 25, 9, 30, 52, 654).millisecond //=> 654
     * @type {number}
     */

  }, {
    key: "millisecond",
    get: function get() {
      return this.isValid ? this.c.millisecond : NaN;
    }
    /**
     * Get the week year
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2014, 12, 31).weekYear //=> 2015
     * @type {number}
     */

  }, {
    key: "weekYear",
    get: function get() {
      return this.isValid ? possiblyCachedWeekData(this).weekYear : NaN;
    }
    /**
     * Get the week number of the week year (1-52ish).
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2017, 5, 25).weekNumber //=> 21
     * @type {number}
     */

  }, {
    key: "weekNumber",
    get: function get() {
      return this.isValid ? possiblyCachedWeekData(this).weekNumber : NaN;
    }
    /**
     * Get the day of the week.
     * 1 is Monday and 7 is Sunday
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2014, 11, 31).weekday //=> 4
     * @type {number}
     */

  }, {
    key: "weekday",
    get: function get() {
      return this.isValid ? possiblyCachedWeekData(this).weekday : NaN;
    }
    /**
     * Get the ordinal (meaning the day of the year)
     * @example DateTime.local(2017, 5, 25).ordinal //=> 145
     * @type {number|DateTime}
     */

  }, {
    key: "ordinal",
    get: function get() {
      return this.isValid ? gregorianToOrdinal(this.c).ordinal : NaN;
    }
    /**
     * Get the human readable short month name, such as 'Oct'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).monthShort //=> Oct
     * @type {string}
     */

  }, {
    key: "monthShort",
    get: function get() {
      return this.isValid ? Info.months("short", {
        locObj: this.loc
      })[this.month - 1] : null;
    }
    /**
     * Get the human readable long month name, such as 'October'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).monthLong //=> October
     * @type {string}
     */

  }, {
    key: "monthLong",
    get: function get() {
      return this.isValid ? Info.months("long", {
        locObj: this.loc
      })[this.month - 1] : null;
    }
    /**
     * Get the human readable short weekday, such as 'Mon'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).weekdayShort //=> Mon
     * @type {string}
     */

  }, {
    key: "weekdayShort",
    get: function get() {
      return this.isValid ? Info.weekdays("short", {
        locObj: this.loc
      })[this.weekday - 1] : null;
    }
    /**
     * Get the human readable long weekday, such as 'Monday'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).weekdayLong //=> Monday
     * @type {string}
     */

  }, {
    key: "weekdayLong",
    get: function get() {
      return this.isValid ? Info.weekdays("long", {
        locObj: this.loc
      })[this.weekday - 1] : null;
    }
    /**
     * Get the UTC offset of this DateTime in minutes
     * @example DateTime.now().offset //=> -240
     * @example DateTime.utc().offset //=> 0
     * @type {number}
     */

  }, {
    key: "offset",
    get: function get() {
      return this.isValid ? +this.o : NaN;
    }
    /**
     * Get the short human name for the zone's current offset, for example "EST" or "EDT".
     * Defaults to the system's locale if no locale has been specified
     * @type {string}
     */

  }, {
    key: "offsetNameShort",
    get: function get() {
      if (this.isValid) {
        return this.zone.offsetName(this.ts, {
          format: "short",
          locale: this.locale
        });
      } else {
        return null;
      }
    }
    /**
     * Get the long human name for the zone's current offset, for example "Eastern Standard Time" or "Eastern Daylight Time".
     * Defaults to the system's locale if no locale has been specified
     * @type {string}
     */

  }, {
    key: "offsetNameLong",
    get: function get() {
      if (this.isValid) {
        return this.zone.offsetName(this.ts, {
          format: "long",
          locale: this.locale
        });
      } else {
        return null;
      }
    }
    /**
     * Get whether this zone's offset ever changes, as in a DST.
     * @type {boolean}
     */

  }, {
    key: "isOffsetFixed",
    get: function get() {
      return this.isValid ? this.zone.universal : null;
    }
    /**
     * Get whether the DateTime is in a DST.
     * @type {boolean}
     */

  }, {
    key: "isInDST",
    get: function get() {
      if (this.isOffsetFixed) {
        return false;
      } else {
        return this.offset > this.set({
          month: 1
        }).offset || this.offset > this.set({
          month: 5
        }).offset;
      }
    }
    /**
     * Returns true if this DateTime is in a leap year, false otherwise
     * @example DateTime.local(2016).isInLeapYear //=> true
     * @example DateTime.local(2013).isInLeapYear //=> false
     * @type {boolean}
     */

  }, {
    key: "isInLeapYear",
    get: function get() {
      return isLeapYear(this.year);
    }
    /**
     * Returns the number of days in this DateTime's month
     * @example DateTime.local(2016, 2).daysInMonth //=> 29
     * @example DateTime.local(2016, 3).daysInMonth //=> 31
     * @type {number}
     */

  }, {
    key: "daysInMonth",
    get: function get() {
      return daysInMonth(this.year, this.month);
    }
    /**
     * Returns the number of days in this DateTime's year
     * @example DateTime.local(2016).daysInYear //=> 366
     * @example DateTime.local(2013).daysInYear //=> 365
     * @type {number}
     */

  }, {
    key: "daysInYear",
    get: function get() {
      return this.isValid ? daysInYear(this.year) : NaN;
    }
    /**
     * Returns the number of weeks in this DateTime's year
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2004).weeksInWeekYear //=> 53
     * @example DateTime.local(2013).weeksInWeekYear //=> 52
     * @type {number}
     */

  }, {
    key: "weeksInWeekYear",
    get: function get() {
      return this.isValid ? weeksInWeekYear(this.weekYear) : NaN;
    }
  }], [{
    key: "DATE_SHORT",
    get: function get() {
      return DATE_SHORT;
    }
    /**
     * {@link toLocaleString} format like 'Oct 14, 1983'
     * @type {Object}
     */

  }, {
    key: "DATE_MED",
    get: function get() {
      return DATE_MED;
    }
    /**
     * {@link toLocaleString} format like 'Fri, Oct 14, 1983'
     * @type {Object}
     */

  }, {
    key: "DATE_MED_WITH_WEEKDAY",
    get: function get() {
      return DATE_MED_WITH_WEEKDAY;
    }
    /**
     * {@link toLocaleString} format like 'October 14, 1983'
     * @type {Object}
     */

  }, {
    key: "DATE_FULL",
    get: function get() {
      return DATE_FULL;
    }
    /**
     * {@link toLocaleString} format like 'Tuesday, October 14, 1983'
     * @type {Object}
     */

  }, {
    key: "DATE_HUGE",
    get: function get() {
      return DATE_HUGE;
    }
    /**
     * {@link toLocaleString} format like '09:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "TIME_SIMPLE",
    get: function get() {
      return TIME_SIMPLE;
    }
    /**
     * {@link toLocaleString} format like '09:30:23 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "TIME_WITH_SECONDS",
    get: function get() {
      return TIME_WITH_SECONDS;
    }
    /**
     * {@link toLocaleString} format like '09:30:23 AM EDT'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "TIME_WITH_SHORT_OFFSET",
    get: function get() {
      return TIME_WITH_SHORT_OFFSET;
    }
    /**
     * {@link toLocaleString} format like '09:30:23 AM Eastern Daylight Time'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "TIME_WITH_LONG_OFFSET",
    get: function get() {
      return TIME_WITH_LONG_OFFSET;
    }
    /**
     * {@link toLocaleString} format like '09:30', always 24-hour.
     * @type {Object}
     */

  }, {
    key: "TIME_24_SIMPLE",
    get: function get() {
      return TIME_24_SIMPLE;
    }
    /**
     * {@link toLocaleString} format like '09:30:23', always 24-hour.
     * @type {Object}
     */

  }, {
    key: "TIME_24_WITH_SECONDS",
    get: function get() {
      return TIME_24_WITH_SECONDS;
    }
    /**
     * {@link toLocaleString} format like '09:30:23 EDT', always 24-hour.
     * @type {Object}
     */

  }, {
    key: "TIME_24_WITH_SHORT_OFFSET",
    get: function get() {
      return TIME_24_WITH_SHORT_OFFSET;
    }
    /**
     * {@link toLocaleString} format like '09:30:23 Eastern Daylight Time', always 24-hour.
     * @type {Object}
     */

  }, {
    key: "TIME_24_WITH_LONG_OFFSET",
    get: function get() {
      return TIME_24_WITH_LONG_OFFSET;
    }
    /**
     * {@link toLocaleString} format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_SHORT",
    get: function get() {
      return DATETIME_SHORT;
    }
    /**
     * {@link toLocaleString} format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_SHORT_WITH_SECONDS",
    get: function get() {
      return DATETIME_SHORT_WITH_SECONDS;
    }
    /**
     * {@link toLocaleString} format like 'Oct 14, 1983, 9:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_MED",
    get: function get() {
      return DATETIME_MED;
    }
    /**
     * {@link toLocaleString} format like 'Oct 14, 1983, 9:30:33 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_MED_WITH_SECONDS",
    get: function get() {
      return DATETIME_MED_WITH_SECONDS;
    }
    /**
     * {@link toLocaleString} format like 'Fri, 14 Oct 1983, 9:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_MED_WITH_WEEKDAY",
    get: function get() {
      return DATETIME_MED_WITH_WEEKDAY;
    }
    /**
     * {@link toLocaleString} format like 'October 14, 1983, 9:30 AM EDT'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_FULL",
    get: function get() {
      return DATETIME_FULL;
    }
    /**
     * {@link toLocaleString} format like 'October 14, 1983, 9:30:33 AM EDT'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_FULL_WITH_SECONDS",
    get: function get() {
      return DATETIME_FULL_WITH_SECONDS;
    }
    /**
     * {@link toLocaleString} format like 'Friday, October 14, 1983, 9:30 AM Eastern Daylight Time'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_HUGE",
    get: function get() {
      return DATETIME_HUGE;
    }
    /**
     * {@link toLocaleString} format like 'Friday, October 14, 1983, 9:30:33 AM Eastern Daylight Time'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_HUGE_WITH_SECONDS",
    get: function get() {
      return DATETIME_HUGE_WITH_SECONDS;
    }
  }]);

  return DateTime;
}();
function friendlyDateTime(dateTimeish) {
  if (DateTime.isDateTime(dateTimeish)) {
    return dateTimeish;
  } else if (dateTimeish && dateTimeish.valueOf && isNumber(dateTimeish.valueOf())) {
    return DateTime.fromJSDate(dateTimeish);
  } else if (dateTimeish && typeof dateTimeish === "object") {
    return DateTime.fromObject(dateTimeish);
  } else {
    throw new InvalidArgumentError("Unknown datetime argument: " + dateTimeish + ", of type " + typeof dateTimeish);
  }
}

var VERSION = "1.28.0";

exports.DateTime = DateTime;
exports.Duration = Duration;
exports.FixedOffsetZone = FixedOffsetZone;
exports.IANAZone = IANAZone;
exports.Info = Info;
exports.Interval = Interval;
exports.InvalidZone = InvalidZone;
exports.LocalZone = LocalZone;
exports.Settings = Settings;
exports.VERSION = VERSION;
exports.Zone = Zone;
//# sourceMappingURL=luxon.js.map


/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/reflect-metadata/Reflect.js":
/*!**************************************************!*\
  !*** ./node_modules/reflect-metadata/Reflect.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process, global) {/*! *****************************************************************************
Copyright (C) Microsoft. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var Reflect;
(function (Reflect) {
    // Metadata Proposal
    // https://rbuckton.github.io/reflect-metadata/
    (function (factory) {
        var root = typeof global === "object" ? global :
            typeof self === "object" ? self :
                typeof this === "object" ? this :
                    Function("return this;")();
        var exporter = makeExporter(Reflect);
        if (typeof root.Reflect === "undefined") {
            root.Reflect = Reflect;
        }
        else {
            exporter = makeExporter(root.Reflect, exporter);
        }
        factory(exporter);
        function makeExporter(target, previous) {
            return function (key, value) {
                if (typeof target[key] !== "function") {
                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });
                }
                if (previous)
                    previous(key, value);
            };
        }
    })(function (exporter) {
        var hasOwn = Object.prototype.hasOwnProperty;
        // feature test for Symbol support
        var supportsSymbol = typeof Symbol === "function";
        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== "undefined" ? Symbol.toPrimitive : "@@toPrimitive";
        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== "undefined" ? Symbol.iterator : "@@iterator";
        var supportsCreate = typeof Object.create === "function"; // feature test for Object.create support
        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support
        var downLevel = !supportsCreate && !supportsProto;
        var HashMap = {
            // create an object in dictionary mode (a.k.a. "slow" mode in v8)
            create: supportsCreate
                ? function () { return MakeDictionary(Object.create(null)); }
                : supportsProto
                    ? function () { return MakeDictionary({ __proto__: null }); }
                    : function () { return MakeDictionary({}); },
            has: downLevel
                ? function (map, key) { return hasOwn.call(map, key); }
                : function (map, key) { return key in map; },
            get: downLevel
                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }
                : function (map, key) { return map[key]; },
        };
        // Load global or shim versions of Map, Set, and WeakMap
        var functionPrototype = Object.getPrototypeOf(Function);
        var usePolyfill = typeof process === "object" && process.env && process.env["REFLECT_METADATA_USE_MAP_POLYFILL"] === "true";
        var _Map = !usePolyfill && typeof Map === "function" && typeof Map.prototype.entries === "function" ? Map : CreateMapPolyfill();
        var _Set = !usePolyfill && typeof Set === "function" && typeof Set.prototype.entries === "function" ? Set : CreateSetPolyfill();
        var _WeakMap = !usePolyfill && typeof WeakMap === "function" ? WeakMap : CreateWeakMapPolyfill();
        // [[Metadata]] internal slot
        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots
        var Metadata = new _WeakMap();
        /**
         * Applies a set of decorators to a property of a target object.
         * @param decorators An array of decorators.
         * @param target The target object.
         * @param propertyKey (Optional) The property key to decorate.
         * @param attributes (Optional) The property descriptor for the target key.
         * @remarks Decorators are applied in reverse order.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Example = Reflect.decorate(decoratorsArray, Example);
         *
         *     // property (on constructor)
         *     Reflect.decorate(decoratorsArray, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.decorate(decoratorsArray, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Object.defineProperty(Example, "staticMethod",
         *         Reflect.decorate(decoratorsArray, Example, "staticMethod",
         *             Object.getOwnPropertyDescriptor(Example, "staticMethod")));
         *
         *     // method (on prototype)
         *     Object.defineProperty(Example.prototype, "method",
         *         Reflect.decorate(decoratorsArray, Example.prototype, "method",
         *             Object.getOwnPropertyDescriptor(Example.prototype, "method")));
         *
         */
        function decorate(decorators, target, propertyKey, attributes) {
            if (!IsUndefined(propertyKey)) {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))
                    throw new TypeError();
                if (IsNull(attributes))
                    attributes = undefined;
                propertyKey = ToPropertyKey(propertyKey);
                return DecorateProperty(decorators, target, propertyKey, attributes);
            }
            else {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsConstructor(target))
                    throw new TypeError();
                return DecorateConstructor(decorators, target);
            }
        }
        exporter("decorate", decorate);
        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)
        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata
        /**
         * A default metadata decorator factory that can be used on a class, class member, or parameter.
         * @param metadataKey The key for the metadata entry.
         * @param metadataValue The value for the metadata entry.
         * @returns A decorator function.
         * @remarks
         * If `metadataKey` is already defined for the target and target key, the
         * metadataValue for that key will be overwritten.
         * @example
         *
         *     // constructor
         *     @Reflect.metadata(key, value)
         *     class Example {
         *     }
         *
         *     // property (on constructor, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticProperty;
         *     }
         *
         *     // property (on prototype, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         property;
         *     }
         *
         *     // method (on constructor)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticMethod() { }
         *     }
         *
         *     // method (on prototype)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         method() { }
         *     }
         *
         */
        function metadata(metadataKey, metadataValue) {
            function decorator(target, propertyKey) {
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))
                    throw new TypeError();
                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
            }
            return decorator;
        }
        exporter("metadata", metadata);
        /**
         * Define a unique metadata entry on the target.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param metadataValue A value that contains attached metadata.
         * @param target The target object on which to define metadata.
         * @param propertyKey (Optional) The property key for the target.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Reflect.defineMetadata("custom:annotation", options, Example);
         *
         *     // property (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticMethod");
         *
         *     // method (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "method");
         *
         *     // decorator factory as metadata-producing annotation.
         *     function MyAnnotation(options): Decorator {
         *         return (target, key?) => Reflect.defineMetadata("custom:annotation", options, target, key);
         *     }
         *
         */
        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
        }
        exporter("defineMetadata", defineMetadata);
        /**
         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasMetadata", hasMetadata);
        /**
         * Gets a value indicating whether the target object has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasOwnMetadata", hasOwnMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetMetadata(metadataKey, target, propertyKey);
        }
        exporter("getMetadata", getMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("getOwnMetadata", getOwnMetadata);
        /**
         * Gets the metadata keys defined on the target object or its prototype chain.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "method");
         *
         */
        function getMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryMetadataKeys(target, propertyKey);
        }
        exporter("getMetadataKeys", getMetadataKeys);
        /**
         * Gets the unique metadata keys defined on the target object.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "method");
         *
         */
        function getOwnMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryOwnMetadataKeys(target, propertyKey);
        }
        exporter("getOwnMetadataKeys", getOwnMetadataKeys);
        /**
         * Deletes the metadata entry from the target object with the provided key.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata entry was found and deleted; otherwise, false.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.deleteMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function deleteMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return false;
            if (!metadataMap.delete(metadataKey))
                return false;
            if (metadataMap.size > 0)
                return true;
            var targetMetadata = Metadata.get(target);
            targetMetadata.delete(propertyKey);
            if (targetMetadata.size > 0)
                return true;
            Metadata.delete(target);
            return true;
        }
        exporter("deleteMetadata", deleteMetadata);
        function DecorateConstructor(decorators, target) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsConstructor(decorated))
                        throw new TypeError();
                    target = decorated;
                }
            }
            return target;
        }
        function DecorateProperty(decorators, target, propertyKey, descriptor) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target, propertyKey, descriptor);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsObject(decorated))
                        throw new TypeError();
                    descriptor = decorated;
                }
            }
            return descriptor;
        }
        function GetOrCreateMetadataMap(O, P, Create) {
            var targetMetadata = Metadata.get(O);
            if (IsUndefined(targetMetadata)) {
                if (!Create)
                    return undefined;
                targetMetadata = new _Map();
                Metadata.set(O, targetMetadata);
            }
            var metadataMap = targetMetadata.get(P);
            if (IsUndefined(metadataMap)) {
                if (!Create)
                    return undefined;
                metadataMap = new _Map();
                targetMetadata.set(P, metadataMap);
            }
            return metadataMap;
        }
        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata
        function OrdinaryHasMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return true;
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryHasMetadata(MetadataKey, parent, P);
            return false;
        }
        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata
        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return false;
            return ToBoolean(metadataMap.has(MetadataKey));
        }
        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata
        function OrdinaryGetMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return OrdinaryGetOwnMetadata(MetadataKey, O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryGetMetadata(MetadataKey, parent, P);
            return undefined;
        }
        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata
        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return undefined;
            return metadataMap.get(MetadataKey);
        }
        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata
        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);
            metadataMap.set(MetadataKey, MetadataValue);
        }
        // 3.1.6.1 OrdinaryMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys
        function OrdinaryMetadataKeys(O, P) {
            var ownKeys = OrdinaryOwnMetadataKeys(O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (parent === null)
                return ownKeys;
            var parentKeys = OrdinaryMetadataKeys(parent, P);
            if (parentKeys.length <= 0)
                return ownKeys;
            if (ownKeys.length <= 0)
                return parentKeys;
            var set = new _Set();
            var keys = [];
            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {
                var key = ownKeys_1[_i];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {
                var key = parentKeys_1[_a];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            return keys;
        }
        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys
        function OrdinaryOwnMetadataKeys(O, P) {
            var keys = [];
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return keys;
            var keysObj = metadataMap.keys();
            var iterator = GetIterator(keysObj);
            var k = 0;
            while (true) {
                var next = IteratorStep(iterator);
                if (!next) {
                    keys.length = k;
                    return keys;
                }
                var nextValue = IteratorValue(next);
                try {
                    keys[k] = nextValue;
                }
                catch (e) {
                    try {
                        IteratorClose(iterator);
                    }
                    finally {
                        throw e;
                    }
                }
                k++;
            }
        }
        // 6 ECMAScript Data Typ0es and Values
        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values
        function Type(x) {
            if (x === null)
                return 1 /* Null */;
            switch (typeof x) {
                case "undefined": return 0 /* Undefined */;
                case "boolean": return 2 /* Boolean */;
                case "string": return 3 /* String */;
                case "symbol": return 4 /* Symbol */;
                case "number": return 5 /* Number */;
                case "object": return x === null ? 1 /* Null */ : 6 /* Object */;
                default: return 6 /* Object */;
            }
        }
        // 6.1.1 The Undefined Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type
        function IsUndefined(x) {
            return x === undefined;
        }
        // 6.1.2 The Null Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type
        function IsNull(x) {
            return x === null;
        }
        // 6.1.5 The Symbol Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type
        function IsSymbol(x) {
            return typeof x === "symbol";
        }
        // 6.1.7 The Object Type
        // https://tc39.github.io/ecma262/#sec-object-type
        function IsObject(x) {
            return typeof x === "object" ? x !== null : typeof x === "function";
        }
        // 7.1 Type Conversion
        // https://tc39.github.io/ecma262/#sec-type-conversion
        // 7.1.1 ToPrimitive(input [, PreferredType])
        // https://tc39.github.io/ecma262/#sec-toprimitive
        function ToPrimitive(input, PreferredType) {
            switch (Type(input)) {
                case 0 /* Undefined */: return input;
                case 1 /* Null */: return input;
                case 2 /* Boolean */: return input;
                case 3 /* String */: return input;
                case 4 /* Symbol */: return input;
                case 5 /* Number */: return input;
            }
            var hint = PreferredType === 3 /* String */ ? "string" : PreferredType === 5 /* Number */ ? "number" : "default";
            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);
            if (exoticToPrim !== undefined) {
                var result = exoticToPrim.call(input, hint);
                if (IsObject(result))
                    throw new TypeError();
                return result;
            }
            return OrdinaryToPrimitive(input, hint === "default" ? "number" : hint);
        }
        // 7.1.1.1 OrdinaryToPrimitive(O, hint)
        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive
        function OrdinaryToPrimitive(O, hint) {
            if (hint === "string") {
                var toString_1 = O.toString;
                if (IsCallable(toString_1)) {
                    var result = toString_1.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            else {
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var toString_2 = O.toString;
                if (IsCallable(toString_2)) {
                    var result = toString_2.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            throw new TypeError();
        }
        // 7.1.2 ToBoolean(argument)
        // https://tc39.github.io/ecma262/2016/#sec-toboolean
        function ToBoolean(argument) {
            return !!argument;
        }
        // 7.1.12 ToString(argument)
        // https://tc39.github.io/ecma262/#sec-tostring
        function ToString(argument) {
            return "" + argument;
        }
        // 7.1.14 ToPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-topropertykey
        function ToPropertyKey(argument) {
            var key = ToPrimitive(argument, 3 /* String */);
            if (IsSymbol(key))
                return key;
            return ToString(key);
        }
        // 7.2 Testing and Comparison Operations
        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations
        // 7.2.2 IsArray(argument)
        // https://tc39.github.io/ecma262/#sec-isarray
        function IsArray(argument) {
            return Array.isArray
                ? Array.isArray(argument)
                : argument instanceof Object
                    ? argument instanceof Array
                    : Object.prototype.toString.call(argument) === "[object Array]";
        }
        // 7.2.3 IsCallable(argument)
        // https://tc39.github.io/ecma262/#sec-iscallable
        function IsCallable(argument) {
            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.
            return typeof argument === "function";
        }
        // 7.2.4 IsConstructor(argument)
        // https://tc39.github.io/ecma262/#sec-isconstructor
        function IsConstructor(argument) {
            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.
            return typeof argument === "function";
        }
        // 7.2.7 IsPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-ispropertykey
        function IsPropertyKey(argument) {
            switch (Type(argument)) {
                case 3 /* String */: return true;
                case 4 /* Symbol */: return true;
                default: return false;
            }
        }
        // 7.3 Operations on Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-objects
        // 7.3.9 GetMethod(V, P)
        // https://tc39.github.io/ecma262/#sec-getmethod
        function GetMethod(V, P) {
            var func = V[P];
            if (func === undefined || func === null)
                return undefined;
            if (!IsCallable(func))
                throw new TypeError();
            return func;
        }
        // 7.4 Operations on Iterator Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects
        function GetIterator(obj) {
            var method = GetMethod(obj, iteratorSymbol);
            if (!IsCallable(method))
                throw new TypeError(); // from Call
            var iterator = method.call(obj);
            if (!IsObject(iterator))
                throw new TypeError();
            return iterator;
        }
        // 7.4.4 IteratorValue(iterResult)
        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue
        function IteratorValue(iterResult) {
            return iterResult.value;
        }
        // 7.4.5 IteratorStep(iterator)
        // https://tc39.github.io/ecma262/#sec-iteratorstep
        function IteratorStep(iterator) {
            var result = iterator.next();
            return result.done ? false : result;
        }
        // 7.4.6 IteratorClose(iterator, completion)
        // https://tc39.github.io/ecma262/#sec-iteratorclose
        function IteratorClose(iterator) {
            var f = iterator["return"];
            if (f)
                f.call(iterator);
        }
        // 9.1 Ordinary Object Internal Methods and Internal Slots
        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots
        // 9.1.1.1 OrdinaryGetPrototypeOf(O)
        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof
        function OrdinaryGetPrototypeOf(O) {
            var proto = Object.getPrototypeOf(O);
            if (typeof O !== "function" || O === functionPrototype)
                return proto;
            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.
            // Try to determine the superclass constructor. Compatible implementations
            // must either set __proto__ on a subclass constructor to the superclass constructor,
            // or ensure each class has a valid `constructor` property on its prototype that
            // points back to the constructor.
            // If this is not the same as Function.[[Prototype]], then this is definately inherited.
            // This is the case when in ES6 or when using __proto__ in a compatible browser.
            if (proto !== functionPrototype)
                return proto;
            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.
            var prototype = O.prototype;
            var prototypeProto = prototype && Object.getPrototypeOf(prototype);
            if (prototypeProto == null || prototypeProto === Object.prototype)
                return proto;
            // If the constructor was not a function, then we cannot determine the heritage.
            var constructor = prototypeProto.constructor;
            if (typeof constructor !== "function")
                return proto;
            // If we have some kind of self-reference, then we cannot determine the heritage.
            if (constructor === O)
                return proto;
            // we have a pretty good guess at the heritage.
            return constructor;
        }
        // naive Map shim
        function CreateMapPolyfill() {
            var cacheSentinel = {};
            var arraySentinel = [];
            var MapIterator = /** @class */ (function () {
                function MapIterator(keys, values, selector) {
                    this._index = 0;
                    this._keys = keys;
                    this._values = values;
                    this._selector = selector;
                }
                MapIterator.prototype["@@iterator"] = function () { return this; };
                MapIterator.prototype[iteratorSymbol] = function () { return this; };
                MapIterator.prototype.next = function () {
                    var index = this._index;
                    if (index >= 0 && index < this._keys.length) {
                        var result = this._selector(this._keys[index], this._values[index]);
                        if (index + 1 >= this._keys.length) {
                            this._index = -1;
                            this._keys = arraySentinel;
                            this._values = arraySentinel;
                        }
                        else {
                            this._index++;
                        }
                        return { value: result, done: false };
                    }
                    return { value: undefined, done: true };
                };
                MapIterator.prototype.throw = function (error) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    throw error;
                };
                MapIterator.prototype.return = function (value) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    return { value: value, done: true };
                };
                return MapIterator;
            }());
            return /** @class */ (function () {
                function Map() {
                    this._keys = [];
                    this._values = [];
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                }
                Object.defineProperty(Map.prototype, "size", {
                    get: function () { return this._keys.length; },
                    enumerable: true,
                    configurable: true
                });
                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };
                Map.prototype.get = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    return index >= 0 ? this._values[index] : undefined;
                };
                Map.prototype.set = function (key, value) {
                    var index = this._find(key, /*insert*/ true);
                    this._values[index] = value;
                    return this;
                };
                Map.prototype.delete = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    if (index >= 0) {
                        var size = this._keys.length;
                        for (var i = index + 1; i < size; i++) {
                            this._keys[i - 1] = this._keys[i];
                            this._values[i - 1] = this._values[i];
                        }
                        this._keys.length--;
                        this._values.length--;
                        if (key === this._cacheKey) {
                            this._cacheKey = cacheSentinel;
                            this._cacheIndex = -2;
                        }
                        return true;
                    }
                    return false;
                };
                Map.prototype.clear = function () {
                    this._keys.length = 0;
                    this._values.length = 0;
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                };
                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };
                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };
                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };
                Map.prototype["@@iterator"] = function () { return this.entries(); };
                Map.prototype[iteratorSymbol] = function () { return this.entries(); };
                Map.prototype._find = function (key, insert) {
                    if (this._cacheKey !== key) {
                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);
                    }
                    if (this._cacheIndex < 0 && insert) {
                        this._cacheIndex = this._keys.length;
                        this._keys.push(key);
                        this._values.push(undefined);
                    }
                    return this._cacheIndex;
                };
                return Map;
            }());
            function getKey(key, _) {
                return key;
            }
            function getValue(_, value) {
                return value;
            }
            function getEntry(key, value) {
                return [key, value];
            }
        }
        // naive Set shim
        function CreateSetPolyfill() {
            return /** @class */ (function () {
                function Set() {
                    this._map = new _Map();
                }
                Object.defineProperty(Set.prototype, "size", {
                    get: function () { return this._map.size; },
                    enumerable: true,
                    configurable: true
                });
                Set.prototype.has = function (value) { return this._map.has(value); };
                Set.prototype.add = function (value) { return this._map.set(value, value), this; };
                Set.prototype.delete = function (value) { return this._map.delete(value); };
                Set.prototype.clear = function () { this._map.clear(); };
                Set.prototype.keys = function () { return this._map.keys(); };
                Set.prototype.values = function () { return this._map.values(); };
                Set.prototype.entries = function () { return this._map.entries(); };
                Set.prototype["@@iterator"] = function () { return this.keys(); };
                Set.prototype[iteratorSymbol] = function () { return this.keys(); };
                return Set;
            }());
        }
        // naive WeakMap shim
        function CreateWeakMapPolyfill() {
            var UUID_SIZE = 16;
            var keys = HashMap.create();
            var rootKey = CreateUniqueKey();
            return /** @class */ (function () {
                function WeakMap() {
                    this._key = CreateUniqueKey();
                }
                WeakMap.prototype.has = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.has(table, this._key) : false;
                };
                WeakMap.prototype.get = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.get(table, this._key) : undefined;
                };
                WeakMap.prototype.set = function (target, value) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);
                    table[this._key] = value;
                    return this;
                };
                WeakMap.prototype.delete = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? delete table[this._key] : false;
                };
                WeakMap.prototype.clear = function () {
                    // NOTE: not a real clear, just makes the previous data unreachable
                    this._key = CreateUniqueKey();
                };
                return WeakMap;
            }());
            function CreateUniqueKey() {
                var key;
                do
                    key = "@@WeakMap@@" + CreateUUID();
                while (HashMap.has(keys, key));
                keys[key] = true;
                return key;
            }
            function GetOrCreateWeakMapTable(target, create) {
                if (!hasOwn.call(target, rootKey)) {
                    if (!create)
                        return undefined;
                    Object.defineProperty(target, rootKey, { value: HashMap.create() });
                }
                return target[rootKey];
            }
            function FillRandomBytes(buffer, size) {
                for (var i = 0; i < size; ++i)
                    buffer[i] = Math.random() * 0xff | 0;
                return buffer;
            }
            function GenRandomBytes(size) {
                if (typeof Uint8Array === "function") {
                    if (typeof crypto !== "undefined")
                        return crypto.getRandomValues(new Uint8Array(size));
                    if (typeof msCrypto !== "undefined")
                        return msCrypto.getRandomValues(new Uint8Array(size));
                    return FillRandomBytes(new Uint8Array(size), size);
                }
                return FillRandomBytes(new Array(size), size);
            }
            function CreateUUID() {
                var data = GenRandomBytes(UUID_SIZE);
                // mark as random - RFC 4122 § 4.4
                data[6] = data[6] & 0x4f | 0x40;
                data[8] = data[8] & 0xbf | 0x80;
                var result = "";
                for (var offset = 0; offset < UUID_SIZE; ++offset) {
                    var byte = data[offset];
                    if (offset === 4 || offset === 6 || offset === 8)
                        result += "-";
                    if (byte < 16)
                        result += "0";
                    result += byte.toString(16).toLowerCase();
                }
                return result;
            }
        }
        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.
        function MakeDictionary(obj) {
            obj.__ = undefined;
            delete obj.__;
            return obj;
        }
    });
})(Reflect || (Reflect = {}));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js"), __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ })

/******/ });